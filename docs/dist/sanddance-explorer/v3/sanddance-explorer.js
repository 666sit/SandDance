// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"W2ED":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"Xy56":[function(require,module,exports) {
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var l = require("object-assign"),
    n = "function" === typeof Symbol && Symbol.for,
    p = n ? Symbol.for("react.element") : 60103,
    q = n ? Symbol.for("react.portal") : 60106,
    r = n ? Symbol.for("react.fragment") : 60107,
    t = n ? Symbol.for("react.strict_mode") : 60108,
    u = n ? Symbol.for("react.profiler") : 60114,
    v = n ? Symbol.for("react.provider") : 60109,
    w = n ? Symbol.for("react.context") : 60110,
    x = n ? Symbol.for("react.forward_ref") : 60112,
    y = n ? Symbol.for("react.suspense") : 60113,
    z = n ? Symbol.for("react.memo") : 60115,
    A = n ? Symbol.for("react.lazy") : 60116,
    B = "function" === typeof Symbol && Symbol.iterator;

function C(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var D = {
  isMounted: function () {
    return !1;
  },
  enqueueForceUpdate: function () {},
  enqueueReplaceState: function () {},
  enqueueSetState: function () {}
},
    E = {};

function F(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

F.prototype.isReactComponent = {};

F.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(C(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

F.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function G() {}

G.prototype = F.prototype;

function H(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

var I = H.prototype = new G();
I.constructor = H;
l(I, F.prototype);
I.isPureReactComponent = !0;
var J = {
  current: null
},
    K = Object.prototype.hasOwnProperty,
    L = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function M(a, b, c) {
  var e,
      d = {},
      g = null,
      k = null;
  if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
  var f = arguments.length - 2;
  if (1 === f) d.children = c;else if (1 < f) {
    for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];

    d.children = h;
  }
  if (a && a.defaultProps) for (e in f = a.defaultProps, f) void 0 === d[e] && (d[e] = f[e]);
  return {
    $$typeof: p,
    type: a,
    key: g,
    ref: k,
    props: d,
    _owner: J.current
  };
}

function N(a, b) {
  return {
    $$typeof: p,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === p;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var P = /\/+/g,
    Q = [];

function R(a, b, c, e) {
  if (Q.length) {
    var d = Q.pop();
    d.result = a;
    d.keyPrefix = b;
    d.func = c;
    d.context = e;
    d.count = 0;
    return d;
  }

  return {
    result: a,
    keyPrefix: b,
    func: c,
    context: e,
    count: 0
  };
}

function S(a) {
  a.result = null;
  a.keyPrefix = null;
  a.func = null;
  a.context = null;
  a.count = 0;
  10 > Q.length && Q.push(a);
}

function T(a, b, c, e) {
  var d = typeof a;
  if ("undefined" === d || "boolean" === d) a = null;
  var g = !1;
  if (null === a) g = !0;else switch (d) {
    case "string":
    case "number":
      g = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case p:
        case q:
          g = !0;
      }

  }
  if (g) return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
  g = 0;
  b = "" === b ? "." : b + ":";
  if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
    d = a[k];
    var f = b + U(d, k);
    g += T(d, f, c, e);
  } else if (null === a || "object" !== typeof a ? f = null : (f = B && a[B] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) d = d.value, f = b + U(d, k++), g += T(d, f, c, e);else if ("object" === d) throw c = "" + a, Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
  return g;
}

function V(a, b, c) {
  return null == a ? 0 : T(a, "", b, c);
}

function U(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}

function W(a, b) {
  a.func.call(a.context, b, a.count++);
}

function aa(a, b, c) {
  var e = a.result,
      d = a.keyPrefix;
  a = a.func.call(a.context, b, a.count++);
  Array.isArray(a) ? X(a, e, c, function (a) {
    return a;
  }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)), e.push(a));
}

function X(a, b, c, e, d) {
  var g = "";
  null != c && (g = ("" + c).replace(P, "$&/") + "/");
  b = R(b, g, e, d);
  V(a, aa, b);
  S(b);
}

var Y = {
  current: null
};

function Z() {
  var a = Y.current;
  if (null === a) throw Error(C(321));
  return a;
}

var ba = {
  ReactCurrentDispatcher: Y,
  ReactCurrentBatchConfig: {
    suspense: null
  },
  ReactCurrentOwner: J,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: function (a, b, c) {
    if (null == a) return a;
    var e = [];
    X(a, e, null, b, c);
    return e;
  },
  forEach: function (a, b, c) {
    if (null == a) return a;
    b = R(null, null, b, c);
    V(a, W, b);
    S(b);
  },
  count: function (a) {
    return V(a, function () {
      return null;
    }, null);
  },
  toArray: function (a) {
    var b = [];
    X(a, b, null, function (a) {
      return a;
    });
    return b;
  },
  only: function (a) {
    if (!O(a)) throw Error(C(143));
    return a;
  }
};
exports.Component = F;
exports.Fragment = r;
exports.Profiler = u;
exports.PureComponent = H;
exports.StrictMode = t;
exports.Suspense = y;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(C(267, a));
  var e = l({}, a.props),
      d = a.key,
      g = a.ref,
      k = a._owner;

  if (null != b) {
    void 0 !== b.ref && (g = b.ref, k = J.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var f = a.type.defaultProps;

    for (h in b) K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
  }

  var h = arguments.length - 2;
  if (1 === h) e.children = c;else if (1 < h) {
    f = Array(h);

    for (var m = 0; m < h; m++) f[m] = arguments[m + 2];

    e.children = f;
  }
  return {
    $$typeof: p,
    type: a.type,
    key: d,
    ref: g,
    props: e,
    _owner: k
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: w,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: v,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = M;

exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: x,
    render: a
  };
};

exports.isValidElement = O;

exports.lazy = function (a) {
  return {
    $$typeof: A,
    _ctor: a,
    _status: -1,
    _result: null
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: z,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return Z().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return Z().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return Z().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return Z().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return Z().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return Z().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return Z().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return Z().useRef(a);
};

exports.useState = function (a) {
  return Z().useState(a);
};

exports.version = "16.13.1";
},{"object-assign":"W2ED"}],"ccIB":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.production.min.js":"Xy56"}],"GfLt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Layout = void 0;

class Layout {
  constructor(props) {
    this.props = props;
    this.id = props.id;
  }

  getGrouping() {
    return null;
  }

  getAggregateSumOp() {
    return null;
  }

  build() {
    throw 'Not implemented';
  }

}

exports.Layout = Layout;
},{}],"kNZP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorScaleNone = exports.Other = exports.SignalNames = exports.ScaleNames = exports.FieldNames = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const FieldNames = {
  Active: '__SandDance__Active',
  Collapsed: '__SandDance__Collapsed',
  Contains: '__SandDance__Contains',
  Count: '__SandDance__Count',
  Sum: '__SandDance__Sum',
  SumOfCount: '__SandDance__CountSum',
  SumOfSum: '__SandDance__SumSum',
  Selected: '__SandDance__Selected',
  First: '__SandDance__First',
  Last: '__SandDance__Last',
  Top: '__SandDance__Top',
  TopColor: '__SandDance__TopColor',
  TopIndex: '__SandDance__TopIndex',
  PowerBISelectionId: '__SandDance__PowerBISelectionId',
  FacetSearch: '__SandDance__FacetSearch',
  FacetTitle: '__SandDance__FacetTitle',
  Ordinal: '__SandDance__Ordinal',
  WrapCol: '__SandDance__WrapCol',
  WrapRow: '__SandDance__WrapRow',
  Value: '__SandDance__Value',
  OffsetX: '__SandDance__X',
  OffsetY: '__SandDance__Y',
  OffsetHeight: '__SandDance__H',
  OffsetWidth: '__SandDance__W'
};
exports.FieldNames = FieldNames;
const ScaleNames = {
  Color: 'scale_color',
  X: 'scale_x',
  Y: 'scale_y',
  Z: 'scale_z'
}; //Signal names

exports.ScaleNames = ScaleNames;
const SignalNames = {
  ViewportWidth: 'ViewportWidth',
  ViewportHeight: 'ViewportHeight',
  MinCellWidth: 'MinCellWidth',
  MinCellHeight: 'MinCellHeight',
  PlotOffsetLeft: 'PlotOffsetLeft',
  PlotOffsetTop: 'PlotOffsetTop',
  PlotOffsetBottom: 'PlotOffsetBottom',
  PlotOffsetRight: 'PlotOffsetRight',
  PlotHeightIn: 'PlotHeightIn',
  PlotWidthIn: 'PlotWidthIn',
  PlotHeightOut: 'PlotHeightOut',
  PlotWidthOut: 'PlotWidthOut',
  ColorBinCount: 'RoleColor_BinCountSignal',
  ColorReverse: 'RoleColor_ReverseSignal',
  FacetBins: 'RoleFacet_BinsSignal',
  FacetVBins: 'RoleFacetV_BinsSignal',
  FacetPaddingTop: 'FacetPaddingTop',
  FacetPaddingBottom: 'FacetPaddingBottom',
  FacetPaddingLeft: 'FacetPaddingLeft',
  MarkOpacity: 'Mark_OpacitySignal',
  PointSize: 'Chart_PointSizeSignal',
  TextAngleX: 'Text_AngleXSignal',
  TextAngleY: 'Text_AngleYSignal',
  TextScale: 'Text_ScaleSignal',
  TextSize: 'Text_SizeSignal',
  TextTitleSize: 'Text_TitleSizeSignal',
  TreeMapMethod: 'Chart_TreeMapMethodSignal',
  XBins: 'RoleX_BinsSignal',
  YBins: 'RoleY_BinsSignal',
  ZHeight: 'RoleZ_HeightSignal',
  ZGrounded: 'RoleZ_Grounded',
  ZProportion: 'RoleZ_ProportionSignal'
}; //These are special formulaic data values

exports.SignalNames = SignalNames;
const Other = '__Other'; //name of the "no-color" palette

exports.Other = Other;
const ColorScaleNone = 'none';
exports.ColorScaleNone = ColorScaleNone;
},{}],"Nfxo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addAxes = addAxes;
exports.addData = addData;
exports.addMarks = addMarks;
exports.addScale = addScale;
exports.addSignal = addSignal;
exports.addTransforms = addTransforms;
exports.getDataByName = getDataByName;
exports.getGroupBy = getGroupBy;
exports.addOffsets = addOffsets;

function addAxes(scope, ...axis) {
  if (!scope.axes) {
    scope.axes = [];
  }

  scope.axes.push(...axis);
}

function addData(scope, ...data) {
  if (!scope.data) {
    scope.data = [];
  }

  scope.data.push(...data);
}

function addMarks(scope, ...marks) {
  if (!scope.marks) {
    scope.marks = [];
  }

  scope.marks.push(...marks);
}

function addScale(scope, ...scale) {
  if (!scope.scales) {
    scope.scales = [];
  }

  scope.scales.push(...scale);
}

function addSignal(scope, ...signal) {
  if (!scope.signals) {
    scope.signals = [];
  }

  scope.signals.push(...signal);
}

function addTransforms(data, ...transforms) {
  if (!data.transform) {
    data.transform = [];
  }

  data.transform.push(...transforms);
}

function getDataByName(data, dataName) {
  for (let i = 0; i < data.length; i++) {
    if (data[i].name === dataName) return {
      data: data[i],
      index: i
    };
  }
}

function getGroupBy(groupings) {
  const groupby = groupings.map(g => g.groupby);
  return groupby.reduce((acc, val) => acc.concat(val), []);
}

function addOffsets(...offsets) {
  return offsets.filter(Boolean).join(' + ');
}
},{}],"inPN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testForCollapseSelection = testForCollapseSelection;

var _constants = require("./constants");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function testForCollapseSelection() {
  return `datum.${_constants.FieldNames.Collapsed}`;
}
},{"./constants":"kNZP"}],"UF7t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AggregateContainer = void 0;

var _layout = require("./layout");

var _constants = require("../constants");

var _scope = require("../scope");

var _selection = require("../selection");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class AggregateContainer extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const a = this.aggregation = this.getAggregation();
    const p = this.prefix = `agg_${this.id}`;
    this.names = {
      barCount: `${p}_count`,
      aggregateField: `${p}_aggregate_value`,
      globalAggregateExtentSignal: `${p}_${a}_extent`,
      scale: `scale_${p}`,
      extentData: `data_${p}_extent`,
      offsets: `data_${p}_offsets`
    };
  }

  getAggregateSumOp() {
    if (this.aggregation === 'sum') {
      const fieldOp = {
        field: this.props.sumBy.name,
        op: 'sum',
        as: _constants.FieldNames.Sum
      };
      return fieldOp;
    }
  }

  build() {
    const {
      aggregation,
      names,
      props
    } = this;
    const {
      dock,
      globalScope,
      groupings,
      niceScale,
      parentHeight,
      parentScope,
      showAxes
    } = props;
    (0, _scope.addTransforms)(globalScope.data, Object.assign(Object.assign({}, this.getTransforms(aggregation, (0, _scope.getGroupBy)(groupings))), {
      as: [names.aggregateField]
    }), {
      type: 'extent',
      field: names.aggregateField,
      signal: names.globalAggregateExtentSignal
    });
    (0, _scope.addSignal)(globalScope.scope, {
      name: props.globalAggregateMaxExtentSignal,
      update: `${names.globalAggregateExtentSignal}[1]`
    });
    const horizontal = dock === 'left';
    const groupScaled = `scale(${JSON.stringify(names.scale)}, datum[${JSON.stringify(names.aggregateField)}])`;
    const offsets = {
      x: parentScope.offsets.x,
      y: (0, _scope.addOffsets)(parentScope.offsets.y, dock === 'bottom' ? groupScaled : ''),
      h: horizontal ? parentScope.offsets.h : dock === 'top' ? groupScaled : `${parentScope.offsets.h} - ${groupScaled}`,
      w: horizontal ? groupScaled : parentScope.offsets.w
    };
    const scale = {
      type: 'linear',
      name: names.scale,
      domain: [0, {
        signal: props.globalAggregateMaxExtentSignal
      }],
      range: horizontal ? [0, {
        signal: parentScope.sizeSignals.layoutWidth
      }] : [{
        signal: parentScope.sizeSignals.layoutHeight
      }, 0],
      nice: niceScale,
      zero: true,
      reverse: dock === 'top'
    };
    const globalAggregateMaxExtentScaledValue = `scale(${JSON.stringify(names.scale)}, ${props.globalAggregateMaxExtentSignal})`;
    (0, _scope.addSignal)(globalScope.scope, {
      name: props.globalAggregateMaxExtentScaledSignal,
      update: dock === 'bottom' ? `${parentScope.sizeSignals.layoutHeight} - ${globalAggregateMaxExtentScaledValue}` : globalAggregateMaxExtentScaledValue
    }, {
      name: parentHeight,
      update: parentScope.sizeSignals.layoutHeight
    });
    return {
      offsets,
      sizeSignals: horizontal ? {
        layoutHeight: parentScope.sizeSignals.layoutHeight,
        layoutWidth: null
      } : {
        layoutHeight: null,
        layoutWidth: parentScope.sizeSignals.layoutWidth
      },
      globalScales: {
        showAxes,
        scales: {
          x: horizontal ? scale : undefined,
          y: horizontal ? undefined : scale
        }
      },
      encodingRuleMap: horizontal ? {
        x: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: parentScope.offsets.x
        }],
        width: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      } : {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: dock === 'top' ? parentScope.offsets.y : (0, _scope.addOffsets)(parentScope.offsets.y, parentScope.offsets.h)
        }],
        height: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      }
    };
  }

  getTransforms(aggregation, groupby) {
    const trans = {
      type: 'joinaggregate',
      groupby,
      ops: [aggregation]
    };

    if (aggregation === 'sum') {
      trans.fields = [this.props.sumBy.name];
    }

    return trans;
  }

  getAggregation() {
    const {
      props
    } = this;
    let s;

    if (props.dock === 'left') {
      s = props.axesScales.x;
    } else {
      s = props.axesScales.y;
    }

    switch (s.aggregate) {
      case 'sum':
        return 'sum';

      default:
        return 'count';
    }
  }

}

exports.AggregateContainer = AggregateContainer;
},{"./layout":"GfLt","../constants":"kNZP","../scope":"Nfxo","../selection":"inPN"}],"HtEf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.binnable = binnable;

var _constants = require("./constants");

function binnable(prefix, domainDataName, discreteColumn) {
  const {
    column,
    defaultBins,
    maxbins,
    maxbinsSignalDisplayName,
    maxbinsSignalName
  } = discreteColumn;

  if (column.quantitative) {
    const field = `${prefix}_bin_${column.name}`;
    const fieldEnd = `${field}_end`;
    const binSignal = `${field}_bins`;
    const extentSignal = `${field}_bin_extent`;
    domainDataName = `${field}_sequence`; //override the data name

    const extentTransform = {
      type: 'extent',
      field: column.name,
      signal: extentSignal
    };
    const maxbinsSignal = {
      name: maxbinsSignalName,
      value: defaultBins,
      bind: {
        name: maxbinsSignalDisplayName,
        debounce: 50,
        input: 'range',
        min: 1,
        max: maxbins,
        step: 1
      }
    };
    const binTransform = {
      type: 'bin',
      field: column.name,
      as: [field, fieldEnd],
      signal: binSignal,
      extent: {
        signal: extentSignal
      },
      maxbins: {
        signal: maxbinsSignalName
      }
    };
    const dataSequence = {
      name: domainDataName,
      transform: [{
        type: 'sequence',
        start: {
          signal: `${binSignal}.start`
        },
        stop: {
          signal: `${binSignal}.stop`
        },
        step: {
          signal: `${binSignal}.step`
        }
      }, {
        type: 'formula',
        expr: 'datum.data',
        as: field
      }, {
        type: 'formula',
        expr: `datum.data + ${binSignal}.step`,
        as: fieldEnd
      }, {
        type: 'window',
        ops: ['row_number'],
        as: [_constants.FieldNames.Ordinal]
      }, {
        type: 'formula',
        expr: `datum.data === ${binSignal}.start`,
        as: _constants.FieldNames.First
      }, {
        type: 'formula',
        expr: `datum.data === ${binSignal}.stop - ${binSignal}.step`,
        as: _constants.FieldNames.Last
      }]
    };
    return {
      discreteColumn,
      native: false,
      transforms: [extentTransform, binTransform],
      fields: [field, fieldEnd],
      binSignal,
      dataSequence,
      domainDataName,
      maxbinsSignal,
      fullScaleDataname: dataSequence.name
    };
  } else {
    return {
      discreteColumn,
      native: true,
      fields: [column.name],
      domainDataName,
      fullScaleDataname: domainDataName
    };
  }
}
},{"./constants":"kNZP"}],"TTOO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textSignals = textSignals;
exports.colorBinCountSignal = colorBinCountSignal;
exports.colorReverseSignal = colorReverseSignal;
exports.modifySignal = modifySignal;
exports.defaultZProportion = void 0;

var _constants = require("./constants");

const defaultZProportion = 0.6;
exports.defaultZProportion = defaultZProportion;

function textSignals(context, heightSignal) {
  const {
    specViewOptions
  } = context;
  const signals = [{
    name: _constants.SignalNames.ZProportion,
    value: defaultZProportion,
    bind: {
      name: specViewOptions.language.zScaleProportion,
      debounce: 50,
      input: 'range',
      min: 0.2,
      max: 2,
      step: 0.1
    }
  }, {
    name: _constants.SignalNames.ZHeight,
    update: `${heightSignal} * ${_constants.SignalNames.ZProportion}`
  }, {
    name: _constants.SignalNames.TextScale,
    value: 2,
    bind: {
      name: specViewOptions.language.textScaleSignal,
      debounce: 50,
      input: 'range',
      min: 0.5,
      max: 5,
      step: 0.1
    }
  }, {
    name: _constants.SignalNames.TextSize,
    update: `${_constants.SignalNames.TextScale} * 10`
  }, {
    name: _constants.SignalNames.TextTitleSize,
    update: `${_constants.SignalNames.TextScale} * 15`
  }, {
    name: _constants.SignalNames.TextAngleX,
    value: 30,
    bind: {
      name: specViewOptions.language.xAxisTextAngleSignal,
      debounce: 50,
      input: 'range',
      min: 0,
      max: 90,
      step: 1
    }
  }, {
    name: _constants.SignalNames.TextAngleY,
    value: 0,
    bind: {
      name: specViewOptions.language.yAxisTextAngleSignal,
      debounce: 50,
      input: 'range',
      min: -90,
      max: 0,
      step: 1
    }
  }, {
    name: _constants.SignalNames.MarkOpacity,
    value: 1,
    bind: {
      name: specViewOptions.language.markOpacitySignal,
      debounce: 50,
      input: 'range',
      min: 0.1,
      max: 1,
      step: 0.05
    }
  }];
  return signals;
}

function colorBinCountSignal(context) {
  const {
    specViewOptions
  } = context;
  const signal = {
    name: _constants.SignalNames.ColorBinCount,
    value: 7,
    bind: {
      name: specViewOptions.language.colorBinCount,
      input: 'range',
      min: 1,
      max: specViewOptions.maxLegends + 1,
      step: 1
    }
  };
  return signal;
}

function colorReverseSignal(context) {
  const {
    specViewOptions
  } = context;
  const signal = {
    name: _constants.SignalNames.ColorReverse,
    value: false,
    bind: {
      name: specViewOptions.language.colorReverse,
      input: 'checkbox'
    }
  };
  return signal;
}

function modifySignal(s, fn, update) {
  s.update = `${fn}((${s.update}), (${update}))`;
}
},{"./constants":"kNZP"}],"xuzw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Band = void 0;

var _layout = require("./layout");

var _bin = require("../bin");

var _scope = require("../scope");

var _selection = require("../selection");

var _signals = require("../signals");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Band extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `band_${this.id}`;
    this.names = {
      xScale: `scale_${p}_x`,
      yScale: `scale_${p}_y`,
      bandWidth: `${p}_bandwidth`,
      accumulative: `${p}_accumulative`
    };
    this.bin = (0, _bin.binnable)(this.prefix, props.globalScope.data.name, props.groupby);
  }

  getGrouping() {
    return this.bin.fields;
  }

  build() {
    const {
      bin,
      names,
      props
    } = this;
    const {
      globalScope,
      minBandWidth,
      orientation,
      parentHeight,
      parentScope,
      showAxes
    } = props;
    const binField = bin.fields[0];

    if (bin.native === false) {
      (0, _scope.addSignal)(globalScope.scope, bin.maxbinsSignal);
      (0, _scope.addTransforms)(globalScope.data, ...bin.transforms);
      (0, _scope.addData)(globalScope.scope, bin.dataSequence);
    } //TODO don't add this, use existing dataset


    (0, _scope.addData)(globalScope.scope, {
      name: names.accumulative,
      source: bin.fullScaleDataname,
      transform: [{
        type: 'aggregate',
        groupby: this.getGrouping(),
        ops: ['count']
      }]
    });
    const horizontal = orientation === 'horizontal';
    const minCellSignal = horizontal ? globalScope.signals.minCellHeight : globalScope.signals.minCellWidth;
    (0, _signals.modifySignal)(minCellSignal, 'max', `length(data(${JSON.stringify(names.accumulative)})) * ${minBandWidth}`);
    (0, _scope.addSignal)(globalScope.scope, {
      name: names.bandWidth,
      update: `bandwidth(${JSON.stringify(horizontal ? names.yScale : names.xScale)})`
    }, {
      name: parentHeight,
      update: parentScope.sizeSignals.layoutHeight
    });
    const scale = this.getScale(bin, horizontal);
    let encodingRuleMap;

    if (!props.excludeEncodingRuleMap) {
      encodingRuleMap = horizontal ? {
        x: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: parentScope.offsets.x
        }],
        width: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      } : {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: (0, _scope.addOffsets)(parentScope.offsets.y, parentScope.offsets.h)
        }],
        height: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      };
    }

    return {
      offsets: this.getOffset(horizontal, binField),
      sizeSignals: horizontal ? {
        layoutHeight: names.bandWidth,
        layoutWidth: parentScope.sizeSignals.layoutWidth
      } : {
        layoutHeight: parentScope.sizeSignals.layoutHeight,
        layoutWidth: names.bandWidth
      },
      globalScales: {
        showAxes,
        scales: {
          x: horizontal ? undefined : scale,
          y: horizontal ? scale : undefined
        }
      },
      encodingRuleMap
    };
  }

  getOffset(horizontal, binField) {
    const {
      names,
      props
    } = this;
    const {
      parentScope
    } = props;
    return {
      x: (0, _scope.addOffsets)(parentScope.offsets.x, horizontal ? '' : `scale(${JSON.stringify(names.xScale)}, datum[${JSON.stringify(binField)}])`),
      y: (0, _scope.addOffsets)(parentScope.offsets.y, horizontal ? `scale(${JSON.stringify(names.yScale)}, datum[${JSON.stringify(binField)}])` : ''),
      h: horizontal ? names.bandWidth : parentScope.offsets.h,
      w: horizontal ? parentScope.offsets.w : names.bandWidth
    };
  }

  getScale(bin, horizontal) {
    const {
      names
    } = this;
    const {
      parentScope
    } = this.props;
    const binField = bin.fields[0];
    let scale;

    if (horizontal) {
      scale = {
        type: 'band',
        name: names.yScale,
        range: [0, {
          signal: parentScope.sizeSignals.layoutHeight
        }],
        padding: 0.1,
        domain: {
          data: bin.domainDataName,
          field: binField,
          sort: true
        },
        reverse: true
      };
    } else {
      scale = {
        type: 'band',
        name: names.xScale,
        range: [0, {
          signal: parentScope.sizeSignals.layoutWidth
        }],
        padding: 0.1,
        domain: {
          data: bin.domainDataName,
          field: binField,
          sort: true
        }
      };
    }

    return scale;
  }

}

exports.Band = Band;
},{"./layout":"GfLt","../bin":"HtEf","../scope":"Nfxo","../selection":"inPN","../signals":"TTOO"}],"visW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axesOffsetY = exports.axesOffsetX = exports.axesTitlePaddingFacetY = exports.axesTitlePaddingFacetX = exports.axesTitlePaddingY = exports.axesTitlePaddingX = exports.axesTitleLimit = exports.axesLabelLimit = exports.facetPaddingRight = exports.facetPaddingBottom = exports.facetPaddingTop = exports.facetPaddingLeft = exports.minFacetHeight = exports.minFacetWidth = exports.minBarBandWidth = exports.maxbins = exports.defaultBins = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
//TODO move these to options
const defaultBins = 10;
exports.defaultBins = defaultBins;
const maxbins = 100;
exports.maxbins = maxbins;
const minBarBandWidth = 15;
exports.minBarBandWidth = minBarBandWidth;
const minFacetWidth = 140;
exports.minFacetWidth = minFacetWidth;
const minFacetHeight = 180;
exports.minFacetHeight = minFacetHeight;
const facetPaddingLeft = 40;
exports.facetPaddingLeft = facetPaddingLeft;
const facetPaddingTop = 40;
exports.facetPaddingTop = facetPaddingTop;
const facetPaddingBottom = 40;
exports.facetPaddingBottom = facetPaddingBottom;
const facetPaddingRight = 40;
exports.facetPaddingRight = facetPaddingRight;
const axesLabelLimit = 10;
exports.axesLabelLimit = axesLabelLimit;
const axesTitleLimit = 10;
exports.axesTitleLimit = axesTitleLimit;
const axesTitlePaddingX = 30;
exports.axesTitlePaddingX = axesTitlePaddingX;
const axesTitlePaddingY = 60;
exports.axesTitlePaddingY = axesTitlePaddingY;
const axesTitlePaddingFacetX = 69;
exports.axesTitlePaddingFacetX = axesTitlePaddingFacetX;
const axesTitlePaddingFacetY = 92;
exports.axesTitlePaddingFacetY = axesTitlePaddingFacetY;
const axesOffsetX = 120;
exports.axesOffsetX = axesOffsetX;
const axesOffsetY = 120;
exports.axesOffsetY = axesOffsetY;
},{}],"mxMR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearScale = linearScale;
exports.pointScale = pointScale;
exports.binnableColorScale = binnableColorScale;

var _constants = require("./constants");

function linearScale(scaleName, data, field, range, reverse, zero) {
  const scale = {
    name: scaleName,
    type: 'linear',
    range,
    round: true,
    reverse,
    domain: {
      data,
      field
    },
    zero,
    nice: true
  };
  return scale;
}

function pointScale(scaleName, data, range, field, reverse) {
  const scale = {
    name: scaleName,
    type: 'point',
    range,
    domain: {
      data,
      field,
      sort: true
    },
    padding: 0.5
  };

  if (reverse !== undefined) {
    scale.reverse = reverse;
  }

  return scale;
}

function binnableColorScale(scaleName, colorBin, data, field, scheme) {
  scheme = scheme || _constants.ColorScaleNone;
  const domain = {
    data,
    field
  };
  const range = {
    scheme
  };
  const reverse = {
    signal: _constants.SignalNames.ColorReverse
  };

  if (colorBin !== 'continuous') {
    range.count = {
      signal: _constants.SignalNames.ColorBinCount
    };
  }

  switch (colorBin) {
    case 'continuous':
      {
        const sequentialScale = {
          name: scaleName,
          type: 'linear',
          domain,
          range,
          reverse
        };
        return sequentialScale;
      }

    case 'quantile':
      {
        const quantileScale = {
          name: scaleName,
          type: 'quantile',
          domain,
          range,
          reverse
        };
        return quantileScale;
      }

    default:
      {
        const quantizeScale = {
          name: scaleName,
          type: 'quantize',
          domain,
          range,
          reverse
        };
        return quantizeScale;
      }
  }
}
},{"./constants":"kNZP"}],"GmqS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addZScale = addZScale;

var _scope = require("./scope");

var _scales = require("./scales");

var _constants = require("./constants");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function addZScale(z, zSize, globalScope, zScaleName) {
  if (z) {
    const zRange = [0, {
      signal: `(${zSize}) * ${_constants.SignalNames.ZProportion}`
    }];
    (0, _scope.addScale)(globalScope.scope, z.quantitative ? (0, _scales.linearScale)(zScaleName, globalScope.data.name, z.name, zRange, false, true) : (0, _scales.pointScale)(zScaleName, globalScope.data.name, zRange, z.name, false));
  }
}
},{"./scope":"Nfxo","./scales":"mxMR","./constants":"kNZP"}],"Jhnx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Square = void 0;

var _layout = require("./layout");

var _constants = require("../constants");

var _scope = require("../scope");

var _selection = require("../selection");

var _zBase = require("../zBase");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Square extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `square_${this.id}`;
    this.names = {
      bandWidth: this.getBandWidth(),
      maxGroupField: `${p}_max_group`,
      maxGroupSignal: `${p}_max_grouping`,
      stack0: `${p}_stack0`,
      stack1: `${p}_stack1`,
      zScale: `scale_${p}_z`
    };
  }

  build() {
    const {
      names,
      prefix,
      props
    } = this;
    const {
      fillDirection,
      globalScope,
      groupings,
      parentScope,
      collapseYHeight,
      sortBy,
      z
    } = props;
    let {
      zSize
    } = props;
    zSize = zSize || parentScope.sizeSignals.layoutHeight;
    (0, _zBase.addZScale)(z, zSize, globalScope, names.zScale);
    (0, _scope.addTransforms)(globalScope.data, Object.assign({
      type: 'stack',
      groupby: (0, _scope.getGroupBy)(groupings),
      as: [names.stack0, names.stack1]
    }, sortBy && {
      sort: {
        field: sortBy.name,
        order: 'ascending'
      }
    }));
    const {
      gap,
      levelSize,
      size,
      squaresPerBand
    } = this.addSignals();
    const heightSignal = {
      signal: fillDirection === 'down-right' ? size : levelSize
    };
    const mark = {
      name: prefix,
      type: 'rect',
      from: {
        data: globalScope.markDataName
      },
      encode: {
        update: Object.assign({
          height: collapseYHeight ? [{
            test: (0, _selection.testForCollapseSelection)(),
            value: 0
          }, heightSignal] : heightSignal,
          width: {
            signal: fillDirection === 'down-right' ? levelSize : size
          }
        }, z && {
          z: {
            value: 0
          },
          depth: [{
            test: (0, _selection.testForCollapseSelection)(),
            value: 0
          }, {
            scale: names.zScale,
            field: z.name
          }]
        })
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, mark);
    const {
      tx,
      ty
    } = this.transformXY(gap, levelSize, squaresPerBand);
    return Object.assign({
      offsets: {
        x: (0, _scope.addOffsets)(parentScope.offsets.x, tx.expr),
        y: (0, _scope.addOffsets)(parentScope.offsets.y, ty.expr),
        h: size,
        w: size
      },
      mark,
      sizeSignals: {
        layoutHeight: size,
        layoutWidth: size
      }
    }, collapseYHeight && {
      encodingRuleMap: {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: parentScope.offsets.y
        }]
      }
    });
  }

  getBandWidth() {
    const {
      offsets
    } = this.props.parentScope;

    switch (this.props.fillDirection) {
      case 'down-right':
        return offsets.h;

      default:
        return offsets.w;
    }
  }

  addSignals() {
    const {
      names,
      props
    } = this;
    const {
      fillDirection,
      globalScope,
      groupings,
      parentScope
    } = props;
    let {
      maxGroupedFillSize,
      maxGroupedUnits
    } = props;

    if (!maxGroupedUnits) {
      if (groupings) {
        (0, _scope.addTransforms)(globalScope.data, {
          type: 'joinaggregate',
          groupby: (0, _scope.getGroupBy)(groupings),
          ops: ['count'],
          as: [names.maxGroupField]
        }, {
          type: 'extent',
          field: names.maxGroupField,
          signal: names.maxGroupSignal
        });
        maxGroupedUnits = `(${names.maxGroupSignal}[1])`;
      } else {
        maxGroupedUnits = `length(data(${JSON.stringify(globalScope.data.name)}))`;
      }
    }

    if (!maxGroupedFillSize) {
      maxGroupedFillSize = fillDirection === 'down-right' ? parentScope.offsets.w : parentScope.offsets.h;
    }

    const aspect = `((${names.bandWidth}) / (${maxGroupedFillSize}))`;
    const squaresPerBand = `ceil(sqrt(${maxGroupedUnits} * ${aspect}))`;
    const gap = `min(0.1 * (${names.bandWidth} / (${squaresPerBand} - 1)), 1)`;
    const size = `((${names.bandWidth} / ${squaresPerBand}) - ${gap})`;
    const levels = `ceil(${maxGroupedUnits} / ${squaresPerBand})`;
    const levelSize = `(((${maxGroupedFillSize}) / ${levels}) - ${gap})`;
    return {
      gap,
      levelSize,
      size,
      squaresPerBand
    };
  }

  transformXY(gap, levelSize, squaresPerBand) {
    const {
      names,
      prefix
    } = this;
    const compartment = `${names.bandWidth} / ${squaresPerBand} * ((datum[${JSON.stringify(names.stack0)}]) % ${squaresPerBand})`;
    const level = `floor((datum[${JSON.stringify(names.stack0)}]) / ${squaresPerBand})`;
    const {
      fillDirection,
      parentScope
    } = this.props;
    const tx = {
      type: 'formula',
      expr: null,
      as: `${prefix}_${_constants.FieldNames.OffsetX}`
    };
    const ty = {
      type: 'formula',
      expr: null,
      as: `${prefix}_${_constants.FieldNames.OffsetY}`
    };

    switch (fillDirection) {
      case 'down-right':
        {
          tx.expr = `${level} * (${levelSize} + ${gap})`;
          ty.expr = compartment;
          break;
        }

      case 'right-up':
        {
          tx.expr = compartment;
          ty.expr = `${parentScope.offsets.h} - ${levelSize} - ${level} * (${levelSize} + ${gap})`;
          break;
        }

      case 'right-down':
      default:
        {
          tx.expr = compartment;
          ty.expr = `${level} * (${levelSize} + ${gap})`;
          break;
        }
    }

    return {
      tx,
      ty
    };
  }

}

exports.Square = Square;
},{"./layout":"GfLt","../constants":"kNZP","../scope":"Nfxo","../selection":"inPN","../zBase":"GmqS"}],"vr0D":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Strip = void 0;

var _layout = require("./layout");

var _constants = require("../constants");

var _scope = require("../scope");

var _selection = require("../selection");

var _zBase = require("../zBase");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Strip extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `strip_${this.id}`;
    this.names = {
      firstField: `${p}${_constants.FieldNames.First}`,
      lastField: `${p}${_constants.FieldNames.Last}`,
      valueField: `${p}${_constants.FieldNames.Value}`,
      scale: `scale_${p}`,
      zScale: `scale_${p}_z`
    };
  }

  build() {
    const {
      names,
      prefix,
      props
    } = this;
    const {
      addPercentageScale,
      globalScope,
      groupings,
      orientation,
      size,
      sort,
      sortOrder,
      parentScope,
      z
    } = props;
    let {
      zSize
    } = props;
    zSize = zSize || parentScope.sizeSignals.layoutHeight;
    (0, _zBase.addZScale)(z, zSize, globalScope, names.zScale);
    const horizontal = orientation === 'horizontal';
    const transform = [];

    if (sort) {
      transform.push({
        type: 'collect',
        sort: {
          field: sort.name,
          order: sortOrder
        }
      });
    }

    let stackField;

    if (size) {
      stackField = size.name;
      transform.push({
        type: 'filter',
        expr: `datum[${JSON.stringify(size.name)}] > 0`
      });
    } else {
      stackField = names.valueField;
      transform.push({
        type: 'formula',
        expr: '1',
        as: stackField
      });
    }

    const stackTransform = {
      type: 'stack',
      field: stackField,
      offset: 'normalize',
      as: [names.firstField, names.lastField]
    };

    if (groupings.length) {
      stackTransform.groupby = (0, _scope.getGroupBy)(groupings);
    }

    transform.push(stackTransform);
    (0, _scope.addTransforms)(globalScope.data, ...transform);
    const span = [names.lastField, names.firstField].map(f => `datum[${JSON.stringify(f)}]`).join(' - ');
    const offsets = {
      x: (0, _scope.addOffsets)(parentScope.offsets.x, horizontal ? `datum[${JSON.stringify(names.firstField)}] * (${parentScope.offsets.w})` : ''),
      y: (0, _scope.addOffsets)(parentScope.offsets.y, horizontal ? '' : `datum[${JSON.stringify(names.firstField)}] * (${parentScope.offsets.h})`),
      h: horizontal ? parentScope.offsets.h : `(${span}) * (${parentScope.offsets.h})`,
      w: horizontal ? `(${span}) * (${parentScope.offsets.w})` : parentScope.offsets.w
    };
    const mark = {
      name: prefix,
      type: 'rect',
      from: {
        data: globalScope.markDataName
      },
      encode: {
        update: Object.assign({
          height: {
            signal: offsets.h
          },
          width: {
            signal: offsets.w
          }
        }, z && {
          z: {
            value: 0
          },
          depth: [{
            test: (0, _selection.testForCollapseSelection)(),
            value: 0
          }, {
            scale: names.zScale,
            field: z.name
          }]
        })
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, mark);
    let percentageScale;

    if (addPercentageScale) {
      percentageScale = {
        type: 'linear',
        name: names.scale,
        domain: [0, 100],
        range: horizontal ? [0, {
          signal: parentScope.sizeSignals.layoutWidth
        }] : [{
          signal: parentScope.sizeSignals.layoutHeight
        }, 0]
      };
    }

    return {
      globalScales: {
        showAxes: true,
        scales: {
          x: horizontal ? percentageScale : undefined,
          y: horizontal ? undefined : percentageScale
        }
      },
      offsets,
      sizeSignals: {
        layoutHeight: null,
        layoutWidth: null
      },
      mark
    };
  }

}

exports.Strip = Strip;
},{"./layout":"GfLt","../constants":"kNZP","../scope":"Nfxo","../selection":"inPN","../zBase":"GmqS"}],"utMY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Treemap = void 0;

var _layout = require("./layout");

var _constants = require("../constants");

var _scope = require("../scope");

var _selection = require("../selection");

var _zBase = require("../zBase");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Treemap extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `treemap_${this.id}`;
    this.names = {
      dataName: `data_${p}`,
      dataHeightWidth: `data_${p}_hw`,
      dataExtents: `data_${p}_extents`,
      dataFacet: `data_${p}_facet`,
      dataFacetMark: `data_${p}_facetMark`,
      fieldChildren: `${p}_children`,
      fieldDepth: `${p}_depth`,
      fieldX0: `${p}_x0`,
      fieldX1: `${p}_x1`,
      fieldY0: `${p}_y0`,
      fieldY1: `${p}_y1`,
      fieldHeight: `${p}_h`,
      fieldWidth: `${p}_w`,
      heightExtent: `${p}_heightExtent`,
      widthExtent: `${p}_widthExtent`,
      zScale: `scale_${p}_z`
    };
  }

  build() {
    const {
      names,
      props
    } = this;
    const {
      globalScope,
      parentScope,
      treeMapMethod,
      z
    } = props;
    let {
      zSize
    } = props;
    zSize = zSize || parentScope.sizeSignals.layoutHeight;
    (0, _zBase.addZScale)(z, zSize, globalScope, names.zScale);
    const offsets = {
      x: (0, _scope.addOffsets)(parentScope.offsets.x, fn(names.fieldX0)),
      y: (0, _scope.addOffsets)(parentScope.offsets.y, fn(names.fieldY0)),
      h: subtract(names.fieldY1, names.fieldY0),
      w: subtract(names.fieldX1, names.fieldX0)
    };
    const mark = this.transformedMark(offsets);
    (0, _scope.addSignal)(globalScope.scope, {
      name: _constants.SignalNames.TreeMapMethod,
      value: 'squarify',
      bind: {
        name: treeMapMethod,
        input: 'select',
        options: ['squarify', 'binary']
      }
    });
    return {
      mark,
      offsets,
      sizeSignals: {
        layoutHeight: null,
        layoutWidth: null
      }
    };
  }

  transformedMark(offsets) {
    const {
      names,
      props
    } = this;
    const {
      globalScope,
      groupings,
      parentScope
    } = props;

    if (groupings.length) {
      //treemap transform can't have it's boundary size grouped, so we need to facet the data.
      (0, _scope.addData)(globalScope.scope, {
        name: names.dataHeightWidth,
        source: globalScope.markDataName,
        transform: [{
          type: 'formula',
          expr: parentScope.offsets.h,
          as: names.fieldHeight
        }, {
          type: 'formula',
          expr: parentScope.offsets.w,
          as: names.fieldWidth
        }]
      });
      const treemapData = {
        name: names.dataFacetMark,
        source: names.dataFacet
      };
      const facets = {
        type: 'group',
        from: {
          facet: {
            name: names.dataFacet,
            data: names.dataHeightWidth,
            groupby: (0, _scope.getGroupBy)(groupings)
          }
        },
        data: [{
          name: names.dataExtents,
          source: names.dataFacet,
          transform: [{
            type: 'extent',
            field: names.fieldHeight,
            signal: names.heightExtent
          }, {
            type: 'extent',
            field: names.fieldWidth,
            signal: names.widthExtent
          }]
        }, treemapData]
      };
      globalScope.markDataName = names.dataFacetMark;
      (0, _scope.addMarks)(globalScope.markGroup, facets);
      this.treemapTransform(treemapData, `${names.widthExtent}[0]`, `${names.heightExtent}[0]`);
      return this.addMark(offsets, facets, globalScope.markDataName);
    } else {
      this.treemapTransform(globalScope.data, parentScope.offsets.w, parentScope.offsets.h);
      return this.addMark(offsets, globalScope.markGroup, globalScope.markDataName);
    }
  }

  addMark(offsets, markParent, markDataName) {
    const {
      names,
      prefix,
      props
    } = this;
    const {
      z
    } = props;
    const mark = {
      name: prefix,
      type: 'rect',
      from: {
        data: markDataName
      },
      encode: {
        update: Object.assign({
          width: {
            signal: offsets.w
          },
          height: {
            signal: offsets.h
          }
        }, z && {
          z: {
            value: 0
          },
          depth: [{
            test: (0, _selection.testForCollapseSelection)(),
            value: 0
          }, {
            scale: names.zScale,
            field: z.name
          }]
        })
      }
    };
    (0, _scope.addMarks)(markParent, mark);
    return mark;
  }

  treemapTransform(treemapData, widthSignal, heightSignal) {
    const {
      names,
      props
    } = this;
    const {
      group,
      size
    } = props;
    (0, _scope.addTransforms)(treemapData, {
      type: 'filter',
      expr: `datum[${JSON.stringify(size.name)}] > 0`
    }, {
      type: 'nest',
      keys: [group && group.name || '__NONE__']
    }, {
      type: 'treemap',
      field: size.name,
      sort: {
        field: 'value',
        order: 'descending'
      },
      round: true,
      method: {
        signal: _constants.SignalNames.TreeMapMethod
      },
      paddingInner: 1,
      paddingOuter: 0,
      size: [{
        signal: widthSignal
      }, {
        signal: heightSignal
      }],
      as: [names.fieldX0, names.fieldY0, names.fieldX1, names.fieldY1, names.fieldDepth, names.fieldChildren]
    });
  }

}

exports.Treemap = Treemap;

function fn(n) {
  return `datum[${JSON.stringify(n)}]`;
}

function subtract(...fields) {
  return fields.map(n => fn(n)).join(' - ');
}
},{"./layout":"GfLt","../constants":"kNZP","../scope":"Nfxo","../selection":"inPN","../zBase":"GmqS"}],"PsHp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _aggregateContainer = require("../layouts/aggregateContainer");

var _band = require("../layouts/band");

var _defaults = require("../defaults");

var _constants = require("../constants");

var _square = require("../layouts/square");

var _strip = require("../layouts/strip");

var _treemap = require("../layouts/treemap");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function _default(specContext) {
  const {
    insight,
    specColumns,
    specViewOptions
  } = specContext;
  const {
    language
  } = specViewOptions;
  const bandProps = {
    orientation: 'horizontal',
    groupby: {
      column: specColumns.y,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.YBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.YMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'bandParentHeight'
  };
  const x = {
    title: null
  };
  const axisScales = {
    x,
    y: {
      title: specColumns.y && specColumns.y.name
    },
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  const layouts = [{
    layoutClass: _band.Band,
    props: bandProps
  }];

  if (insight.totalStyle === 'sum-strip-percent') {
    x.aggregate = 'percent';
    x.title = language.percent;
    const stripProps = {
      addPercentageScale: true,
      sortOrder: 'ascending',
      orientation: 'horizontal',
      size: specColumns.size,
      sort: specColumns.sort,
      z: specColumns.z,
      zSize: bandProps.parentHeight
    };
    layouts.push({
      layoutClass: _strip.Strip,
      props: stripProps
    });
  } else {
    const aggProps = {
      niceScale: true,
      dock: 'left',
      globalAggregateMaxExtentSignal: 'aggMaxExtent',
      globalAggregateMaxExtentScaledSignal: 'aggMaxExtentScaled',
      parentHeight: 'aggParentHeight',
      sumBy: specColumns.size,
      showAxes: true
    };
    layouts.push({
      layoutClass: _aggregateContainer.AggregateContainer,
      props: aggProps
    });

    switch (insight.totalStyle) {
      case 'sum-treemap':
        {
          x.aggregate = 'sum';
          x.title = language.sum;
          const treemapProps = {
            corner: 'top-left',
            size: specColumns.size,
            treeMapMethod: specViewOptions.language.treeMapMethod,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _treemap.Treemap,
            props: treemapProps
          });
          break;
        }

      case 'sum-strip':
        {
          x.aggregate = 'sum';
          x.title = language.sum;
          const stripProps = {
            sortOrder: 'ascending',
            orientation: 'horizontal',
            size: specColumns.size,
            sort: specColumns.sort,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _strip.Strip,
            props: stripProps
          });
          break;
        }

      case 'count-strip':
        {
          x.aggregate = 'count';
          x.title = language.count;
          const stripProps = {
            sortOrder: 'ascending',
            orientation: 'horizontal',
            size: specColumns.size,
            sort: specColumns.sort,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _strip.Strip,
            props: stripProps
          });
          break;
        }

      default:
        {
          x.aggregate = 'count';
          x.title = language.count;
          const squareProps = {
            sortBy: specColumns.sort,
            fillDirection: 'down-right',
            z: specColumns.z,
            maxGroupedUnits: aggProps.globalAggregateMaxExtentSignal,
            maxGroupedFillSize: aggProps.globalAggregateMaxExtentScaledSignal,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _square.Square,
            props: squareProps
          });
          break;
        }
    }
  }

  return {
    axisScales,
    layouts,
    specCapabilities: {
      countsAndSums: true,
      percentage: true,
      roles: [{
        role: 'y',
        binnable: true,
        axisSelection: specColumns.y && specColumns.y.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.YBins]
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'size',
        allowNone: true,
        excludeCategoric: true,
        signals: [_constants.SignalNames.TreeMapMethod]
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../layouts/aggregateContainer":"UF7t","../layouts/band":"xuzw","../defaults":"visW","../constants":"kNZP","../layouts/square":"Jhnx","../layouts/strip":"vr0D","../layouts/treemap":"utMY"}],"AVzi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _aggregateContainer = require("../layouts/aggregateContainer");

var _band = require("../layouts/band");

var _defaults = require("../defaults");

var _constants = require("../constants");

var _square = require("../layouts/square");

var _strip = require("../layouts/strip");

var _treemap = require("../layouts/treemap");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function _default(specContext) {
  const {
    insight,
    specColumns,
    specViewOptions
  } = specContext;
  const {
    language
  } = specViewOptions;
  const bandProps = {
    orientation: 'vertical',
    groupby: {
      column: specColumns.x,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.XBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.XMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'bandParentHeight'
  };
  const y = {
    title: null
  };
  const axisScales = {
    x: {
      title: specColumns.x && specColumns.x.name
    },
    y,
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  const layouts = [{
    layoutClass: _band.Band,
    props: bandProps
  }];

  if (insight.totalStyle === 'sum-strip-percent') {
    y.aggregate = 'percent';
    y.title = language.percent;
    const stripProps = {
      addPercentageScale: true,
      sortOrder: 'descending',
      orientation: 'vertical',
      size: specColumns.size,
      sort: specColumns.sort,
      z: specColumns.z,
      zSize: bandProps.parentHeight
    };
    layouts.push({
      layoutClass: _strip.Strip,
      props: stripProps
    });
  } else {
    const aggProps = {
      niceScale: true,
      dock: 'bottom',
      globalAggregateMaxExtentSignal: 'aggMaxExtent',
      globalAggregateMaxExtentScaledSignal: 'aggMaxExtentScaled',
      parentHeight: 'aggParentHeight',
      sumBy: specColumns.size,
      showAxes: true
    };
    layouts.push({
      layoutClass: _aggregateContainer.AggregateContainer,
      props: aggProps
    });

    switch (insight.totalStyle) {
      case 'sum-treemap':
        {
          y.aggregate = 'sum';
          y.title = language.sum;
          const treemapProps = {
            corner: 'bottom-left',
            size: specColumns.size,
            treeMapMethod: specViewOptions.language.treeMapMethod,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _treemap.Treemap,
            props: treemapProps
          });
          break;
        }

      case 'sum-strip':
        {
          y.aggregate = 'sum';
          y.title = language.sum;
          const stripProps = {
            sortOrder: 'descending',
            orientation: 'vertical',
            size: specColumns.size,
            sort: specColumns.sort,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _strip.Strip,
            props: stripProps
          });
          break;
        }

      case 'count-strip':
        {
          y.aggregate = 'count';
          y.title = language.count;
          const stripProps = {
            sortOrder: 'descending',
            orientation: 'vertical',
            sort: specColumns.sort,
            z: specColumns.z,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _strip.Strip,
            props: stripProps
          });
          break;
        }

      default:
        {
          y.aggregate = 'count';
          y.title = language.count;
          const squareProps = {
            sortBy: specColumns.sort,
            fillDirection: 'right-up',
            z: specColumns.z,
            maxGroupedUnits: aggProps.globalAggregateMaxExtentSignal,
            maxGroupedFillSize: aggProps.globalAggregateMaxExtentScaledSignal,
            zSize: aggProps.parentHeight
          };
          layouts.push({
            layoutClass: _square.Square,
            props: squareProps
          });
          break;
        }
    }
  }

  return {
    axisScales,
    layouts,
    specCapabilities: {
      countsAndSums: true,
      percentage: true,
      roles: [{
        role: 'x',
        binnable: true,
        axisSelection: specColumns.x && specColumns.x.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.XBins]
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'size',
        allowNone: true,
        excludeCategoric: true,
        signals: [_constants.SignalNames.TreeMapMethod]
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../layouts/aggregateContainer":"UF7t","../layouts/band":"xuzw","../defaults":"visW","../constants":"kNZP","../layouts/square":"Jhnx","../layouts/strip":"vr0D","../layouts/treemap":"utMY"}],"xftz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AggregateSquare = void 0;

var _layout = require("./layout");

var _scope = require("../scope");

var _selection = require("../selection");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class AggregateSquare extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const a = this.props.aggregation;
    const p = this.prefix = `agg_${this.id}`;
    this.names = {
      barCount: `${p}_count`,
      aggregateField: `${p}_aggregate_value`,
      globalAggregateExtentSignal: `${p}_${a}_extent`,
      extentData: `data_${p}_extent`
    };
  }

  build() {
    const {
      names,
      props
    } = this;
    const {
      aggregation,
      globalScope,
      groupings,
      onBuild,
      parentHeight,
      parentScope
    } = props;
    const {
      sizeSignals
    } = parentScope;
    (0, _scope.addTransforms)(globalScope.data, Object.assign(Object.assign({}, this.getTransforms(aggregation, (0, _scope.getGroupBy)(groupings))), {
      as: [names.aggregateField]
    }), {
      type: 'extent',
      field: names.aggregateField,
      signal: names.globalAggregateExtentSignal
    });
    const localAggregateMaxExtent = `datum[${JSON.stringify(names.aggregateField)}]`;
    const squareMaxSide = `min((${sizeSignals.layoutHeight}), (${sizeSignals.layoutWidth}))`;
    const squareMaxArea = `(${[squareMaxSide, squareMaxSide].join(' * ')})`;
    const shrinkRatio = `((${localAggregateMaxExtent}) / (${names.globalAggregateExtentSignal}[1]))`;
    const squareArea = `(${[squareMaxArea, shrinkRatio].join(' * ')})`;
    const squareSide = `sqrt(${squareArea})`;
    const localAggregateMaxExtentScaled = squareSide;
    onBuild && onBuild(localAggregateMaxExtent, localAggregateMaxExtentScaled);
    (0, _scope.addSignal)(globalScope.scope, {
      name: parentHeight,
      update: sizeSignals.layoutHeight
    });
    const offsets = {
      x: (0, _scope.addOffsets)(parentScope.offsets.x, `(${parentScope.offsets.w} - ${squareSide}) / 2`),
      y: (0, _scope.addOffsets)(parentScope.offsets.y, `(${parentScope.offsets.h} - ${squareSide}) / 2`),
      h: squareSide,
      w: squareSide
    };
    return {
      offsets,
      sizeSignals: {
        layoutHeight: null,
        layoutWidth: null
      },
      globalScales: {
        showAxes: false,
        scales: {}
      },
      encodingRuleMap: {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: offsets.y
        }],
        height: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      }
    };
  }

  getTransforms(aggregation, groupby) {
    const trans = {
      type: 'joinaggregate',
      groupby,
      ops: [aggregation]
    };

    if (aggregation === 'sum') {
      trans.fields = [this.props.sumBy.name];
    }

    return trans;
  }

}

exports.AggregateSquare = AggregateSquare;
},{"./layout":"GfLt","../scope":"Nfxo","../selection":"inPN"}],"PDD1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _aggregateSquare = require("../layouts/aggregateSquare");

var _band = require("../layouts/band");

var _defaults = require("../defaults");

var _constants = require("../constants");

var _square = require("../layouts/square");

var _strip = require("../layouts/strip");

var _treemap = require("../layouts/treemap");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function _default(specContext) {
  const {
    insight,
    specColumns,
    specViewOptions
  } = specContext;
  const axisScales = {
    x: {
      title: specColumns.x && specColumns.x.name
    },
    y: {
      title: specColumns.y && specColumns.y.name
    },
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  const hBandProps = {
    excludeEncodingRuleMap: true,
    orientation: 'horizontal',
    groupby: {
      column: specColumns.y,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.YBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.YMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'hBandParentHeight'
  };
  const vBandProps = {
    excludeEncodingRuleMap: true,
    orientation: 'vertical',
    groupby: {
      column: specColumns.x,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.XBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.XMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'vBandParentHeight'
  };
  const aggProps = {
    onBuild: null,
    parentHeight: 'aggParentHeight',
    aggregation: null,
    sumBy: specColumns.size
  };
  const layouts = [{
    layoutClass: _band.Band,
    props: vBandProps
  }, {
    layoutClass: _band.Band,
    props: hBandProps
  }, {
    layoutClass: _aggregateSquare.AggregateSquare,
    props: aggProps
  }];

  switch (insight.totalStyle) {
    case 'sum-treemap':
      {
        aggProps.aggregation = 'sum';
        const treemapProps = {
          corner: 'bottom-left',
          size: specColumns.size,
          treeMapMethod: specViewOptions.language.treeMapMethod,
          z: specColumns.z,
          zSize: aggProps.parentHeight
        };
        layouts.push({
          layoutClass: _treemap.Treemap,
          props: treemapProps
        });
        break;
      }

    case 'sum-strip':
      {
        aggProps.aggregation = 'sum';
        const stripProps = {
          sortOrder: 'ascending',
          orientation: 'vertical',
          size: specColumns.size,
          sort: specColumns.sort,
          z: specColumns.z,
          zSize: aggProps.parentHeight
        };
        layouts.push({
          layoutClass: _strip.Strip,
          props: stripProps
        });
        break;
      }

    case 'count-strip':
      {
        aggProps.aggregation = 'count';
        const stripProps = {
          sortOrder: 'ascending',
          orientation: 'vertical',
          sort: specColumns.sort,
          z: specColumns.z,
          zSize: aggProps.parentHeight
        };
        layouts.push({
          layoutClass: _strip.Strip,
          props: stripProps
        });
        break;
      }

    default:
      {
        aggProps.aggregation = 'count';
        const squareProps = {
          sortBy: specColumns.sort,
          fillDirection: 'right-down',
          z: specColumns.z,
          maxGroupedUnits: null,
          maxGroupedFillSize: null,
          zSize: aggProps.parentHeight
        };

        aggProps.onBuild = (aggMaxExtent, aggMaxExtentScaled) => {
          squareProps.maxGroupedUnits = aggMaxExtent;
          squareProps.maxGroupedFillSize = aggMaxExtentScaled;
        };

        layouts.push({
          layoutClass: _square.Square,
          props: squareProps
        });
        break;
      }
  }

  return {
    axisScales,
    layouts,
    specCapabilities: {
      countsAndSums: true,
      roles: [{
        role: 'x',
        binnable: true,
        axisSelection: specColumns.x && specColumns.x.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.XBins]
      }, {
        role: 'y',
        binnable: true,
        axisSelection: specColumns.y && specColumns.y.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.YBins]
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'size',
        allowNone: true,
        excludeCategoric: true,
        signals: [_constants.SignalNames.TreeMapMethod]
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../layouts/aggregateSquare":"xftz","../layouts/band":"xuzw","../defaults":"visW","../constants":"kNZP","../layouts/square":"Jhnx","../layouts/strip":"vr0D","../layouts/treemap":"utMY"}],"ys7l":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constants = require("../constants");

var _square = require("../layouts/square");

function _default(specContext) {
  const {
    specColumns
  } = specContext;
  const squareProps = {
    sortBy: specColumns.sort,
    fillDirection: 'right-down',
    z: specColumns.z,
    collapseYHeight: true
  };
  const axisScales = {
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  return {
    axisScales,
    layouts: [{
      layoutClass: _square.Square,
      props: squareProps
    }],
    specCapabilities: {
      countsAndSums: false,
      roles: [{
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../constants":"kNZP","../layouts/square":"Jhnx"}],"WwUS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scatter = void 0;

var _layout = require("./layout");

var _constants = require("../constants");

var _scales = require("../scales");

var _scope = require("../scope");

var _selection = require("../selection");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Scatter extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `scatter_${this.id}`;
    this.names = {
      aggregateData: `data_${p}_aggregate`,
      markData: `data_${p}_mark`,
      xScale: `scale_${p}_x`,
      yScale: `scale_${p}_y`,
      zScale: `scale_${p}_z`
    };
  }

  build() {
    const {
      names,
      prefix,
      props
    } = this;
    const {
      globalScope,
      parentScope,
      scatterPointSizeDisplay,
      x,
      y,
      z,
      zGrounded
    } = props;
    (0, _scope.addSignal)(globalScope.scope, {
      name: _constants.SignalNames.PointSize,
      value: 5,
      bind: {
        name: scatterPointSizeDisplay,
        debounce: 50,
        input: 'range',
        min: 1,
        max: 25,
        step: 1
      }
    }, {
      name: _constants.SignalNames.ZGrounded,
      value: false,
      bind: {
        name: zGrounded,
        input: 'checkbox'
      }
    });
    (0, _scope.addData)(globalScope.scope, {
      name: names.markData,
      source: globalScope.markDataName,
      transform: [x, y, z].map(c => {
        if (!c || !c.quantitative) return;
        const t = {
          type: 'filter',
          expr: `isValid(datum[${JSON.stringify(c.name)}])`
        };
        return t;
      }).filter(Boolean)
    });
    globalScope.markDataName = names.markData;
    const globalScales = {
      showAxes: true,
      scales: {}
    };
    const zValue = z ? `scale(${JSON.stringify(names.zScale)}, datum[${JSON.stringify(z.name)}])` : null;
    const update = Object.assign({
      height: [{
        test: (0, _selection.testForCollapseSelection)(),
        value: 0
      }, {
        signal: _constants.SignalNames.PointSize
      }],
      width: {
        signal: _constants.SignalNames.PointSize
      }
    }, z && {
      z: [{
        test: (0, _selection.testForCollapseSelection)(),
        value: 0
      }, {
        signal: `${_constants.SignalNames.ZGrounded} ? 0 : ${zValue}`
      }],
      depth: [{
        test: (0, _selection.testForCollapseSelection)(),
        value: 0
      }, {
        signal: `${_constants.SignalNames.ZGrounded} ? ${zValue} : ${_constants.SignalNames.PointSize}`
      }]
    });
    const columnSignals = [{
      column: x,
      xyz: 'x',
      scaleName: names.xScale,
      reverse: false,
      signal: parentScope.sizeSignals.layoutWidth
    }, {
      column: y,
      xyz: 'y',
      scaleName: names.yScale,
      reverse: true,
      signal: parentScope.sizeSignals.layoutHeight
    }, {
      column: z,
      xyz: 'z',
      scaleName: names.zScale,
      reverse: false,
      signal: `${parentScope.sizeSignals.layoutHeight}*${_constants.SignalNames.ZProportion}`
    }];
    columnSignals.forEach(cs => {
      const {
        column,
        reverse,
        scaleName,
        signal,
        xyz
      } = cs;
      if (!column) return;
      let scale;

      if (column.quantitative) {
        scale = (0, _scales.linearScale)(scaleName, globalScope.data.name, column.name, [0, {
          signal
        }], reverse, false);
      } else {
        scale = (0, _scales.pointScale)(scaleName, globalScope.data.name, [0, {
          signal
        }], column.name, reverse);
      }

      globalScales.scales[xyz] = scale;
    });
    const mark = {
      name: prefix,
      type: 'rect',
      from: {
        data: globalScope.markDataName
      },
      encode: {
        update
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, mark);
    return {
      offsets: {
        x: (0, _scope.addOffsets)(parentScope.offsets.x, `scale(${JSON.stringify(names.xScale)}, datum[${JSON.stringify(x.name)}])`),
        y: (0, _scope.addOffsets)(parentScope.offsets.y, `scale(${JSON.stringify(names.yScale)}, datum[${JSON.stringify(y.name)}]) - ${_constants.SignalNames.PointSize}`),
        h: _constants.SignalNames.PointSize,
        w: _constants.SignalNames.PointSize
      },
      sizeSignals: {
        layoutHeight: null,
        layoutWidth: null
      },
      globalScales,
      mark,
      encodingRuleMap: {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: (0, _scope.addOffsets)(parentScope.offsets.y, parentScope.sizeSignals.layoutHeight)
        }]
      }
    };
  }

}

exports.Scatter = Scatter;
},{"./layout":"GfLt","../constants":"kNZP","../scales":"mxMR","../scope":"Nfxo","../selection":"inPN"}],"mVfN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _scatter = require("../layouts/scatter");

var _constants = require("../constants");

function _default(specContext) {
  const {
    specColumns,
    specViewOptions
  } = specContext;
  const scatterProps = {
    x: specColumns.x,
    y: specColumns.y,
    z: specColumns.z,
    scatterPointSizeDisplay: specViewOptions.language.scatterPointSize,
    zGrounded: specViewOptions.language.zGrounded
  };
  const axisScales = {
    x: {
      title: specColumns.x && specColumns.x.name
    },
    y: {
      title: specColumns.y && specColumns.y.name
    },
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  return {
    axisScales,
    layouts: [{
      layoutClass: _scatter.Scatter,
      props: scatterProps
    }],
    specCapabilities: {
      countsAndSums: false,
      roles: [{
        role: 'x',
        axisSelection: specColumns.x && specColumns.x.quantitative ? 'range' : 'exact'
      }, {
        role: 'y',
        axisSelection: specColumns.y && specColumns.y.quantitative ? 'range' : 'exact'
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }],
      signals: [_constants.SignalNames.PointSize, _constants.SignalNames.ZGrounded]
    }
  };
}
},{"../layouts/scatter":"WwUS","../constants":"kNZP"}],"ESPr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Stack = void 0;

var _layout = require("./layout");

var _scope = require("../scope");

var _selection = require("../selection");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Stack extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `stack_${this.id}`;
    this.names = {
      cube: `${p}_cube`,
      globalDataName: `data_${p}_count`,
      globalExtent: `${p}_global_extent`,
      levelDataName: `data_${p}_level`,
      count: `${p}_count`,
      stack0: `${p}_stack0`,
      stack1: `${p}_stack1`,
      sequence: `data_${p}_sequence`,
      sides: `${p}_sides`,
      size: `${p}_size`,
      squared: `${p}_squared`,
      squaredExtent: `${p}_squared_extent`
    };
  }

  build() {
    const {
      names,
      props
    } = this;
    const {
      globalScope,
      groupings,
      parentHeight,
      parentScope,
      sort
    } = props;
    const {
      sizeSignals
    } = parentScope;
    (0, _scope.addTransforms)(globalScope.data, {
      type: 'joinaggregate',
      groupby: (0, _scope.getGroupBy)(groupings),
      ops: ['count'],
      as: [names.count]
    }, {
      type: 'extent',
      field: names.count,
      signal: names.globalExtent
    }, Object.assign({
      type: 'stack',
      groupby: (0, _scope.getGroupBy)(groupings),
      as: [names.stack0, names.stack1]
    }, sort && {
      sort: {
        field: sort.name,
        order: 'ascending'
      }
    }));
    (0, _scope.addData)(globalScope.scope, {
      name: names.sequence,
      transform: [{
        type: 'sequence',
        start: 1,
        stop: {
          signal: `sqrt(${names.globalExtent}[1])`
        }
      }, {
        type: 'formula',
        expr: 'datum.data * datum.data',
        as: 'squared'
      }, {
        type: 'formula',
        expr: `ceil(${names.globalExtent}[1] / datum.squared)`,
        as: 'maxlevels'
      }, {
        type: 'formula',
        expr: `(${names.size} - (datum.data - 1) * datum.data) / datum.data`,
        as: 'side'
      }, {
        type: 'formula',
        expr: 'datum.side * datum.maxlevels + datum.maxlevels - 1',
        as: 'sidecubeheight'
      }, {
        type: 'formula',
        expr: `abs(${parentHeight} - datum.sidecubeheight)`,
        as: 'heightmatch'
      }, {
        type: 'collect',
        sort: {
          field: 'heightmatch',
          order: 'ascending'
        }
      }, {
        type: 'window',
        ops: ['row_number']
      }, {
        type: 'filter',
        expr: 'datum.row_number === 1'
      }, {
        type: 'extent',
        field: 'squared',
        signal: names.squaredExtent
      }]
    });
    (0, _scope.addSignal)(globalScope.scope, {
      name: names.size,
      update: `min((${sizeSignals.layoutHeight}), (${sizeSignals.layoutWidth}))`
    }, {
      name: names.squared,
      update: `${names.squaredExtent}[0]`
    }, {
      name: names.sides,
      update: `sqrt(${names.squared})`
    }, {
      name: names.cube,
      update: `(${names.size} - (${names.sides} - 1)) / ${names.sides}`
    });
    const zLevel = `floor(datum[${JSON.stringify(names.stack0)}] / ${names.squared})`;
    const layerOrdinal = `(datum[${JSON.stringify(names.stack0)}] % ${names.squared})`;
    const cubeX = `(${layerOrdinal} % ${names.sides})`;
    const cubeY = `floor(${layerOrdinal} / ${names.sides})`;
    const groupX = `(${sizeSignals.layoutWidth} - ${names.size}) / 2`;
    const groupY = `(${sizeSignals.layoutHeight} - ${names.size}) / 2`;
    const offsets = {
      x: (0, _scope.addOffsets)(parentScope.offsets.x, groupX, `${cubeX} * (${names.cube} + 1)`),
      y: (0, _scope.addOffsets)(parentScope.offsets.y, groupY, `${cubeY} * (${names.cube} + 1)`),
      h: names.size,
      w: names.size
    };
    const mark = {
      type: 'rect',
      from: {
        data: this.names.levelDataName
      },
      encode: {
        update: {
          z: {
            signal: `${zLevel} * (${names.cube} + 1)`
          },
          height: {
            signal: names.cube
          },
          width: {
            signal: names.cube
          },
          depth: {
            signal: names.cube
          }
        }
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, mark);
    return {
      offsets,
      mark,
      sizeSignals: {
        layoutHeight: names.size,
        layoutWidth: names.size
      },
      globalScales: {
        showAxes: false,
        scales: {}
      },
      encodingRuleMap: {
        y: [{
          test: (0, _selection.testForCollapseSelection)(),
          signal: parentScope.offsets.y
        }],
        z: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }],
        depth: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }],
        height: [{
          test: (0, _selection.testForCollapseSelection)(),
          value: 0
        }]
      }
    };
  }

}

exports.Stack = Stack;
},{"./layout":"GfLt","../scope":"Nfxo","../selection":"inPN"}],"Fc39":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _band = require("../layouts/band");

var _defaults = require("../defaults");

var _constants = require("../constants");

var _stack = require("../layouts/stack");

function _default(specContext) {
  const {
    specColumns
  } = specContext;
  const axisScales = {
    x: {
      title: specColumns.x && specColumns.x.name
    },
    y: {
      title: specColumns.y && specColumns.y.name
    }
  };
  const hBandProps = {
    excludeEncodingRuleMap: true,
    orientation: 'horizontal',
    groupby: {
      column: specColumns.y,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.YBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.YMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'hBandParentHeight'
  };
  const vBandProps = {
    excludeEncodingRuleMap: true,
    orientation: 'vertical',
    groupby: {
      column: specColumns.x,
      defaultBins: _defaults.defaultBins,
      maxbinsSignalName: _constants.SignalNames.XBins,
      maxbinsSignalDisplayName: specContext.specViewOptions.language.XMaxBins,
      maxbins: _defaults.maxbins
    },
    minBandWidth: _defaults.minBarBandWidth,
    showAxes: true,
    parentHeight: 'vBandParentHeight'
  };
  const stackProps = {
    sort: specColumns.sort,
    parentHeight: vBandProps.parentHeight
  };
  return {
    axisScales,
    customZScale: true,
    layouts: [{
      layoutClass: _band.Band,
      props: vBandProps
    }, {
      layoutClass: _band.Band,
      props: hBandProps
    }, {
      layoutClass: _stack.Stack,
      props: stackProps
    }],
    specCapabilities: {
      countsAndSums: false,
      roles: [{
        role: 'x',
        binnable: true,
        axisSelection: specColumns.x && specColumns.x.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.XBins]
      }, {
        role: 'y',
        binnable: true,
        axisSelection: specColumns.y && specColumns.y.quantitative ? 'range' : 'exact',
        signals: [_constants.SignalNames.YBins]
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../layouts/band":"xuzw","../defaults":"visW","../constants":"kNZP","../layouts/stack":"ESPr"}],"Z0w5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _aggregateContainer = require("../layouts/aggregateContainer");

var _constants = require("../constants");

var _strip = require("../layouts/strip");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function _default(specContext) {
  const {
    specColumns
  } = specContext;
  const stripProps = {
    sortOrder: 'ascending',
    orientation: 'vertical',
    size: specColumns.size,
    sort: specColumns.sort,
    z: specColumns.z
  };
  const axisScales = {
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  const layouts = [];

  if (specColumns.facet) {
    axisScales.y = {
      title: null,
      aggregate: specColumns.size ? 'sum' : 'count'
    };
    const globalAggregateMaxExtentScaledSignal = 'globalAggregateMaxExtentScaledSignal';
    const globalAggregateMaxExtentSignal = 'globalAggregateMaxExtentSignal';
    const parentHeight = 'parentHeight';
    const props = {
      dock: 'top',
      niceScale: false,
      globalAggregateMaxExtentScaledSignal,
      globalAggregateMaxExtentSignal,
      parentHeight,
      sumBy: specColumns.size,
      showAxes: false
    };
    stripProps.zSize = props.parentHeight;
    layouts.push({
      layoutClass: _aggregateContainer.AggregateContainer,
      props
    });
  }

  layouts.push({
    layoutClass: _strip.Strip,
    props: stripProps
  });
  return {
    axisScales,
    layouts,
    specCapabilities: {
      countsAndSums: false,
      roles: [{
        role: 'size',
        allowNone: true,
        excludeCategoric: true
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'sort',
        allowNone: true
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }]
    }
  };
}
},{"../layouts/aggregateContainer":"UF7t","../constants":"kNZP","../layouts/strip":"vr0D"}],"GcJ6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constants = require("../constants");

var _treemap = require("../layouts/treemap");

var _aggregateContainer = require("../layouts/aggregateContainer");

function _default(specContext) {
  const {
    specColumns,
    specViewOptions
  } = specContext;
  const treemapProps = {
    corner: 'top-left',
    group: specColumns.group,
    size: specColumns.size,
    treeMapMethod: specViewOptions.language.treeMapMethod,
    z: specColumns.z
  };
  const axisScales = {
    z: {
      title: specColumns.z && specColumns.z.name
    }
  };
  const layouts = [];

  if (specColumns.facet) {
    axisScales.y = {
      title: null,
      aggregate: 'sum'
    };
    const globalAggregateMaxExtentScaledSignal = 'globalAggregateMaxExtentScaledSignal';
    const globalAggregateMaxExtentSignal = 'globalAggregateMaxExtentSignal';
    const parentHeight = 'parentHeight';
    const props = {
      dock: 'top',
      niceScale: false,
      globalAggregateMaxExtentScaledSignal,
      globalAggregateMaxExtentSignal,
      parentHeight,
      sumBy: specColumns.size,
      showAxes: false
    };
    treemapProps.zSize = props.parentHeight;
    layouts.push({
      layoutClass: _aggregateContainer.AggregateContainer,
      props
    });
  }

  layouts.push({
    layoutClass: _treemap.Treemap,
    props: treemapProps
  });
  return {
    axisScales,
    layouts,
    specCapabilities: {
      countsAndSums: false,
      roles: [{
        role: 'size',
        excludeCategoric: true
      }, {
        role: 'group',
        allowNone: true
      }, {
        role: 'z',
        allowNone: true
      }, {
        role: 'color',
        allowNone: true
      }, {
        role: 'facet',
        allowNone: true,
        signals: [_constants.SignalNames.FacetBins]
      }, {
        role: 'facetV',
        allowNone: true,
        signals: [_constants.SignalNames.FacetVBins]
      }],
      signals: [_constants.SignalNames.TreeMapMethod]
    }
  };
}
},{"../constants":"kNZP","../layouts/treemap":"utMY","../layouts/aggregateContainer":"UF7t"}],"Zzpz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addGlobalAxes = addGlobalAxes;

var _scope = require("./scope");

var _defaults = require("./defaults");

var _constants = require("./constants");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function addGlobalAxes(props) {
  const {
    axesOffsets,
    axisScales,
    axesScopes,
    axesTitlePadding,
    allGlobalScales,
    globalScope,
    labelBaseline,
    plotOffsetSignals,
    specColumns,
    specViewOptions
  } = props;
  const {
    scope
  } = globalScope;
  allGlobalScales.forEach(globalScales => {
    const {
      scales
    } = globalScales;

    for (let s in scales) {
      let scale = scales[s];

      if (scale) {
        (0, _scope.addScale)(scope, scale);

        if (globalScales.showAxes && axisScales && s !== 'z') {
          let axisScale = axisScales[s];

          if (axisScale) {
            const lineColor = specViewOptions.colors.axisLine;
            const horizontal = s === 'x';
            const column = specColumns[s] || {
              quantitative: true
            };
            const title = axisScale.title;
            const props = {
              title,
              horizontal,
              column,
              specViewOptions,
              lineColor,
              titlePadding: axesTitlePadding[s],
              labelBaseline: labelBaseline[s]
            };
            axesScopes['main'].forEach(a => (0, _scope.addAxes)(a.scope, createAxis(Object.assign(Object.assign({}, props), {
              scale: a.scale || scale.name,
              showTitle: a.title,
              showLabels: a.labels,
              showLines: a.lines
            }))));

            if (axesScopes[s]) {
              axesScopes[s].forEach(a => (0, _scope.addAxes)(a.scope, createAxis(Object.assign(Object.assign({}, props), {
                scale: a.scale || scale.name,
                showTitle: a.title,
                showLabels: a.labels,
                showLines: a.lines
              }))));
            }

            if (plotOffsetSignals[s] && axesOffsets[s]) {
              const plotOffsetSignal = plotOffsetSignals[s];
              plotOffsetSignal.update = `${axesOffsets[s]}`;
            }
          }
        }
      }
    }
  });
}

function createAxis(props) {
  const {
    column,
    horizontal,
    labelBaseline,
    lineColor,
    scale,
    showLabels,
    showTitle,
    showLines,
    specViewOptions,
    title,
    titlePadding
  } = props;
  const axis = Object.assign(Object.assign(Object.assign(Object.assign({
    scale,
    orient: horizontal ? 'bottom' : 'left',
    domain: showLines,
    ticks: showLines
  }, showLines && {
    domainColor: lineColor,
    tickColor: lineColor,
    tickSize: specViewOptions.tickSize
  }), showTitle && {
    title,
    titleAlign: horizontal ? 'left' : 'right',
    titleAngle: {
      signal: horizontal ? _constants.SignalNames.TextAngleX : _constants.SignalNames.TextAngleY
    },
    titleColor: specViewOptions.colors.axisText,
    titleFontSize: {
      signal: _constants.SignalNames.TextTitleSize
    },
    titleLimit: _defaults.axesTitleLimit,
    titlePadding
  }), {
    labels: showLabels
  }), showLabels && {
    labelAlign: horizontal ? 'left' : 'right',
    labelBaseline,
    labelAngle: {
      signal: horizontal ? _constants.SignalNames.TextAngleX : _constants.SignalNames.TextAngleY
    },
    labelColor: specViewOptions.colors.axisText,
    labelFontSize: {
      signal: _constants.SignalNames.TextSize
    },
    labelLimit: _defaults.axesLabelLimit
  });

  if (column.quantitative) {
    axis.format = '~r';
  }

  return axis;
}
},{"./scope":"Nfxo","./defaults":"visW","./constants":"kNZP"}],"xnEZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLegends = getLegends;

function legend(column, fill) {
  const legend = {
    orient: 'none',
    title: column.name,
    fill,
    encode: {
      symbols: {
        update: {
          shape: {
            value: 'square'
          }
        }
      }
    }
  };

  if (column.quantitative) {
    legend.type = 'symbol';
    legend.format = '~r';
  }

  return legend;
}

function getLegends(context, fill) {
  const {
    specColumns,
    insight
  } = context;

  if (specColumns.color && !insight.hideLegend && !insight.directColor && !specColumns.color.isColorData) {
    return [legend(specColumns.color, fill)];
  }
}
},{}],"uI10":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.topLookup = topLookup;

var _constants = require("./constants");

function topLookup(column, count, source, legend, lookupName, fieldName, indexName) {
  const data = [{
    name: lookupName,
    source,
    transform: [{
      type: 'aggregate',
      groupby: [column.name]
    }, {
      type: 'window',
      ops: ['count'],
      as: [indexName]
    }, {
      type: 'filter',
      expr: `datum[${JSON.stringify(indexName)}] <= ${count}`
    }]
  }, {
    name: legend,
    source,
    transform: [{
      type: 'lookup',
      from: lookupName,
      key: column.name,
      fields: [column.name],
      values: [column.name],
      as: [fieldName]
    }, {
      type: 'formula',
      expr: `datum[${JSON.stringify(fieldName)}] == null ? '${_constants.Other}' : datum[${JSON.stringify(fieldName)}]`,
      as: fieldName
    }]
  }];
  return data;
}
},{"./constants":"kNZP"}],"MIbS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addColor = addColor;

var _scope = require("./scope");

var _scales = require("./scales");

var _signals = require("./signals");

var _constants = require("./constants");

var _legends = require("./legends");

var _top = require("./top");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function addColor(props) {
  const {
    colorReverseSignalName,
    dataName,
    scope,
    legendDataName,
    scaleName,
    specContext,
    topLookupName
  } = props;
  let colorDataName = dataName;
  const {
    insight,
    specColumns,
    specViewOptions
  } = specContext;
  const legends = (0, _legends.getLegends)(specContext, scaleName);

  if (legends) {
    scope.legends = legends;
  }

  const categoricalColor = specColumns.color && !specColumns.color.quantitative;

  if (categoricalColor) {
    (0, _scope.addData)(scope, ...(0, _top.topLookup)(specColumns.color, specViewOptions.maxLegends, dataName, legendDataName, topLookupName, _constants.FieldNames.TopColor, _constants.FieldNames.TopIndex));
    colorDataName = legendDataName;
  }

  if (specColumns.color && !specColumns.color.isColorData && !insight.directColor) {
    if (specColumns.color.quantitative) {
      (0, _scope.addScale)(scope, (0, _scales.binnableColorScale)(scaleName, insight.colorBin, dataName, specColumns.color.name, insight.scheme));
    } else {
      (0, _scope.addScale)(scope, {
        name: scaleName,
        type: 'ordinal',
        domain: {
          data: colorDataName,
          field: _constants.FieldNames.TopColor,
          sort: true
        },
        range: {
          scheme: insight.scheme || _constants.ColorScaleNone
        },
        reverse: {
          signal: colorReverseSignalName
        }
      });
    }
  }

  (0, _scope.addSignal)(scope, (0, _signals.colorBinCountSignal)(specContext), (0, _signals.colorReverseSignal)(specContext));
  return {
    topColorField: _constants.FieldNames.TopColor,
    colorDataName
  };
}
},{"./scope":"Nfxo","./scales":"mxMR","./signals":"TTOO","./constants":"kNZP","./legends":"xnEZ","./top":"uI10"}],"keY5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.displayBin = displayBin;
exports.serializeAsVegaExpression = serializeAsVegaExpression;

function displayBin(bin) {
  const val = index => `datum[${JSON.stringify(bin.fields[index])}]`;

  return bin.discreteColumn.column.quantitative ? `format(${val(0)}, '~r') + ' - ' + format(${val(1)}, '~r')` : val(0);
}

function obj(nameValues, clause) {
  if (clause) {
    nameValues = [clause, ...nameValues];
  }

  return `{${nameValues.join()}}`;
}

function serializeAsVegaExpression(bin, firstFieldName, lastFieldName, clause) {
  if (bin.discreteColumn.column.quantitative) {
    const low = [`name:${JSON.stringify(bin.discreteColumn.column.name)}`, 'operator:\'>=\'', `value:datum[${JSON.stringify(bin.fields[0])}]`];
    const high = ['clause:\'&&\'', `name:${JSON.stringify(bin.discreteColumn.column.name)}`, 'operator:\'<\'', `value:datum[${JSON.stringify(bin.fields[1])}]`];
    return obj([`expressions:[ datum[${JSON.stringify(firstFieldName)}] ? null : ${obj(low)}, datum[${JSON.stringify(lastFieldName)}] ? null : ${obj(high)}]`], clause);
  } else {
    const exact = [`name:${JSON.stringify(bin.discreteColumn.column.name)}`, 'operator:\'==\'', `value:datum[${JSON.stringify(bin.fields[0])}]`];
    return obj([`expressions:[${obj(exact)}]`], clause);
  }
}
},{}],"xF0Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addFacetColRowTitles = addFacetColRowTitles;
exports.addFacetCellTitles = addFacetCellTitles;
exports.addFacetAxesGroupMarks = addFacetAxesGroupMarks;
exports.facetRowHeaderFooter = facetRowHeaderFooter;
exports.facetColumnHeaderFooter = facetColumnHeaderFooter;

var _scope = require("./scope");

var _constants = require("./constants");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function addFacetColRowTitles(globalScope, colTitleSource, rowTitleSource, sizeSignals, axisTextColor) {
  const titleSignal = `parent[${JSON.stringify(_constants.FieldNames.FacetTitle)}]`;
  const index = `datum[${JSON.stringify(_constants.FieldNames.Ordinal)}] - 1`;
  const col = facetColumnHeaderFooter(colTitleSource.dataName, sizeSignals, index);
  const row = facetRowHeaderFooter(rowTitleSource.dataName, sizeSignals, index);
  (0, _scope.addMarks)(globalScope, col.header, row.footer);
  (0, _scope.addMarks)(col.header, {
    type: 'text',
    encode: {
      enter: {
        align: {
          value: 'center'
        },
        baseline: {
          value: 'middle'
        },
        fill: {
          value: axisTextColor
        }
      },
      update: {
        metaData: {
          signal: `{search: parent[${JSON.stringify(_constants.FieldNames.FacetSearch)}]}`
        },
        x: {
          signal: `${sizeSignals.layoutWidth} / 2`
        },
        limit: {
          signal: sizeSignals.layoutWidth
        },
        fontSize: {
          signal: _constants.SignalNames.TextSize
        },
        text: {
          signal: titleSignal
        }
      }
    }
  });
  (0, _scope.addMarks)(row.footer, {
    type: 'text',
    encode: {
      enter: {
        align: {
          value: 'left'
        },
        baseline: {
          value: 'middle'
        },
        fill: {
          value: axisTextColor
        }
      },
      update: {
        metaData: {
          signal: `{search: parent[${JSON.stringify(_constants.FieldNames.FacetSearch)}]}`
        },
        y: {
          signal: `${sizeSignals.layoutHeight} / 2`
        },
        limit: {
          signal: _constants.SignalNames.PlotOffsetRight
        },
        fontSize: {
          signal: _constants.SignalNames.TextSize
        },
        text: {
          signal: titleSignal
        }
      }
    }
  });
}

function addFacetCellTitles(scope, sizeSignals, axisTextColor) {
  (0, _scope.addMarks)(scope, {
    type: 'text',
    encode: {
      enter: {
        align: {
          value: 'center'
        },
        baseline: {
          value: 'bottom'
        },
        fill: {
          value: axisTextColor
        }
      },
      update: {
        metaData: {
          signal: `{search: parent[${JSON.stringify(_constants.FieldNames.FacetSearch)}]}`
        },
        x: {
          signal: `(${sizeSignals.layoutWidth}) / 2`
        },
        text: {
          signal: `parent[${JSON.stringify(_constants.FieldNames.FacetTitle)}]`
        },
        fontSize: {
          signal: _constants.SignalNames.TextSize
        },
        limit: {
          signal: sizeSignals.layoutWidth
        },
        y: {
          signal: `-${_constants.SignalNames.FacetPaddingTop} / 2`
        }
      }
    }
  });
}

function addFacetAxesGroupMarks(props) {
  const {
    colSeqName,
    colTitleScaleName,
    globalScope,
    facetScope,
    plotHeightOut,
    plotScope,
    plotWidthOut,
    rowSeqName,
    rowTitleScaleName
  } = props;
  const {
    sizeSignals
  } = facetScope;
  const colSequence = createSequence(colSeqName, sizeSignals.colCount);
  const rowSequence = createSequence(rowSeqName, sizeSignals.rowCount);
  const index = 'datum.data';
  const col = facetColumnHeaderFooter(colSeqName, sizeSignals, index);
  const row = facetRowHeaderFooter(rowSeqName, sizeSignals, index);
  (0, _scope.addData)(globalScope, colSequence, rowSequence);
  (0, _scope.addMarks)(globalScope, col.footer, row.header);
  const colTitleScale = {
    type: 'linear',
    name: colTitleScaleName,
    domain: [0, 1],
    range: [0, {
      signal: plotWidthOut
    }]
  };
  const rowTitleScale = {
    type: 'linear',
    name: rowTitleScaleName,
    domain: [0, 1],
    range: [{
      signal: plotHeightOut
    }, 0]
  };
  (0, _scope.addScale)(globalScope, colTitleScale, rowTitleScale);
  const map = {
    main: [{
      scope: facetScope.facetScope,
      lines: true,
      labels: false,
      title: false
    }],
    x: [{
      scope: col.footer,
      lines: true,
      labels: true,
      title: false
    }, {
      scope: plotScope,
      scale: colTitleScaleName,
      lines: false,
      labels: false,
      title: true
    }],
    y: [{
      scope: row.header,
      lines: true,
      labels: true,
      title: false
    }, {
      scope: plotScope,
      scale: rowTitleScaleName,
      lines: false,
      labels: false,
      title: true
    }]
  };
  return map;
}

function facetRowHeaderFooter(data, sizeSignals, index) {
  const rowFn = xSignal => {
    return {
      type: 'group',
      from: {
        data
      },
      encode: {
        update: {
          x: {
            signal: xSignal
          },
          y: {
            signal: `${_constants.SignalNames.PlotOffsetTop} + ${_constants.SignalNames.FacetPaddingTop} + (${index}) * (${sizeSignals.layoutHeight} + ${_constants.SignalNames.FacetPaddingTop} + ${_constants.SignalNames.FacetPaddingBottom})`
          },
          height: {
            signal: sizeSignals.layoutHeight
          }
        }
      }
    };
  };

  const header = rowFn(_constants.SignalNames.PlotOffsetLeft);
  const footer = rowFn(`${_constants.SignalNames.PlotOffsetLeft} + ${_constants.SignalNames.PlotWidthOut} + ${_constants.SignalNames.PlotOffsetRight} / 2`);
  return {
    header,
    footer
  };
}

function facetColumnHeaderFooter(data, sizeSignals, index) {
  const colFn = ySignal => {
    return {
      type: 'group',
      from: {
        data
      },
      encode: {
        update: {
          x: {
            signal: `(${index}) * (${sizeSignals.layoutWidth} + ${_constants.SignalNames.FacetPaddingLeft}) + ${_constants.SignalNames.FacetPaddingLeft} + ${_constants.SignalNames.PlotOffsetLeft}`
          },
          y: {
            signal: ySignal
          },
          width: {
            signal: sizeSignals.layoutWidth
          }
        }
      }
    };
  }; //create group marks based on data sequences


  const header = colFn(`${_constants.SignalNames.PlotOffsetTop} / 2`);
  const footer = colFn(`${_constants.SignalNames.PlotOffsetTop} + ${_constants.SignalNames.PlotHeightOut}`);
  return {
    header,
    footer
  };
}

function createSequence(dataName, countSignal) {
  return {
    name: dataName,
    transform: [{
      type: 'sequence',
      start: 0,
      stop: {
        signal: countSignal
      }
    }]
  };
}
},{"./scope":"Nfxo","./constants":"kNZP"}],"F91X":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createOrdinalsForFacet = createOrdinalsForFacet;
exports.ordinalScale = ordinalScale;

var _constants = require("./constants");

function createOrdinalsForFacet(source, prefix, binFields, sortOrder) {
  const dataName = `${prefix}_bin_order`;
  const data = {
    name: dataName,
    source,
    transform: [{
      type: 'aggregate',
      groupby: binFields
    }, {
      type: 'collect',
      sort: {
        field: binFields,
        order: binFields.map(f => sortOrder)
      }
    }, {
      type: 'window',
      ops: ['row_number'],
      as: [_constants.FieldNames.Ordinal]
    }]
  };
  return {
    data,
    scale: ordinalScale(dataName, `scale_${prefix}_order`, binFields)
  };
}

function ordinalScale(dataName, scaleName, binFields) {
  return {
    type: 'ordinal',
    name: scaleName,
    domain: {
      data: dataName,
      field: binFields[0]
    },
    range: {
      data: dataName,
      field: _constants.FieldNames.Ordinal
    }
  };
}
},{"./constants":"kNZP"}],"MA9m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cross = void 0;

var _layout = require("./layout");

var _bin = require("../bin");

var _constants = require("../constants");

var _facetSearch = require("../facetSearch");

var _facetTitle = require("../facetTitle");

var _ordinal = require("../ordinal");

var _scope = require("../scope");

var _signals = require("../signals");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Cross extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `cross_${this.id}`;
    this.binX = (0, _bin.binnable)(`${p}_x`, props.globalScope.data.name, props.groupbyX);
    this.binY = (0, _bin.binnable)(`${p}_y`, props.globalScope.data.name, props.groupbyY);
    this.names = {
      facetDataName: `data_${p}_facet`,
      searchUnion: `data_${p}_search`,
      dimScale: `scale_${p}`,
      dimCount: `${p}_count`,
      dimCategorical: `data_${p}_cat`,
      dimCellSize: `${p}_cell_size`,
      dimCellSizeCalc: `${p}_cell_calc`
    };
  }

  getGrouping() {
    return this.binX.fields.concat(this.binY.fields);
  }

  build() {
    const {
      binX,
      binY,
      names,
      prefix,
      props
    } = this;
    const {
      axisTextColor,
      colRowTitles,
      globalScope,
      parentScope
    } = props;
    const titles = {
      x: {
        dataName: null,
        quantitative: null
      },
      y: {
        dataName: null,
        quantitative: null
      }
    };
    const dx = {
      dim: 'x',
      bin: binX,
      sortOrder: 'ascending',
      size: parentScope.sizeSignals.layoutWidth,
      layout: parentScope.sizeSignals.layoutWidth,
      min: globalScope.signals.minCellWidth.name,
      out: globalScope.signals.plotWidthOut,
      offset: _constants.SignalNames.FacetPaddingLeft,
      padding: _constants.SignalNames.FacetPaddingLeft,
      dataOut: null,
      scaleName: null,
      position: null
    };
    const dy = {
      dim: 'y',
      bin: binY,
      sortOrder: 'ascending',
      size: parentScope.sizeSignals.layoutHeight,
      layout: parentScope.sizeSignals.layoutHeight,
      min: globalScope.signals.minCellHeight.name,
      out: globalScope.signals.plotHeightOut,
      offset: _constants.SignalNames.FacetPaddingTop,
      padding: `(${_constants.SignalNames.FacetPaddingTop} + ${_constants.SignalNames.FacetPaddingBottom})`,
      dataOut: null,
      scaleName: null,
      position: null
    };
    const dimensions = [dx, dy];
    dimensions.forEach(d => {
      const {
        bin,
        dim,
        padding,
        sortOrder
      } = d;
      let data;
      let dataName;
      let countSignal;
      let scale;
      const titleSource = titles[dim];

      if (bin.native === false) {
        (0, _scope.addSignal)(globalScope.scope, bin.maxbinsSignal);
        (0, _scope.addTransforms)(globalScope.data, ...bin.transforms);
        (0, _scope.addData)(globalScope.scope, bin.dataSequence);
        (0, _scope.addTransforms)(bin.dataSequence, {
          type: 'formula',
          expr: `indata(${JSON.stringify(globalScope.markDataName)}, ${JSON.stringify(bin.fields[0])}, datum[${JSON.stringify(bin.fields[0])}])`,
          as: _constants.FieldNames.Contains
        });
        data = bin.dataSequence;
        dataName = bin.dataSequence.name;
        countSignal = `length(data(${JSON.stringify(dataName)}))`;
        scale = (0, _ordinal.ordinalScale)(dataName, `${names.dimScale}_${dim}`, bin.fields);
        titleSource.dataName = bin.dataSequence.name;
      } else {
        dataName = globalScope.markDataName;
        const ord = (0, _ordinal.createOrdinalsForFacet)(dataName, `${prefix}_${dim}`, bin.fields, sortOrder);
        data = ord.data;
        (0, _scope.addData)(globalScope.scope, ord.data);
        countSignal = `length(data(${JSON.stringify(ord.data.name)}))`;
        scale = ord.scale;
        titleSource.dataName = ord.data.name;
      }

      titleSource.quantitative = bin.discreteColumn.column.quantitative;
      d.dataOut = data;
      d.scaleName = scale.name;
      (0, _scope.addTransforms)(data, {
        type: 'formula',
        expr: (0, _facetSearch.serializeAsVegaExpression)(bin, _constants.FieldNames.First, _constants.FieldNames.Last),
        as: _constants.FieldNames.FacetSearch
      }, {
        type: 'formula',
        expr: (0, _facetSearch.displayBin)(bin),
        as: _constants.FieldNames.FacetTitle
      });
      (0, _scope.addScale)(globalScope.scope, scale);
      const count = `${names.dimCount}_${dim}`;
      const calc = `${names.dimCellSizeCalc}_${dim}`;
      const size = `${names.dimCellSize}_${dim}`;
      (0, _scope.addSignal)(globalScope.scope, {
        name: count,
        update: countSignal
      });
      (0, _scope.addSignal)(globalScope.scope, {
        name: calc,
        update: `${d.layout} / ${count}`
      }, {
        name: size,
        update: `max(${d.min}, (${calc} - ${padding}))`
      });
      (0, _signals.modifySignal)(d.out, 'max', `((${size} + ${padding}) * ${count})`);
      d.position = this.dimensionOffset(d);
    });
    const groupRow = {
      type: 'group',
      encode: {
        update: {
          y: {
            signal: dy.position
          }
        }
      },
      from: {
        data: dy.dataOut.name
      },
      data: [{
        name: names.searchUnion,
        source: dx.dataOut.name,
        transform: [{
          type: 'formula',
          expr: `[datum[${JSON.stringify(_constants.FieldNames.FacetSearch)}], merge(parent[${JSON.stringify(_constants.FieldNames.FacetSearch)}], { clause: '&&'})]`,
          as: _constants.FieldNames.FacetSearch
        }]
      }]
    };
    const groupCol = {
      style: 'cell',
      name: prefix,
      type: 'group',
      encode: {
        update: {
          height: {
            signal: `${names.dimCellSize}_y`
          },
          width: {
            signal: `${names.dimCellSize}_x`
          },
          x: {
            signal: dx.position
          }
        }
      },
      from: {
        data: names.searchUnion
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, groupRow);
    (0, _scope.addMarks)(groupRow, groupCol);
    const offsets = {
      x: this.dimensionOffset(dx),
      y: this.dimensionOffset(dy),
      h: `${names.dimCellSize}_y`,
      w: `${names.dimCellSize}_x`
    };
    const sizeSignals = {
      layoutHeight: `${names.dimCellSize}_y`,
      layoutWidth: `${names.dimCellSize}_x`,
      colCount: `${names.dimCount}_x`,
      rowCount: `${names.dimCount}_y`
    };

    if (colRowTitles) {
      (0, _facetTitle.addFacetColRowTitles)(globalScope.scope, titles.x, titles.y, sizeSignals, axisTextColor);
    }

    return {
      facetScope: groupCol,
      offsets,
      sizeSignals,
      titles
    };
  }

  dimensionOffset(d) {
    const {
      names
    } = this;
    return `${d.offset} + (scale(${JSON.stringify(d.scaleName)}, datum[${JSON.stringify(d.bin.fields[0])}]) - 1) * (${names.dimCellSize}_${d.dim} + ${d.padding})`;
  }

}

exports.Cross = Cross;
},{"./layout":"GfLt","../bin":"HtEf","../constants":"kNZP","../facetSearch":"keY5","../facetTitle":"xF0Y","../ordinal":"F91X","../scope":"Nfxo","../signals":"TTOO"}],"QgJa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slice = void 0;

var _layout = require("./layout");

var _bin = require("../bin");

var _scope = require("../scope");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Slice extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    this.prefix = `slice_${this.id}`;
    this.bin = (0, _bin.binnable)(this.prefix, props.globalScope.data.name, props.groupby);
  }

  getGrouping() {
    return this.bin.fields;
  }

  build() {
    const {
      bin,
      prefix,
      props
    } = this;
    const {
      globalScope,
      parentScope
    } = props;
    const facetDataName = `data_${prefix}_facet`;

    if (bin.native === false) {
      globalScope.scope.signals.push(bin.maxbinsSignal);
      (0, _scope.addTransforms)(globalScope.data, ...bin.transforms);
      globalScope.scope.data.push(bin.dataSequence);
    } // const mark: Mark = {
    //     style: 'cell',
    //     name: prefix,
    //     type: 'group',
    //     from: {
    //         facet: {
    //             name: facetDataName,
    //             data: parentScope.dataName,
    //             groupby: bin.fields
    //         }
    //     },
    //     encode: {
    //     },
    //     marks: [
    //         {
    //             type: 'text',
    //             encode: {
    //                 update: {
    //                     text: {
    //                         signal: `length(data(${JSON.stringify(facetDataName)}))`
    //                     },
    //                     fontSize: {
    //                         value: 20
    //                     }
    //                 }
    //             }
    //         }
    //     ]
    // };
    // parentScope.scope.marks.push(mark);


    return {
      sizeSignals: {
        layoutHeight: 'TODO',
        layoutWidth: 'TODO'
      }
    };
  }

}

exports.Slice = Slice;
},{"./layout":"GfLt","../bin":"HtEf","../scope":"Nfxo"}],"bQXK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Wrap = void 0;

var _layout = require("./layout");

var _bin = require("../bin");

var _constants = require("../constants");

var _facetSearch = require("../facetSearch");

var _facetTitle = require("../facetTitle");

var _ordinal = require("../ordinal");

var _scope = require("../scope");

var _signals = require("../signals");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class Wrap extends _layout.Layout {
  constructor(props) {
    super(props);
    this.props = props;
    const p = this.prefix = `wrap_${this.id}`;
    this.bin = (0, _bin.binnable)(this.prefix, props.globalScope.data.name, props.groupby);
    this.names = {
      outputData: `data_${p}_out`,
      rowColumnDataName: `data_${p}_row_col`,
      cellHeight: `${p}_cellHeight`,
      cellWidth: `${p}_cellWidth`,
      fits: `${p}_fits`,
      target: `${p}_target`,
      minArea: `${p}_minArea`,
      aspect: `${p}_aspect`,
      minAspect: `${p}_minAspect`,
      idealAspect: `${p}_idealAspect`,
      dataLength: `${p}_dataLength`,
      rxc0: `${p}_rxc0`,
      rxc1: `${p}_rxc1`,
      rxc2: `${p}_rxc2`,
      rxc: `${p}_rxc`,
      growColCount: `${p}_growColCount`,
      growCellWidth: `${p}_growCellWidth`,
      fitsArea: `${p}_fitsArea`,
      colCount: `${p}_colCount`
    };
  }

  getGrouping() {
    return this.bin.fields;
  }

  build() {
    const {
      bin,
      names,
      prefix,
      props
    } = this;
    const {
      axisTextColor,
      cellTitles,
      globalScope,
      parentScope
    } = props;
    let ordinalBinData;

    if (bin.native === false) {
      (0, _scope.addSignal)(globalScope.scope, bin.maxbinsSignal);
      (0, _scope.addTransforms)(globalScope.data, ...bin.transforms);
      (0, _scope.addData)(globalScope.scope, bin.dataSequence);
      (0, _scope.addTransforms)(bin.dataSequence, {
        type: 'formula',
        expr: `indata(${JSON.stringify(globalScope.data.name)}, ${JSON.stringify(bin.fields[0])}, datum[${JSON.stringify(bin.fields[0])}])`,
        as: _constants.FieldNames.Contains
      });
      ordinalBinData = bin.dataSequence.name;
    } else {
      const ord = (0, _ordinal.createOrdinalsForFacet)(globalScope.data.name, prefix, bin.fields, 'ascending');
      (0, _scope.addData)(globalScope.scope, ord.data);
      ordinalBinData = ord.data.name;
    }

    (0, _scope.addData)(globalScope.scope, {
      name: names.rxc0,
      transform: [{
        type: 'sequence',
        start: 1,
        stop: {
          signal: `ceil(sqrt(${names.dataLength})) + 1`
        }
      }, {
        type: 'formula',
        expr: `ceil(${names.dataLength} / datum.data)`,
        as: 'complement'
      }]
    }, {
      name: names.rxc1,
      source: names.rxc0,
      transform: [{
        type: 'project',
        fields: ['data'],
        as: ['cols']
      }]
    }, {
      name: names.rxc2,
      source: names.rxc0,
      transform: [{
        type: 'project',
        fields: ['complement'],
        as: ['cols']
      }]
    }, {
      name: names.rxc,
      source: [names.rxc1, names.rxc2],
      transform: [{
        type: 'formula',
        expr: `ceil(${names.dataLength} / datum.cols)`,
        as: 'rows'
      }, {
        type: 'formula',
        expr: `${parentScope.sizeSignals.layoutWidth} / datum.cols`,
        as: 'cellw'
      }, {
        type: 'formula',
        expr: `datum.cols === 1 ? max(datum.cellw, ${_constants.SignalNames.MinCellWidth}) : datum.cellw`,
        as: 'cellw'
      }, {
        type: 'formula',
        expr: `${parentScope.sizeSignals.layoutHeight} / datum.rows`,
        as: 'cellh'
      }, {
        type: 'formula',
        expr: `datum.rows === 1 ? max(datum.cellh, ${_constants.SignalNames.MinCellHeight}) : datum.cellh`,
        as: 'cellh'
      }, {
        type: 'formula',
        expr: `(datum.cellw >= ${_constants.SignalNames.MinCellWidth} && datum.cellh >= ${_constants.SignalNames.MinCellHeight})`,
        as: 'meetsmin'
      }, {
        type: 'filter',
        expr: 'datum.meetsmin'
      }, {
        type: 'formula',
        expr: 'datum.cellw / datum.cellh',
        as: names.aspect
      }, {
        type: 'formula',
        expr: `abs(datum.${names.aspect} - ${names.target})`,
        as: names.idealAspect
      }, {
        type: 'formula',
        expr: `${names.dataLength} / (datum.cols * datum.rows)`,
        as: 'coverage'
      }, {
        type: 'collect',
        sort: {
          field: [names.idealAspect, 'coverage'],
          order: ['ascending', 'descending']
        }
      }]
    }, {
      name: names.rowColumnDataName,
      source: ordinalBinData,
      transform: [{
        type: 'formula',
        expr: `floor((datum[${JSON.stringify(_constants.FieldNames.Ordinal)}] - 1) / ${names.colCount})`,
        as: _constants.FieldNames.WrapRow
      }, {
        type: 'formula',
        expr: `(datum[${JSON.stringify(_constants.FieldNames.Ordinal)}] - 1) % ${names.colCount}`,
        as: _constants.FieldNames.WrapCol
      }, {
        type: 'formula',
        expr: (0, _facetSearch.serializeAsVegaExpression)(bin, _constants.FieldNames.First, _constants.FieldNames.Last),
        as: _constants.FieldNames.FacetSearch
      }, {
        type: 'formula',
        expr: (0, _facetSearch.displayBin)(bin),
        as: _constants.FieldNames.FacetTitle
      }]
    });
    const dataOut = {
      name: names.outputData,
      source: globalScope.data.name,
      transform: [{
        type: 'lookup',
        from: names.rowColumnDataName,
        key: bin.fields[0],
        fields: [bin.fields[0]],
        values: [_constants.FieldNames.WrapRow, _constants.FieldNames.WrapCol]
      }]
    };
    (0, _scope.addData)(globalScope.scope, dataOut);
    globalScope.markDataName = names.outputData;
    (0, _scope.addSignal)(globalScope.scope, {
      name: names.minAspect,
      update: `${_constants.SignalNames.MinCellWidth} / ${_constants.SignalNames.MinCellHeight}`
    }, {
      name: names.target,
      update: `${names.minAspect} === 1 ? ${1.2} : ${names.minAspect}`
    }, {
      name: names.minArea,
      update: `${_constants.SignalNames.MinCellWidth}*${_constants.SignalNames.MinCellHeight}`
    }, {
      name: names.aspect,
      update: `${parentScope.sizeSignals.layoutWidth} / ${parentScope.sizeSignals.layoutHeight}`
    }, {
      name: names.dataLength,
      update: `data(${JSON.stringify(ordinalBinData)}).length`
    }, {
      name: names.growColCount,
      update: `max(floor(${parentScope.sizeSignals.layoutWidth} / ${_constants.SignalNames.MinCellWidth}), 1)`
    }, {
      name: names.growCellWidth,
      update: `${parentScope.sizeSignals.layoutWidth} / ${names.growColCount}`
    }, {
      name: names.fitsArea,
      update: `((${names.dataLength} * ${names.minArea}) <= (${parentScope.sizeSignals.layoutWidth} * ${parentScope.sizeSignals.layoutHeight}))`
    }, {
      name: names.fits,
      update: `${names.fitsArea} && length(data(${JSON.stringify(names.rxc)})) > 0`
    }, {
      name: names.colCount,
      update: `${names.fits} ? data(${JSON.stringify(names.rxc)})[0].cols : ${names.growColCount}`
    }, {
      name: names.cellWidth,
      update: `${names.fits} ? data(${JSON.stringify(names.rxc)})[0].cellw : ${names.growCellWidth}`
    }, {
      name: names.cellHeight,
      update: `${names.fits} ? data(${JSON.stringify(names.rxc)})[0].cellh : ${_constants.SignalNames.MinCellHeight}`
    });
    (0, _signals.modifySignal)(globalScope.signals.plotHeightOut, 'max', `(${names.cellHeight} * ceil(${names.dataLength} / ${names.colCount}))`);
    (0, _signals.modifySignal)(globalScope.signals.plotWidthOut, 'max', `(${names.cellWidth} * ${names.colCount})`);
    const signalH = [names.cellHeight, _constants.SignalNames.FacetPaddingTop, _constants.SignalNames.FacetPaddingBottom].join(' - ');
    const signalW = [names.cellWidth, _constants.SignalNames.FacetPaddingLeft].join(' - ');
    const signalX = (0, _scope.addOffsets)(parentScope.offsets.x, `datum[${JSON.stringify(_constants.FieldNames.WrapCol)}] * ${names.cellWidth}`, _constants.SignalNames.FacetPaddingLeft);
    const signalY = (0, _scope.addOffsets)(parentScope.offsets.y, `datum[${JSON.stringify(_constants.FieldNames.WrapRow)}] * ${names.cellHeight}`, _constants.SignalNames.FacetPaddingTop);
    const update = {
      height: {
        signal: signalH
      },
      width: {
        signal: signalW
      },
      x: {
        signal: signalX
      },
      y: {
        signal: signalY
      }
    };
    const offsets = {
      x: signalX,
      y: signalY,
      h: signalH,
      w: signalW
    };
    const group = {
      style: 'cell',
      name: prefix,
      type: 'group',
      from: {
        data: names.rowColumnDataName
      },
      encode: {
        update
      }
    };
    (0, _scope.addMarks)(globalScope.markGroup, group);
    const sizeSignals = {
      layoutHeight: `(${names.cellHeight} - ${_constants.SignalNames.FacetPaddingTop} - ${_constants.SignalNames.FacetPaddingBottom})`,
      layoutWidth: `(${names.cellWidth} - ${_constants.SignalNames.FacetPaddingLeft})`,
      colCount: names.colCount,
      rowCount: `ceil(${names.dataLength} / ${names.colCount})`
    };

    if (cellTitles) {
      (0, _facetTitle.addFacetCellTitles)(group, sizeSignals, axisTextColor);
    }

    return {
      facetScope: group,
      sizeSignals,
      offsets
    };
  }

}

exports.Wrap = Wrap;
},{"./layout":"GfLt","../bin":"HtEf","../constants":"kNZP","../facetSearch":"keY5","../facetTitle":"xF0Y","../ordinal":"F91X","../scope":"Nfxo","../signals":"TTOO"}],"gUMf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFacetLayout = getFacetLayout;

var _cross = require("./layouts/cross");

var _defaults = require("./defaults");

var _constants = require("./constants");

var _slice = require("./layouts/slice");

var _wrap = require("./layouts/wrap");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function getFacetLayout(facetStyle, facetColumn, facetVColumn, axisTextColor) {
  let layoutPair;
  const scales = [];
  let signals;
  const groupby = facetColumn;
  const plotPadding = {
    x: 0,
    y: 0
  };

  switch (facetStyle) {
    case 'horizontal':
      {
        const props = {
          orientation: 'horizontal',
          groupby
        };
        layoutPair = {
          layoutClass: _slice.Slice,
          props
        };
        break;
      }

    case 'vertical':
      {
        const props = {
          orientation: 'vertical',
          groupby
        };
        layoutPair = {
          layoutClass: _slice.Slice,
          props
        };
        break;
      }

    case 'cross':
      {
        const props = {
          axisTextColor,
          colRowTitles: true,
          groupbyX: groupby,
          groupbyY: facetVColumn
        };
        layoutPair = {
          layoutClass: _cross.Cross,
          props
        };
        signals = [{
          name: _constants.SignalNames.FacetPaddingBottom,
          update: `${_defaults.facetPaddingBottom}`
        }, {
          name: _constants.SignalNames.FacetPaddingLeft,
          update: `${_defaults.facetPaddingLeft}`
        }, {
          name: _constants.SignalNames.FacetPaddingTop,
          update: '0'
        }];
        plotPadding.y = _defaults.facetPaddingTop;
        plotPadding.x = _defaults.facetPaddingRight;
        break;
      }

    case 'wrap':
    default:
      {
        const props = {
          axisTextColor,
          cellTitles: true,
          groupby
        };
        layoutPair = {
          layoutClass: _wrap.Wrap,
          props
        };
        signals = [{
          name: _constants.SignalNames.FacetPaddingBottom,
          update: `${_defaults.facetPaddingBottom}`
        }, {
          name: _constants.SignalNames.FacetPaddingLeft,
          update: `${_defaults.facetPaddingLeft}`
        }, {
          name: _constants.SignalNames.FacetPaddingTop,
          update: `${_defaults.facetPaddingTop}`
        }];
        break;
      }
  }

  return {
    layoutPair,
    plotPadding,
    scales,
    signals
  };
}
},{"./layouts/cross":"MA9m","./defaults":"visW","./constants":"kNZP","./layouts/slice":"QgJa","./layouts/wrap":"bQXK"}],"qyiT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fill = fill;
exports.opacity = opacity;

var _constants = require("./constants");

function fill(context, colorFieldName, scale) {
  const {
    specColumns,
    insight,
    specViewOptions
  } = context;
  const colorColumn = specColumns.color;
  return colorColumn ? colorColumn.isColorData || insight.directColor ? {
    field: colorColumn.name
  } : {
    scale,
    field: colorColumn.quantitative ? colorColumn.name : colorFieldName
  } : {
    value: specViewOptions.colors.defaultCube
  };
}

function opacity(context) {
  const result = {
    signal: _constants.SignalNames.MarkOpacity
  };
  return result;
}
},{"./constants":"kNZP"}],"hPp4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpecBuilder = void 0;

var _axes = require("./axes");

var _color = require("./color");

var _constants = require("./constants");

var _defaults = require("./defaults");

var _facetLayout = require("./facetLayout");

var _facetTitle = require("./facetTitle");

var _fill = require("./fill");

var _scope = require("./scope");

var _signals = require("./signals");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class SpecBuilder {
  constructor(props) {
    this.props = props;
    this.minCellWidth = {
      name: _constants.SignalNames.MinCellWidth,
      update: `${_defaults.minFacetWidth}`
    };
    this.minCellHeight = {
      name: _constants.SignalNames.MinCellHeight,
      update: `${_defaults.minFacetHeight}`
    };
    this.plotOffsetLeft = {
      name: _constants.SignalNames.PlotOffsetLeft,
      update: '0'
    };
    this.plotOffsetTop = {
      name: _constants.SignalNames.PlotOffsetTop,
      update: '0'
    };
    this.plotOffsetBottom = {
      name: _constants.SignalNames.PlotOffsetBottom,
      update: '0'
    };
    this.plotOffsetRight = {
      name: _constants.SignalNames.PlotOffsetRight,
      update: '0'
    };
    this.plotHeightOut = {
      name: _constants.SignalNames.PlotHeightOut,
      update: _constants.SignalNames.PlotHeightIn
    };
    this.plotWidthOut = {
      name: _constants.SignalNames.PlotWidthOut,
      update: _constants.SignalNames.PlotWidthIn
    };
  }

  validate() {
    const {
      specCapabilities,
      specContext
    } = this.props;
    const {
      roles
    } = specCapabilities;
    const required = roles.filter(r => !r.allowNone);
    const numeric = roles.filter(r => r.excludeCategoric);
    const errors = required.map(r => {
      if (specContext.specColumns[r.role]) {
        return null;
      } else {
        return `Field ${r.role} is required.`;
      }
    }).concat(numeric.map(r => {
      if (specContext.specColumns[r.role] && !specContext.specColumns[r.role].quantitative) {
        return `Field ${r.role} must be quantitative.`;
      } else {
        return null;
      }
    })).filter(Boolean);
    return errors;
  }

  build() {
    const {
      specCapabilities
    } = this.props;
    const errors = this.validate();

    if (errors.length) {
      return {
        errors,
        specCapabilities,
        vegaSpec: null
      };
    } else {
      const {
        specContext
      } = this.props;
      const {
        insight,
        specColumns,
        specViewOptions
      } = specContext;
      const dataName = 'data_source';
      const {
        vegaSpec,
        groupMark
      } = this.initSpec(dataName);
      const {
        topColorField,
        colorDataName
      } = (0, _color.addColor)({
        scope: vegaSpec,
        dataName,
        specContext,
        scaleName: _constants.ScaleNames.Color,
        legendDataName: 'data_legend',
        topLookupName: 'data_topcolorlookup',
        colorReverseSignalName: _constants.SignalNames.ColorReverse
      });
      const globalScope = this.createGlobalScope(colorDataName, vegaSpec, groupMark);
      let facetLayout;

      if (insight.columns.facet) {
        const discreteFacetColumn = {
          column: specColumns.facet,
          defaultBins: _defaults.defaultBins,
          maxbins: _defaults.maxbins,
          maxbinsSignalDisplayName: specViewOptions.language.FacetMaxBins,
          maxbinsSignalName: _constants.SignalNames.FacetBins
        };
        const discreteFacetVColumn = {
          column: specColumns.facetV,
          defaultBins: _defaults.defaultBins,
          maxbins: _defaults.maxbins,
          maxbinsSignalDisplayName: specViewOptions.language.FacetVMaxBins,
          maxbinsSignalName: _constants.SignalNames.FacetVBins
        };
        facetLayout = (0, _facetLayout.getFacetLayout)(insight.facetStyle, discreteFacetColumn, discreteFacetVColumn, specViewOptions.colors.axisText);
        (0, _scope.addSignal)(vegaSpec, ...facetLayout.signals);
        (0, _scope.addScale)(vegaSpec, ...facetLayout.scales);
        this.props.layouts = [facetLayout.layoutPair, ...this.props.layouts];
        this.plotOffsetTop.update = `${facetLayout.plotPadding.y}`;
        this.plotOffsetRight.update = `${facetLayout.plotPadding.x}`;
      }

      const {
        firstScope,
        finalScope,
        specResult,
        allGlobalScales,
        allEncodingRules,
        groupings,
        sums,
        offsets
      } = this.iterateLayouts(globalScope, groupMark, colorDataName);

      if (specResult) {
        return specResult;
      }

      if (allGlobalScales.length > 0) {
        let axesScopes = facetLayout ? (0, _facetTitle.addFacetAxesGroupMarks)({
          globalScope: globalScope.scope,
          plotScope: groupMark,
          facetScope: firstScope,
          plotHeightOut: this.plotHeightOut.name,
          plotWidthOut: this.plotWidthOut.name,
          colTitleScaleName: 'scale_facet_col_title',
          rowTitleScaleName: 'scale_facet_row_title',
          colSeqName: 'data_FacetCellColTitles',
          rowSeqName: 'data_FacetCellRowTitles'
        }) : {
          main: [{
            scope: groupMark,
            lines: true,
            labels: true,
            title: true
          }]
        };
        (0, _axes.addGlobalAxes)({
          globalScope,
          allGlobalScales,
          axisScales: this.props.axisScales,
          plotOffsetSignals: {
            x: this.plotOffsetLeft,
            y: this.plotOffsetBottom
          },
          axesOffsets: {
            x: _defaults.axesOffsetX,
            y: _defaults.axesOffsetY
          },
          axesTitlePadding: facetLayout ? {
            x: _defaults.axesTitlePaddingFacetX,
            y: _defaults.axesTitlePaddingFacetY
          } : {
            x: _defaults.axesTitlePaddingX,
            y: _defaults.axesTitlePaddingY
          },
          labelBaseline: {
            x: 'top',
            y: 'middle'
          },
          specColumns,
          specViewOptions,
          axesScopes
        });
      } //add mark to the final scope


      if (finalScope.mark) {
        const {
          update
        } = finalScope.mark.encode;

        if (offsets.length) {
          const outputDataName = 'output';
          finalScope.mark.from.data = outputDataName;
          (0, _scope.addData)(globalScope.scope, {
            name: outputDataName,
            source: globalScope.markDataName,
            transform: [{
              type: 'formula',
              expr: finalScope.offsets.x,
              as: _constants.FieldNames.OffsetX
            }, {
              type: 'formula',
              expr: finalScope.offsets.y,
              as: _constants.FieldNames.OffsetY
            }]
          });
          update.x = {
            field: _constants.FieldNames.OffsetX
          };
          update.y = {
            field: _constants.FieldNames.OffsetY
          };
        }

        allEncodingRules.forEach(map => {
          for (let key in map) {
            if (update[key]) {
              let arrIn = map[key];

              if (!Array.isArray(update[key])) {
                let value = update[key];
                let arrOut = [];
                update[key] = arrOut;
                arrIn.forEach(rule => arrOut.push(rule));
                arrOut.push(value);
              } else {
                let arrOut = update[key];
                arrIn.forEach(rule => arrOut.unshift(rule));
              }
            }
          }
        });
        update.fill = (0, _fill.fill)(specContext, topColorField, _constants.ScaleNames.Color);
        update.opacity = (0, _fill.opacity)(specContext);
      }

      return {
        specCapabilities,
        vegaSpec
      };
    }
  }

  createGlobalScope(dataName, scope, markGroup) {
    const {
      minCellWidth,
      minCellHeight,
      plotHeightOut,
      plotWidthOut
    } = this;
    const globalScope = {
      data: (0, _scope.getDataByName)(scope.data, dataName).data,
      markDataName: dataName,
      scope,
      markGroup,
      offsets: {
        x: '0',
        y: '0',
        h: _constants.SignalNames.PlotHeightIn,
        w: _constants.SignalNames.PlotWidthIn
      },
      sizeSignals: {
        layoutHeight: _constants.SignalNames.PlotHeightIn,
        layoutWidth: _constants.SignalNames.PlotWidthIn
      },
      signals: {
        minCellWidth,
        minCellHeight,
        plotHeightOut,
        plotWidthOut
      }
    };
    return globalScope;
  }

  initSpec(dataName) {
    const {
      minCellWidth,
      minCellHeight,
      plotOffsetLeft,
      plotOffsetBottom,
      plotOffsetTop,
      plotOffsetRight,
      plotHeightOut,
      plotWidthOut
    } = this;
    const {
      specContext
    } = this.props;
    const {
      insight
    } = specContext;
    const groupMark = {
      type: 'group',
      //style: 'cell',
      encode: {
        update: {
          x: {
            signal: _constants.SignalNames.PlotOffsetLeft
          },
          y: {
            signal: _constants.SignalNames.PlotOffsetTop
          },
          height: {
            signal: _constants.SignalNames.PlotHeightOut
          },
          width: {
            signal: _constants.SignalNames.PlotWidthOut
          }
        }
      }
    };
    const inputDataname = 'input';
    const vegaSpec = {
      $schema: 'https://vega.github.io/schema/vega/v5.json',
      //style: 'cell',
      data: [{
        name: inputDataname
      }, {
        name: dataName,
        source: inputDataname,
        transform: []
      }],
      marks: [groupMark],
      signals: (0, _signals.textSignals)(specContext, _constants.SignalNames.ViewportHeight).concat([minCellWidth, minCellHeight, {
        name: _constants.SignalNames.ViewportHeight,
        update: `max(${_constants.SignalNames.MinCellHeight}, ${insight.size.height})`
      }, {
        name: _constants.SignalNames.ViewportWidth,
        update: `max(${_constants.SignalNames.MinCellWidth}, ${insight.size.width})`
      }, plotOffsetLeft, plotOffsetTop, plotOffsetBottom, plotOffsetRight, {
        name: _constants.SignalNames.PlotHeightIn,
        update: `${_constants.SignalNames.ViewportHeight} - ${_constants.SignalNames.PlotOffsetBottom}`
      }, {
        name: _constants.SignalNames.PlotWidthIn,
        update: `${_constants.SignalNames.ViewportWidth} - ${_constants.SignalNames.PlotOffsetLeft} - ${_constants.SignalNames.PlotOffsetRight}`
      }, plotHeightOut, plotWidthOut, {
        name: 'height',
        update: `${_constants.SignalNames.PlotOffsetTop} + ${_constants.SignalNames.PlotHeightOut} + ${_constants.SignalNames.PlotOffsetBottom}`
      }, {
        name: 'width',
        update: `${_constants.SignalNames.PlotWidthOut} + ${_constants.SignalNames.PlotOffsetLeft} + ${_constants.SignalNames.PlotOffsetRight}`
      }])
    };
    return {
      vegaSpec,
      groupMark
    };
  }

  iterateLayouts(globalScope, scope, dataName) {
    let specResult;
    let parentScope = {
      sizeSignals: globalScope.sizeSignals,
      offsets: globalScope.offsets
    };
    let firstScope;
    let childScope;
    const groupings = [];
    const offsets = [];
    let sums = false;
    let {
      layouts,
      specCapabilities
    } = this.props;
    const allGlobalScales = [];
    const allEncodingRules = [];

    for (let i = 0; i < layouts.length; i++) {
      if (!parentScope) continue;
      let buildProps = {
        globalScope,
        parentScope,
        axesScales: this.props.axisScales,
        groupings,
        id: i
      };
      let layout = this.createLayout(layouts[i], buildProps);

      try {
        childScope = layout.build();
        childScope.id = i;

        if (childScope.offsets) {
          offsets.push(childScope.offsets);
        }

        let groupby = layout.getGrouping();

        if (groupby) {
          groupings.push({
            id: i,
            groupby,
            fieldOps: [{
              field: null,
              op: 'count',
              as: _constants.FieldNames.Count
            }]
          });
        }

        let sumOp = layout.getAggregateSumOp();

        if (sumOp) {
          groupings[groupings.length - 1].fieldOps.push(sumOp);
          sums = true;
        }
      } catch (e) {
        specResult = {
          errors: [e.stack],
          specCapabilities,
          vegaSpec: null
        };
        break;
      }

      if (childScope && childScope.globalScales) {
        allGlobalScales.push(childScope.globalScales);
      }

      if (childScope.encodingRuleMap) {
        allEncodingRules.push(childScope.encodingRuleMap);
      }

      if (i === 0) {
        firstScope = childScope;
      }

      parentScope = childScope;
    }

    return {
      firstScope,
      finalScope: parentScope,
      specResult,
      allGlobalScales,
      allEncodingRules,
      groupings,
      sums,
      offsets
    };
  }

  createLayout(layoutPair, buildProps) {
    const {
      layoutClass,
      props
    } = layoutPair;
    const layoutBuildProps = Object.assign(Object.assign({}, props), buildProps);
    const layout = new layoutClass(layoutBuildProps);
    layout.id = buildProps.id;
    return layout;
  }

}

exports.SpecBuilder = SpecBuilder;
},{"./axes":"Zzpz","./color":"MIbS","./constants":"kNZP","./defaults":"visW","./facetLayout":"gUMf","./facetTitle":"xF0Y","./fill":"qyiT","./scope":"Nfxo","./signals":"TTOO"}],"HWtS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSpecBuilderForChart = getSpecBuilderForChart;

var _barchartH = _interopRequireDefault(require("./barchartH"));

var _barchartV = _interopRequireDefault(require("./barchartV"));

var _density = _interopRequireDefault(require("./density"));

var _grid = _interopRequireDefault(require("./grid"));

var _scatterplot = _interopRequireDefault(require("./scatterplot"));

var _stacks = _interopRequireDefault(require("./stacks"));

var _strips = _interopRequireDefault(require("./strips"));

var _treemap = _interopRequireDefault(require("./treemap"));

var _specBuilder = require("../specBuilder");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const map = {
  barchart: _barchartV.default,
  barchartH: _barchartH.default,
  barchartV: _barchartV.default,
  density: _density.default,
  grid: _grid.default,
  scatterplot: _scatterplot.default,
  stacks: _stacks.default,
  strips: _strips.default,
  treemap: _treemap.default
};

function getSpecBuilderForChart(specContext) {
  const {
    insight
  } = specContext;
  let props;
  const fn = map[insight.chart];

  if (fn) {
    props = fn(specContext);
    return new _specBuilder.SpecBuilder(Object.assign(Object.assign({}, props), {
      specContext
    }));
  }
}
},{"./barchartH":"PsHp","./barchartV":"AVzi","./density":"PDD1","./grid":"ys7l","./scatterplot":"mVfN","./stacks":"Fc39","./strips":"Z0w5","./treemap":"GcJ6","../specBuilder":"hPp4"}],"hdg1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"TIYW":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"hdg1"}],"bVm2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"VUvB":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"hdg1","./color.js":"TIYW","./math.js":"bVm2"}],"LYgN":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"hdg1","./color.js":"TIYW","./math.js":"bVm2"}],"mFud":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"TIYW","./lab.js":"VUvB","./cubehelix.js":"LYgN"}],"x9Lc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColumnsFromData = getColumnsFromData;
exports.getSpecColumns = getSpecColumns;
exports.inferAll = inferAll;
exports.getStats = getStats;

var _d3Color = require("d3-color");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function isColor(cssColorSpecifier) {
  return !!(0, _d3Color.color)(cssColorSpecifier);
}

function isQuantitative(column) {
  return column.type === 'number' || column.type === 'integer';
}
/**
 * Derive column metadata from the data array.
 * @param data Array of data objects.
 */


function getColumnsFromData(inferTypesFn, data, columnTypes) {
  const sample = data[0];
  const fields = sample ? Object.keys(sample) : [];
  const inferences = Object.assign(Object.assign({}, inferTypesFn(data, fields)), columnTypes);
  const columns = fields.map(name => {
    const column = {
      name,
      type: inferences[name]
    };
    return column;
  });
  inferAll(columns, data);
  return columns;
}
/**
 * Get columns associated with each Insight role.
 * @param insight Insight to specify column roles.
 * @param columns Array of Columns inferred from the data.
 */


function getSpecColumns(insight, columns) {
  function getColumnByName(name) {
    return columns.filter(c => c.name === name)[0];
  }

  return {
    color: getColumnByName(insight.columns && insight.columns.color),
    facet: getColumnByName(insight.columns && insight.columns.facet),
    facetV: getColumnByName(insight.columns && insight.columns.facetV),
    group: getColumnByName(insight.columns && insight.columns.group),
    size: getColumnByName(insight.columns && insight.columns.size),
    sort: getColumnByName(insight.columns && insight.columns.sort),
    uid: getColumnByName(insight.columns && insight.columns.uid),
    x: getColumnByName(insight.columns && insight.columns.x),
    y: getColumnByName(insight.columns && insight.columns.y),
    z: getColumnByName(insight.columns && insight.columns.z)
  };
}
/**
 * Populate columns with type inferences and stats.
 * @param columns Array of columns.
 * @param data Array of data objects.
 */


function inferAll(columns, data) {
  columns.forEach(column => {
    if (column) {
      if (typeof column.quantitative !== 'boolean') {
        column.quantitative = isQuantitative(column);
      }

      if (!column.stats) {
        column.stats = getStats(data, column);
      }

      if (column.type === 'string' && typeof column.isColorData !== 'boolean') {
        checkIsColorData(data, column);
      }
    }
  });
}

function checkIsColorData(data, column) {
  if (!column.stats.hasColorData) {
    column.isColorData = false;
    return;
  }

  for (let i = 0; i < data.length; i++) {
    if (!isColor(data[i][column.name])) {
      column.isColorData = false;
      return;
    }
  }

  column.isColorData = true;
}

function getStats(data, column) {
  const distinctMap = {};
  const stats = {
    distinctValueCount: null,
    max: null,
    mean: null,
    min: null
  };
  let sum = 0;

  for (let i = 0; i < data.length; i++) {
    let row = data[i];
    let value = row[column.name];
    distinctMap[value] = true;

    if (stats.max === null || value > stats.max) {
      stats.max = value;
    }

    if (stats.min === null || value < stats.min) {
      stats.min = value;
    }

    let num = +value;

    if (!isNaN(num)) {
      sum += num;
    }

    if (column.type === 'string' && !stats.hasColorData && isColor(value)) {
      stats.hasColorData = true;
    }
  }

  if (column.quantitative) {
    stats.mean = data.length > 0 && sum / data.length;
    stats.hasNegative = detectNegative(column, data);

    if (column.type === 'integer') {
      stats.isSequential = detectSequentialColumn(column, data);
    }
  }

  stats.distinctValueCount = Object.keys(distinctMap).length;
  return stats;
}

function detectNegative(column, data) {
  for (let i = 1; i < data.length; i++) {
    if (data[i][column.name] < 0) return true;
  }

  return false;
}

function detectSequentialColumn(column, data) {
  if (data.length < 2) return false;
  let colname = column.name;

  for (let i = 1; i < data.length; i++) {
    if (data[i][colname] !== data[i - 1][colname] + 1) return false;
  }

  return true;
}
},{"d3-color":"mFud"}],"rWkQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cloneVegaSpecWithData = cloneVegaSpecWithData;

var _charts = require("./charts");

var _inference = require("./inference");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function cloneVegaSpecWithData(context, currData) {
  const {
    specColumns
  } = context;
  const columns = [specColumns.color, specColumns.facet, specColumns.facetV, specColumns.group, specColumns.size, specColumns.sort, specColumns.x, specColumns.y, specColumns.z];
  (0, _inference.inferAll)(columns, currData);
  const specBuilder = (0, _charts.getSpecBuilderForChart)(context);
  let specResult;

  if (specBuilder) {
    try {
      specResult = specBuilder.build();
    } catch (e) {
      specResult = {
        specCapabilities: null,
        vegaSpec: null,
        errors: [e.stack]
      };
    }

    if (!specResult.errors) {
      const data0 = specResult.vegaSpec.data[0];
      data0.values = currData;
    }
  } else {
    specResult = {
      specCapabilities: null,
      vegaSpec: null,
      errors: [`could not build spec for ${context.insight.chart}`]
    };
  }

  return specResult;
}
},{"./charts":"HWtS","./inference":"x9Lc"}],"gl1V":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _clone = require("./clone");

Object.keys(_clone).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clone[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _inference = require("./inference");

Object.keys(_inference).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inference[key];
    }
  });
});
},{"./clone":"rWkQ","./constants":"kNZP","./inference":"x9Lc"}],"Syc7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ColorScaleNone", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.ColorScaleNone;
  }
});
Object.defineProperty(exports, "FieldNames", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.FieldNames;
  }
});
Object.defineProperty(exports, "ScaleNames", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.ScaleNames;
  }
});
Object.defineProperty(exports, "SignalNames", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.SignalNames;
  }
});
exports.GL_ORDINAL = void 0;

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const GL_ORDINAL = 'GL_ORDINAL';
exports.GL_ORDINAL = GL_ORDINAL;
},{"@msrvida/sanddance-specs":"gl1V"}],"AN7n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSearchExpressionGroup = isSearchExpressionGroup;
exports.createGroupFromExpression = createGroupFromExpression;
exports.ensureSearchExpressionGroupArray = ensureSearchExpressionGroupArray;

function isSearchExpressionGroup(search) {
  if (!search) {
    return false;
  }

  return !!search.expressions;
}

function createGroupFromExpression(input) {
  const output = {
    expressions: [input]
  };
  return output;
}

function ensureSearchExpressionGroupArray(search) {
  if (Array.isArray(search)) {
    return [...search];
  } else if (isSearchExpressionGroup(search)) {
    return [search];
  } else {
    return [createGroupFromExpression(search)];
  }
}
},{}],"RvJY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareExpression = compareExpression;
exports.compareGroup = compareGroup;
exports.compare = compare;
exports.startsWith = startsWith;

var _group = require("./group");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const expressionKeys = Object.keys({
  clause: null,
  name: null,
  operator: null,
  value: null
});

function compareExpression(a, b) {
  if (a && b) {
    for (let k = 0; k < expressionKeys.length; k++) {
      let key = expressionKeys[k];
      if (a[key] != b[key]) return false;
    }
  } else {
    return !a && !b;
  }

  return true;
}

const groupKeys = Object.keys({
  clause: null
});

function compareGroup(a, b) {
  for (let k = 0; k < groupKeys.length; k++) {
    let key = groupKeys[k];
    if (a[key] != b[key]) return false;
  }

  if (!a.expressions && !b.expressions) return true;
  if (!a.expressions || !b.expressions) return false;
  if (a.expressions.length != b.expressions.length) return false;

  for (let i = 0; i < a.expressions.length; i++) {
    if (!compareExpression(a.expressions[i], b.expressions[i])) return false;
  }

  return true;
}

function compare(a, b) {
  if (a == b) return true;
  if (!a || !b) return false;
  let arrs = [a, b].map(_group.ensureSearchExpressionGroupArray);
  let [arrA, arrB] = arrs;
  if (arrA.length != arrB.length) return false;

  for (let i = 0; i < arrA.length; i++) {
    if (!compareGroup(arrA[i], arrB[i])) return false;
  }

  return true;
}

function startsWith(whole, part) {
  if (!part) return true;
  let arrs = [whole, part].map(_group.ensureSearchExpressionGroupArray);
  let [wholeArray, partArray] = arrs;
  if (partArray.length > wholeArray.length) return false;

  for (let i = 0; i < partArray.length; i++) {
    if (!compareGroup(wholeArray[i], partArray[i])) return false;
  }

  return true;
}
},{"./group":"AN7n"}],"hqwp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Exec = void 0;

var _group = require("./group");

function valueToBoolean(value) {
  if (typeof value === 'string') {
    switch (value.toLowerCase()) {
      case 'true':
        return true;

      case 'false':
        return false;
    }
  }

  return !!value;
}

function valueToString(value) {
  if (value == null) {
    return '';
  }

  switch (typeof value) {
    case 'string':
      return value;

    case 'boolean':
    case 'number':
      return value.toString();
  }

  return '';
}

function isStringOperation(ex) {
  switch (ex.operator) {
    case 'contains':
    case '!contains':
    case 'starts':
    case '!starts':
      return true;
  }

  return false;
}

function isnullorEmpty(value) {
  if (value == null) return true; //double equal sign to also catch undefined

  if (typeof value === 'string' && value.length === 0) return true;
  return false;
}

class Exec {
  constructor(search, columns) {
    this.columns = columns;
    this.groups = (0, _group.ensureSearchExpressionGroupArray)(search).map(g => {
      const expressions = g.expressions.filter(Boolean);
      expressions.forEach(ex => {
        ex.column = this.getColumn(ex.name);
        ex.valueBool = valueToBoolean(ex.value);
        ex.valueLow = valueToString(ex.value).toLocaleLowerCase();
        ex.stringOperation = isStringOperation(ex);
      });
      const group = Object.assign(Object.assign({}, g), {
        expressions
      });
      return group;
    });
  }

  getColumn(name) {
    for (let i = 0; i < this.columns.length; i++) {
      if (this.columns[i].name == name) {
        return this.columns[i];
      }
    }
  }

  runExpressionOnColumn(datum, ex) {
    const actualDataValue = datum[ex.name];

    if (ex.operator === 'isnullorEmpty') {
      return isnullorEmpty(actualDataValue);
    } else if (ex.operator === '!isnullorEmpty') {
      return !isnullorEmpty(actualDataValue);
    }

    let dataValue = actualDataValue;
    let expressionValue = ex.value;

    if (ex.column) {
      if (ex.column.type === 'string' || ex.stringOperation) {
        dataValue = valueToString(actualDataValue).toLocaleLowerCase();
        expressionValue = ex.valueLow;
      } else if (ex.column.type === 'boolean') {
        dataValue = valueToBoolean(actualDataValue);
        expressionValue = ex.valueBool;
      } else if (ex.column.quantitative) {
        dataValue = +actualDataValue;
        expressionValue = +ex.value;
      }
    }

    switch (ex.operator) {
      case '!=':
        return dataValue != expressionValue;

      case '<':
        return dataValue < expressionValue;

      case '<=':
        return dataValue <= expressionValue;

      case '==':
        return dataValue == expressionValue;

      case '>':
        return dataValue > expressionValue;

      case '>=':
        return dataValue >= expressionValue;

      case 'contains':
        return dataValue.indexOf(expressionValue) >= 0;

      case '!contains':
        return dataValue.indexOf(expressionValue) < 0;

      case 'starts':
        return dataValue.indexOf(expressionValue) == 0;

      case '!starts':
        return dataValue.indexOf(expressionValue) !== 0;
    }
  }

  runExpression(datum, ex) {
    if (ex.name == null) {
      //run on all columns
      const group = {
        expressions: this.columns.map((column, i) => {
          const ex2 = Object.assign(Object.assign({}, ex), {
            column,
            name: column.name
          });

          if (i) {
            ex2.clause = '||';
          }

          return ex2;
        })
      };
      return this.runGroup(datum, group);
    } else {
      return this.runExpressionOnColumn(datum, ex);
    }
  }

  runGroup(datum, group) {
    let accumulator = this.runExpression(datum, group.expressions[0]);

    for (let i = 1; i < group.expressions.length; i++) {
      let ex = group.expressions[i];

      switch (ex.clause) {
        case '&&':
          accumulator = accumulator && this.runExpression(datum, ex);
          break;

        case '||':
          accumulator = accumulator || this.runExpression(datum, ex);
          break;
      }
    }

    return accumulator;
  }

  run(datum) {
    let accumulator = this.runGroup(datum, this.groups[0]);

    for (let i = 1; i < this.groups.length; i++) {
      let group = this.groups[i];

      switch (group.clause) {
        case '&&':
          accumulator = accumulator && this.runGroup(datum, group);
          break;

        case '||':
          accumulator = accumulator || this.runGroup(datum, group);
          break;
      }
    }

    return accumulator;
  }

}

exports.Exec = Exec;
},{"./group":"AN7n"}],"jBu6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invert = invert;

var _group = require("./group");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function invertSearchExpressionGroup(input) {
  //this only works if all expressions in this group have the same clause
  const output = {
    expressions: input.expressions.map(invertSearchExpression)
  };

  if (input.clause) {
    output.clause = invertedClauses[input.clause];
  }

  return output;
}

const invertedOperators = {
  '!=': '==',
  '==': '!=',
  '<': '>=',
  '>=': '<',
  '<=': '>',
  '>': '<=',
  '!contains': 'contains',
  'contains': '!contains',
  '!isnullorEmpty': 'isnullorEmpty',
  'isnullorEmpty': '!isnullorEmpty',
  '!starts': 'starts',
  'starts': '!starts'
};
const invertedClauses = {
  '&&': '||',
  '||': '&&'
};

function invertSearchExpression(input) {
  const operator = invertedOperators[input.operator];
  const output = Object.assign(Object.assign({}, input), {
    operator
  });

  if (input.clause) {
    output.clause = invertedClauses[input.clause];
  }

  return output;
}

function invert(search) {
  if (Array.isArray(search)) {
    return search.map(invertSearchExpressionGroup);
  } else if ((0, _group.isSearchExpressionGroup)(search)) {
    return invertSearchExpressionGroup(search);
  } else {
    return invertSearchExpression(search);
  }
}
},{"./group":"AN7n"}],"YlDD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.narrow = narrow;

var _group = require("./group");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function narrow(a, b) {
  if (!a) {
    return b;
  }

  let arrs = [a, b].map(_group.ensureSearchExpressionGroupArray);
  let [arrA, arrB] = arrs;
  arrB[0].clause = '&&';
  return arrA.concat(arrB);
}
},{"./group":"AN7n"}],"VB4o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _compare = require("./compare");

Object.keys(_compare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _compare[key];
    }
  });
});

var _exec = require("./exec");

Object.keys(_exec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _exec[key];
    }
  });
});

var _group = require("./group");

Object.keys(_group).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _group[key];
    }
  });
});

var _invert = require("./invert");

Object.keys(_invert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _invert[key];
    }
  });
});

var _narrow = require("./narrow");

Object.keys(_narrow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _narrow[key];
    }
  });
});
},{"./compare":"RvJY","./exec":"hqwp","./group":"AN7n","./invert":"jBu6","./narrow":"YlDD"}],"JCLk":[function(require,module,exports) {

},{}],"Fy6F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.layerNames = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const layerNames = {
  cubes: 'LAYER_CUBES',
  lines: 'LAYER_LINES',
  text: 'LAYER_TEXT'
};
exports.layerNames = layerNames;
},{}],"yqJY":[function(require,module,exports) {
module.exports = ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "math", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "slot", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "svg", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr"];
},{}],"U8lN":[function(require,module,exports) {
'use strict';

module.exports = require('./html-tags.json');
},{"./html-tags.json":"yqJY"}],"yoYL":[function(require,module,exports) {
module.exports = [
	"a",
	"altGlyph",
	"altGlyphDef",
	"altGlyphItem",
	"animate",
	"animateColor",
	"animateMotion",
	"animateTransform",
	"circle",
	"clipPath",
	"color-profile",
	"cursor",
	"defs",
	"desc",
	"ellipse",
	"feBlend",
	"feColorMatrix",
	"feComponentTransfer",
	"feComposite",
	"feConvolveMatrix",
	"feDiffuseLighting",
	"feDisplacementMap",
	"feDistantLight",
	"feFlood",
	"feFuncA",
	"feFuncB",
	"feFuncG",
	"feFuncR",
	"feGaussianBlur",
	"feImage",
	"feMerge",
	"feMergeNode",
	"feMorphology",
	"feOffset",
	"fePointLight",
	"feSpecularLighting",
	"feSpotLight",
	"feTile",
	"feTurbulence",
	"filter",
	"font",
	"font-face",
	"font-face-format",
	"font-face-name",
	"font-face-src",
	"font-face-uri",
	"foreignObject",
	"g",
	"glyph",
	"glyphRef",
	"hkern",
	"image",
	"line",
	"linearGradient",
	"marker",
	"mask",
	"metadata",
	"missing-glyph",
	"mpath",
	"path",
	"pattern",
	"polygon",
	"polyline",
	"radialGradient",
	"rect",
	"script",
	"set",
	"stop",
	"style",
	"svg",
	"switch",
	"symbol",
	"text",
	"textPath",
	"title",
	"tref",
	"tspan",
	"use",
	"view",
	"vkern"
];
},{}],"VGVS":[function(require,module,exports) {
module.exports = require( './svg-tags.json' );
},{"./svg-tags.json":"yoYL"}],"YitK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createElement = createElement;
exports.mount = mount;
exports.findElementByChildPositions = findElementByChildPositions;
exports.focusActiveElement = focusActiveElement;
exports.setActiveElement = setActiveElement;
exports.getActiveElementInfo = getActiveElementInfo;

var htmlTags = _interopRequireWildcard(require("html-tags"));

var svgTags = _interopRequireWildcard(require("svg-tags"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Decamelizes a string with/without a custom separator (hyphen by default).
 * from: https://ourcodeworld.com/articles/read/608/how-to-camelize-and-decamelize-strings-in-javascript
 *
 * @param str String in camelcase
 * @param separator Separator for the new decamelized string.
 */
function decamelize(str, separator = '-') {
  return str.replace(/([a-z\d])([A-Z])/g, '$1' + separator + '$2').replace(/([A-Z]+)([A-Z][a-z\d]+)/g, '$1' + separator + '$2').toLowerCase();
}

function createElement(tag, attrs, ...children) {
  if (typeof tag === 'function') {
    const fn = tag;
    const props = attrs;
    props.children = children;
    return fn(props);
  } else {
    const ns = tagNamespace(tag);
    const el = ns ? document.createElementNS(ns, tag) : document.createElement(tag);
    const map = attrs;
    let ref;

    for (let name in map) {
      if (name && map.hasOwnProperty(name)) {
        let value = map[name];

        if (name === 'className' && value !== void 0) {
          setAttribute(el, ns, 'class', value.toString());
        } else if (name === 'disabled' && !value) {//do nothhing, omit this attribute
        } else if (value === null || value === undefined) {
          continue;
        } else if (value === true) {
          setAttribute(el, ns, name, name);
        } else if (typeof value === 'function') {
          if (name === 'ref') {
            ref = value;
          } else {
            el[name.toLowerCase()] = value;
          }
        } else if (typeof value === 'object') {
          setAttribute(el, ns, name, flatten(value));
        } else {
          setAttribute(el, ns, name, value.toString());
        }
      }
    }

    if (children && children.length > 0) {
      appendChildren(el, children);
    }

    if (ref) {
      ref(el);
    }

    return el;
  }
}

function setAttribute(el, ns, name, value) {
  if (ns) {
    el.setAttributeNS(null, name, value);
  } else {
    el.setAttribute(name, value);
  }
}

function flatten(o) {
  const arr = [];

  for (let prop in o) arr.push(`${decamelize(prop, '-')}:${o[prop]}`);

  return arr.join(';');
}

function addChild(parentElement, child) {
  if (child === null || child === undefined || typeof child === "boolean") {
    return;
  } else if (Array.isArray(child)) {
    appendChildren(parentElement, child);
  } else if (isElement(child)) {
    parentElement.appendChild(child);
  } else {
    parentElement.appendChild(document.createTextNode(child.toString()));
  }
}

function appendChildren(parentElement, children) {
  children.forEach(child => addChild(parentElement, child));
}

function isElement(el) {
  //nodeType cannot be zero https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType
  return !!el.nodeType;
}

function mount(element, container) {
  container.innerHTML = '';

  if (element) {
    addChild(container, element);
  }
}

function findElementByChildPositions(childPositions, container) {
  let element = container || document.body;
  let childPosition;

  while (element && childPositions.length) {
    childPosition = childPositions.shift();
    element = element.children.item(childPosition);
  }

  if (element) {
    return element;
  }

  ;
}

function focusActiveElement(element, activeElementInfo) {
  element.focus();
  element.scrollTop = activeElementInfo.scrollTop;
  const input = element;

  if (input.setSelectionRange && activeElementInfo && activeElementInfo.selectionStart != null && activeElementInfo.selectionEnd != null) {
    input.setSelectionRange(activeElementInfo.selectionStart, activeElementInfo.selectionEnd, activeElementInfo.selectionDirection);
  }
}

function setActiveElement(activeElementInfo, container) {
  if (activeElementInfo) {
    const element = findElementByChildPositions(activeElementInfo.childPositions, container);

    if (element) {
      focusActiveElement(element, activeElementInfo);
    }
  }
}

function getActiveElementInfo(container) {
  let element = document.activeElement;
  const {
    scrollTop,
    selectionDirection,
    selectionEnd,
    selectionStart
  } = element;
  const activeElementInfo = {
    childPositions: [],
    scrollTop,
    selectionDirection,
    selectionEnd,
    selectionStart
  };

  while (element && element !== document.body && element !== container) {
    activeElementInfo.childPositions.unshift(getChildPosition(element));
    element = element.parentElement;
  }

  if ((element === document.body || element === container) && activeElementInfo.childPositions.length) return activeElementInfo;
}

function getChildPosition(element) {
  let childPosition = 0;

  while (element = element.previousElementSibling) childPosition++;

  return childPosition;
}

function tagNamespace(tag) {
  //issue: this won't disambiguate certain tags which exist in both svg and html: <a>, <title> ...
  if (tag === 'svg' || svgTags.default.indexOf(tag) >= 0 && !(htmlTags.default.indexOf(tag) >= 0)) {
    return "http://www.w3.org/2000/svg";
  }
}
},{"html-tags":"U8lN","svg-tags":"VGVS"}],"KmGS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Table = void 0;

var _tsxCreateElement = require("tsx-create-element");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const KeyCodes = {
  ENTER: 13
};

const Table = props => {
  return (0, _tsxCreateElement.createElement)("table", {
    className: props.className
  }, props.children, props.rows.map((row, i) => (0, _tsxCreateElement.createElement)("tr", {
    className: props.rowClassName || '',
    onClick: e => props.onRowClick && props.onRowClick(e, i),
    tabIndex: props.onRowClick ? 0 : -1,
    onKeyUp: e => {
      if (e.keyCode === KeyCodes.ENTER && props.onRowClick) {
        props.onRowClick(e, i);
      }
    }
  }, row.cells.map((cell, i) => (0, _tsxCreateElement.createElement)("td", {
    className: cell.className || '',
    title: cell.title || ''
  }, cell.content)))));
};

exports.Table = Table;
},{"tsx-create-element":"YitK"}],"kUTU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Table", {
  enumerable: true,
  get: function () {
    return _controls.Table;
  }
});

var _controls = require("../controls");
},{"../controls":"KmGS"}],"dNRs":[function(require,module,exports) {
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

},{}],"Oim5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;
exports.allTruthy = allTruthy;
exports.push = push;

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function concat(...args) {
  return args.reduce((p, c) => c ? p.concat(c) : p, []);
}
/**
 * Returns array with items which are truthy.
 * @param args array or arrays to concat into a single array.
 */


function allTruthy(...args) {
  return args.reduce((p, c) => c ? p.concat(c) : p, []).filter(Boolean);
}
/**
 * Add an array to an existing array in place.
 * @param arr Array to append to.
 * @param items Arrof of items to append.
 */


function push(arr, items) {
  arr.push.apply(arr, items);
}
},{}],"i6BN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addEl = addEl;
exports.addDiv = addDiv;
exports.outerSize = outerSize;

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

/**
 * Create a new element as a child of another element.
 * @param tagName Tag name of the new tag to create.
 * @param parentElement Reference of the element to append to.
 * @returns new HTMLElement.
 */
function addEl(tagName, parentElement) {
  const el = document.createElement(tagName);
  parentElement.appendChild(el);
  return el;
}
/**
 * Create a new div HTMLElement as a child of another element.
 * @param parentElement Reference of the element to append to.
 * @param className Optional css class name to apply to the div.
 */


function addDiv(parentElement, className) {
  const div = addEl('div', parentElement);

  if (className) {
    div.className = className;
  }

  return div;
}
/**
 * Measure the outer height and width of an HTMLElement, including margin, padding and border.
 * @param el HTML Element to measure.
 */


function outerSize(el) {
  const cs = getComputedStyle(el);
  const height = parseFloat(cs.marginTop) + parseFloat(cs.paddingTop) + parseFloat(cs.borderTopWidth) + el.offsetHeight + parseFloat(cs.borderBottomWidth) + parseFloat(cs.paddingBottom) + parseFloat(cs.marginBottom);
  const width = parseFloat(cs.marginLeft) + parseFloat(cs.paddingLeft) + parseFloat(cs.borderLeftWidth) + el.offsetWidth + parseFloat(cs.borderRightWidth) + parseFloat(cs.paddingRight) + parseFloat(cs.marginRight);
  return {
    height,
    width
  };
}
},{}],"hgzN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var isMergeableObject = function isMergeableObject(value) {
  return isNonNullObject(value) && !isSpecial(value);
};

function isNonNullObject(value) {
  return !!value && typeof value === 'object';
}

function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25


var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}

function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}

function cloneUnlessOtherwiseSpecified(value, options) {
  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}

function defaultArrayMerge(target, source, options) {
  return target.concat(source).map(function (element) {
    return cloneUnlessOtherwiseSpecified(element, options);
  });
}

function mergeObject(target, source, options) {
  var destination = {};

  if (options.isMergeableObject(target)) {
    Object.keys(target).forEach(function (key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
  }

  Object.keys(source).forEach(function (key) {
    if (!options.isMergeableObject(source[key]) || !target[key]) {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    } else {
      destination[key] = deepmerge(target[key], source[key], options);
    }
  });
  return destination;
}

function deepmerge(target, source, options) {
  options = options || {};
  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
  options.isMergeableObject = options.isMergeableObject || isMergeableObject;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options);
  } else if (sourceIsArray) {
    return options.arrayMerge(target, source, options);
  } else {
    return mergeObject(target, source, options);
  }
}

deepmerge.all = function deepmergeAll(array, options) {
  if (!Array.isArray(array)) {
    throw new Error('first argument should be an array');
  }

  return array.reduce(function (prev, next) {
    return deepmerge(prev, next, options);
  }, {});
};

var deepmerge_1 = deepmerge;
var _default = deepmerge_1;
exports.default = _default;
},{}],"Jcn2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clone = clone;
exports.deepMerge = deepMerge;

var _deepmerge = _interopRequireWildcard(require("deepmerge"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const deepmerge = _deepmerge.default || _deepmerge;

function clone(objectToClone) {
  if (!objectToClone) return objectToClone;
  return deepmerge.all([objectToClone]);
}

const dontMerge = (destination, source) => source;

function deepMerge(...objectsToMerge) {
  const objects = objectsToMerge.filter(Boolean);
  return deepmerge.all(objects, {
    arrayMerge: dontMerge
  });
}
},{"deepmerge":"hgzN"}],"NpVm":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"hdg1"}],"cyp8":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"hdg1","./color.js":"NpVm","./math.js":"bVm2"}],"cAuQ":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"hdg1","./color.js":"NpVm","./math.js":"bVm2"}],"Mwak":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"NpVm","./lab.js":"cyp8","./cubehelix.js":"cAuQ"}],"j7Ij":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorIsEqual = colorIsEqual;
exports.colorFromString = colorFromString;
exports.colorToString = colorToString;
exports.desaturate = desaturate;

var _d3Color = require("d3-color");

function rgbToDeckglColor(c) {
  return [c.r, c.g, c.b, c.opacity * 255];
}
/**
 * Compares 2 colors to see if they are equal.
 * @param a Color to compare
 * @param b Color to compare
 * @returns True if colors are equal.
 */


function colorIsEqual(a, b) {
  if (a.length !== b.length) return false;

  for (let i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) return false;
  }

  return true;
}
/**
 * Convert a CSS color string to a Deck.gl Color array - (The rgba color of each object, in r, g, b, [a]. Each component is in the 0-255 range.).
 * @param cssColorSpecifier A CSS Color Module Level 3 specifier string.
 */


function colorFromString(cssColorSpecifier) {
  if (cssColorSpecifier) {
    const dc = (0, _d3Color.color)(cssColorSpecifier);

    if (dc) {
      const c = dc.rgb();
      return rgbToDeckglColor(c);
    }
  }
}
/**
 * Convert a Deck.gl color to a CSS rgba() string.
 * @param color A Deck.gl Color array - (The rgba color of each object, in r, g, b, [a]. Each component is in the 0-255 range.)
 */


function colorToString(color) {
  const c = [...color];

  if (c.length > 3) {
    c[3] /= 255;
  }

  return `rgba(${c.join(',')})`;
}

function desaturate(color, value) {
  const rgb = (0, _d3Color.rgb)(color[0], color[1], color[2], color[3] / 255);
  const hslColor = (0, _d3Color.hsl)(rgb);
  hslColor.s = value;
  const c = hslColor.rgb();
  return rgbToDeckglColor(c);
}
},{"d3-color":"Mwak"}],"To8D":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.use = use;
exports.base = void 0;
let vega = {
  CanvasHandler: null,
  inferType: null,
  inferTypes: null,
  loader: null,
  parse: null,
  read: null,
  renderModule: null,
  Renderer: null,
  sceneVisit: null,
  scheme: null,
  truncate: null,
  View: null
};
let deck = {
  CompositeLayer: null,
  COORDINATE_SYSTEM: null,
  Deck: null,
  Layer: null,
  LinearInterpolator: null,
  OrbitView: null,
  _OrbitController: null
};
let layers = {
  IconLayer: null,
  LineLayer: null,
  PolygonLayer: null,
  TextLayer: null
};
let luma = {
  CubeGeometry: null,
  fp64: null,
  Model: null,
  Texture2D: null
};
/**
 * References to dependency libraries.
 */

const base = {
  deck,
  layers,
  luma,
  vega
};
/**
 * Specify the dependency libraries to use for rendering.
 * @param vega Vega library.
 * @param deck deck/core library.
 * @param layers deck/layers library.
 * @param luma luma.gl library.
 */

exports.base = base;

function use(vega, deck, layers, luma) {
  base.deck = deck;
  base.layers = layers;
  base.luma = luma;
  base.vega = vega;
}
},{}],"jBdf":[function(require,module,exports) {
'use strict';

module.exports = TinySDF;
module.exports.default = TinySDF;

var INF = 1e20;

function TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight) {
    this.fontSize = fontSize || 24;
    this.buffer = buffer === undefined ? 3 : buffer;
    this.cutoff = cutoff || 0.25;
    this.fontFamily = fontFamily || 'sans-serif';
    this.fontWeight = fontWeight || 'normal';
    this.radius = radius || 8;
    var size = this.size = this.fontSize + this.buffer * 2;

    this.canvas = document.createElement('canvas');
    this.canvas.width = this.canvas.height = size;

    this.ctx = this.canvas.getContext('2d');
    this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;
    this.ctx.textBaseline = 'middle';
    this.ctx.fillStyle = 'black';

    // temporary arrays for the distance transform
    this.gridOuter = new Float64Array(size * size);
    this.gridInner = new Float64Array(size * size);
    this.f = new Float64Array(size);
    this.d = new Float64Array(size);
    this.z = new Float64Array(size + 1);
    this.v = new Int16Array(size);

    // hack around https://bugzilla.mozilla.org/show_bug.cgi?id=737852
    this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));
}

TinySDF.prototype.draw = function (char) {
    this.ctx.clearRect(0, 0, this.size, this.size);
    this.ctx.fillText(char, this.buffer, this.middle);

    var imgData = this.ctx.getImageData(0, 0, this.size, this.size);
    var alphaChannel = new Uint8ClampedArray(this.size * this.size);

    for (var i = 0; i < this.size * this.size; i++) {
        var a = imgData.data[i * 4 + 3] / 255; // alpha value
        this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);
        this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);
    }

    edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);
    edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);

    for (i = 0; i < this.size * this.size; i++) {
        var d = this.gridOuter[i] - this.gridInner[i];
        alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));
    }

    return alphaChannel;
};

// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf
function edt(data, width, height, f, d, v, z) {
    for (var x = 0; x < width; x++) {
        for (var y = 0; y < height; y++) {
            f[y] = data[y * width + x];
        }
        edt1d(f, d, v, z, height);
        for (y = 0; y < height; y++) {
            data[y * width + x] = d[y];
        }
    }
    for (y = 0; y < height; y++) {
        for (x = 0; x < width; x++) {
            f[x] = data[y * width + x];
        }
        edt1d(f, d, v, z, width);
        for (x = 0; x < width; x++) {
            data[y * width + x] = Math.sqrt(d[x]);
        }
    }
}

// 1D squared distance transform
function edt1d(f, d, v, z, n) {
    v[0] = 0;
    z[0] = -INF;
    z[1] = +INF;

    for (var q = 1, k = 0; q < n; q++) {
        var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);
        while (s <= z[k]) {
            k--;
            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);
        }
        k++;
        v[k] = q;
        z[k] = s;
        z[k + 1] = +INF;
    }

    for (q = 0, k = 0; q < n; q++) {
        while (z[k + 1] < q) k++;
        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];
    }
}

},{}],"HKAP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeFontAtlas = makeFontAtlas;
exports.DEFAULT_FONT_SETTINGS = exports.DEFAULT_FONT_WEIGHT = exports.DEFAULT_FONT_FAMILY = exports.DEFAULT_CHAR_SET = void 0;

var _tinySdf = _interopRequireDefault(require("@mapbox/tiny-sdf"));

var _base = require("../base");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//from https://github.com/uber/deck.gl/blob/6.4-release/modules/layers/src/text-layer/font-atlas.js

/* global document */
const GL_TEXTURE_WRAP_S = 0x2802;
const GL_TEXTURE_WRAP_T = 0x2803;
const GL_CLAMP_TO_EDGE = 0x812f;
const MAX_CANVAS_WIDTH = 1024;
const BASELINE_SCALE = 0.9;
const HEIGHT_SCALE = 1.2;

function getDefaultCharacterSet() {
  const charSet = [];

  for (let i = 32; i < 128; i++) {
    charSet.push(String.fromCharCode(i));
  }

  return charSet;
}

const DEFAULT_CHAR_SET = getDefaultCharacterSet();
exports.DEFAULT_CHAR_SET = DEFAULT_CHAR_SET;
const DEFAULT_FONT_FAMILY = 'Monaco, monospace';
exports.DEFAULT_FONT_FAMILY = DEFAULT_FONT_FAMILY;
const DEFAULT_FONT_WEIGHT = 'normal';
exports.DEFAULT_FONT_WEIGHT = DEFAULT_FONT_WEIGHT;
const DEFAULT_FONT_SETTINGS = {
  fontSize: 64,
  buffer: 2,
  sdf: false,
  cutoff: 0.25,
  radius: 3
};
exports.DEFAULT_FONT_SETTINGS = DEFAULT_FONT_SETTINGS;

function populateAlphaChannel(alphaChannel, imageData) {
  // populate distance value from tinySDF to image alpha channel	
  for (let i = 0; i < alphaChannel.length; i++) {
    imageData.data[4 * i + 3] = alphaChannel[i];
  }
}

function setTextStyle(ctx, fontFamily, fontSize, fontWeight) {
  ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;
  ctx.fillStyle = '#000';
  ctx.textBaseline = 'alphabetic';
  ctx.textAlign = 'left';
}

function buildMapping({
  ctx,
  fontHeight,
  buffer,
  characterSet,
  maxCanvasWidth
}) {
  const mapping = {};
  let row = 0;
  let x = 0;
  Array.from(characterSet).forEach(char => {
    // measure texts
    // TODO - use Advanced text metrics when they are adopted:
    // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics
    const {
      width
    } = ctx.measureText(char);

    if (x + width + buffer * 2 > maxCanvasWidth) {
      x = 0;
      row++;
    }

    mapping[char] = {
      x: x + buffer,
      y: row * (fontHeight + buffer * 2) + buffer,
      width,
      height: fontHeight,
      mask: true
    };
    x += width + buffer * 2;
  });
  const canvasHeight = (row + 1) * (fontHeight + buffer * 2);
  return {
    mapping,
    canvasHeight
  };
}

function makeFontAtlas(gl, fontSettings) {
  const mergedFontSettings = Object.assign({
    fontFamily: DEFAULT_FONT_FAMILY,
    fontWeight: DEFAULT_FONT_WEIGHT,
    characterSet: DEFAULT_CHAR_SET
  }, DEFAULT_FONT_SETTINGS, fontSettings);
  const {
    fontFamily,
    fontWeight,
    characterSet,
    fontSize,
    buffer,
    sdf,
    radius,
    cutoff
  } = mergedFontSettings;
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d'); // build mapping

  setTextStyle(ctx, fontFamily, fontSize, fontWeight);
  const fontHeight = fontSize * HEIGHT_SCALE;
  const {
    canvasHeight,
    mapping
  } = buildMapping({
    ctx,
    fontHeight,
    buffer,
    characterSet,
    maxCanvasWidth: MAX_CANVAS_WIDTH
  });
  canvas.width = MAX_CANVAS_WIDTH;
  canvas.height = canvasHeight;
  setTextStyle(ctx, fontFamily, fontSize, fontWeight); // layout characters

  if (sdf) {
    const tinySDF = new _tinySdf.default(fontSize, buffer, radius, cutoff, fontFamily, fontWeight); // used to store distance values from tinySDF	

    const imageData = ctx.createImageData(tinySDF.size, tinySDF.size);

    for (const char of characterSet) {
      populateAlphaChannel(tinySDF.draw(char), imageData);
      ctx.putImageData(imageData, mapping[char].x - buffer, mapping[char].y - buffer);
    }
  } else {
    for (const char of characterSet) {
      ctx.fillText(char, mapping[char].x, mapping[char].y + fontSize * BASELINE_SCALE);
    }
  }

  return {
    scale: HEIGHT_SCALE,
    mapping,
    texture: new _base.base.luma.Texture2D(gl, {
      pixels: canvas,
      // padding is added only between the characters but not for borders
      // enforce CLAMP_TO_EDGE to avoid any artifacts.
      parameters: {
        [GL_TEXTURE_WRAP_S]: GL_CLAMP_TO_EDGE,
        [GL_TEXTURE_WRAP_T]: GL_CLAMP_TO_EDGE
      }
    })
  };
}
},{"@mapbox/tiny-sdf":"jBdf","../base":"To8D"}],"w4G4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//adapted from https://github.com/uber/deck.gl/blob/6.4-release/modules/layers/src/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js
var _default = `\
#define SHADER_NAME multi-icon-layer-fragment-shader

precision highp float;

uniform sampler2D iconsTexture;
uniform float buffer;
uniform bool sdf;

varying vec4 vColor;
varying vec2 vTextureCoords;
varying float vGamma;
varying vec4 vHighlightColor;

const float MIN_ALPHA = 0.05;

void main(void) {
  vec4 texColor = texture2D(iconsTexture, vTextureCoords);
  
  float alpha = texColor.a;

  // if enable sdf (signed distance fields)	
  if (sdf) {	
    float distance = texture2D(iconsTexture, vTextureCoords).a;	
    alpha = smoothstep(buffer - vGamma, buffer + vGamma, distance);	
  }

  // Take the global opacity and the alpha from vColor into account for the alpha component
  float a = alpha * vColor.a;

  if (picking_uActive) {

    // use picking color for entire rectangle
    gl_FragColor = vec4(picking_vRGBcolor_Aselected.rgb, 1.0);
  
  } else {

    if (a < MIN_ALPHA) {
      discard;
    } else {

      gl_FragColor = vec4(vColor.rgb, a);

      // use highlight color if this fragment belongs to the selected object.
      bool selected = bool(picking_vRGBcolor_Aselected.a);
      if (selected) {
        gl_FragColor = vec4(vHighlightColor.rgb, a);
      }
    }
  }
}
`;
exports.default = _default;
},{}],"t88C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//adapted from https://github.com/uber/deck.gl/blob/6.4-release/modules/layers/src/text-layer/multi-icon-layer/multi-icon-layer-vertex.glsl.js
var _default = `\
#define SHADER_NAME multi-icon-layer-vertex-shader

attribute vec2 positions;

attribute vec3 instancePositions;
attribute vec2 instancePositions64xyLow;
attribute float instanceSizes;
attribute float instanceAngles;
attribute vec4 instanceColors;
attribute vec3 instancePickingColors;
attribute vec4 instanceIconFrames;
attribute float instanceColorModes;
attribute vec2 instanceOffsets;

// the following three attributes are for the multi-icon layer
attribute vec2 instancePixelOffset;
attribute vec4 instanceHighlightColors;

uniform float sizeScale;
uniform vec2 iconsTextureDim;
uniform float gamma;
uniform float opacity;

varying float vColorMode;
varying vec4 vColor;
varying vec2 vTextureCoords;
varying float vGamma;
varying vec4 vHighlightColor;

vec2 rotate_by_angle(vec2 vertex, float angle) {
  float angle_radian = angle * PI / 180.0;
  float cos_angle = cos(angle_radian);
  float sin_angle = sin(angle_radian);
  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
  return rotationMatrix * vertex;
}

void main(void) {
  vec2 iconSize = instanceIconFrames.zw;
  // scale icon height to match instanceSize
  float instanceScale = iconSize.y == 0.0 ? 0.0 : instanceSizes / iconSize.y;

  // scale and rotate vertex in "pixel" value and convert back to fraction in clipspace
  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;

  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * sizeScale * instanceScale;
  pixelOffset += instancePixelOffset;
  pixelOffset.y *= -1.0;

  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, vec3(0.0));
  gl_Position += project_pixel_to_clipspace(pixelOffset);

  vTextureCoords = mix(
    instanceIconFrames.xy,
    instanceIconFrames.xy + iconSize,
    (positions.xy + 1.0) / 2.0
  ) / iconsTextureDim;

  vTextureCoords.y = 1.0 - vTextureCoords.y;

  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;
  vHighlightColor = vec4(instanceHighlightColors.rgb, instanceHighlightColors.a * opacity) / 255.;

  picking_setPickingColor(instancePickingColors);

  vGamma = gamma / (sizeScale * iconSize.y);
}
`;
exports.default = _default;
},{}],"Pvx6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultiIconLayer = void 0;

var _chromaticMultiIconLayerFragment = _interopRequireDefault(require("./chromatic-multi-icon-layer-fragment.glsl"));

var _chromaticMultiIconLayerVertex = _interopRequireDefault(require("./chromatic-multi-icon-layer-vertex.glsl"));

var _base = require("../../base");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//adapted from https://github.com/uber/deck.gl/blob/6.4-release/modules/layers/src/text-layer/multi-icon-layer/multi-icon-layer.js
// TODO expose as layer properties
const DEFAULT_GAMMA = 0.2;
const DEFAULT_BUFFER = 192.0 / 256;
const defaultProps = {
  getShiftInQueue: {
    type: 'accessor',
    value: x => x.shift || 0
  },
  getLengthOfQueue: {
    type: 'accessor',
    value: x => x.len || 1
  },
  // 1: left, 0: middle, -1: right
  getAnchorX: {
    type: 'accessor',
    value: x => x.anchorX || 0
  },
  // 1: top, 0: center, -1: bottom
  getAnchorY: {
    type: 'accessor',
    value: x => x.anchorY || 0
  },
  getPixelOffset: {
    type: 'accessor',
    value: [0, 0]
  },
  // object with the same pickingIndex will be picked when any one of them is being picked
  getPickingIndex: {
    type: 'accessor',
    value: x => x.objectIndex
  }
}; //https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants

const UNSIGNED_BYTE = 0x1401;

function _MultiIconLayer(...props) {
  class __MultiIconLayer extends _base.base.layers.IconLayer {
    constructor(...props) {
      super(...arguments);
    }

    getShaders() {
      return Object.assign({}, super.getShaders(), {
        vs: _chromaticMultiIconLayerVertex.default,
        fs: _chromaticMultiIconLayerFragment.default
      });
    }

    initializeState() {
      super.initializeState();
      const attributeManager = this.getAttributeManager();
      attributeManager.addInstanced({
        instancePixelOffset: {
          size: 2,
          transition: true,
          accessor: 'getPixelOffset'
        },
        instanceHighlightColors: {
          size: 4,
          type: UNSIGNED_BYTE,
          transition: true,
          accessor: 'getHighlightColor',
          defaultValue: [0, 255, 0, 255]
        }
      });
    }

    updateState(updateParams) {
      super.updateState(updateParams);
      const {
        changeFlags
      } = updateParams;

      if (changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)) {
        this.getAttributeManager().invalidate('instanceOffsets');
      }
    }

    draw({
      uniforms
    }) {
      const {
        sdf
      } = this.props;
      super.draw({
        uniforms: Object.assign({}, uniforms, {
          // Refer the following doc about gamma and buffer
          // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817
          buffer: DEFAULT_BUFFER,
          gamma: DEFAULT_GAMMA,
          sdf: Boolean(sdf)
        })
      });
    }

    calculateInstanceOffsets(attribute) {
      const {
        data,
        iconMapping,
        getIcon,
        getAnchorX,
        getAnchorY,
        getLengthOfQueue,
        getShiftInQueue
      } = this.props;
      const {
        value
      } = attribute;
      let i = 0;

      for (const object of data) {
        const icon = getIcon(object);
        const rect = iconMapping[icon] || {};
        const len = getLengthOfQueue(object);
        const shiftX = getShiftInQueue(object);
        value[i++] = (getAnchorX(object) - 1) * len / 2 + rect.width / 2 + shiftX || 0;
        value[i++] = rect.height / 2 * getAnchorY(object) || 0;
      }
    }

    calculateInstancePickingColors(attribute) {
      const {
        data,
        getPickingIndex
      } = this.props;
      const {
        value
      } = attribute;
      let i = 0;
      const pickingColor = [];

      for (const point of data) {
        const index = getPickingIndex(point);
        this.encodePickingColor(index, pickingColor);
        value[i++] = pickingColor[0];
        value[i++] = pickingColor[1];
        value[i++] = pickingColor[2];
      }
    }

  }

  __MultiIconLayer.layerName = 'MultiIconLayer';
  __MultiIconLayer.defaultProps = defaultProps;
  const instance = new __MultiIconLayer(...arguments);
  return instance;
} //signature to allow this function to be used with the 'new' keyword.
//need to trick the compiler by casting to 'any'.

/**
 * CubeLayer - a Deck.gl layer to render cuboids.
 * This is instantiatable by calling `new MultiIconLayer()`.
 */


const MultiIconLayer = _MultiIconLayer;
exports.MultiIconLayer = MultiIconLayer;
},{"./chromatic-multi-icon-layer-fragment.glsl":"w4G4","./chromatic-multi-icon-layer-vertex.glsl":"t88C","../../base":"To8D"}],"VizX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChromaticTextLayer = void 0;

var _base = require("../base");

var _fontAtlas = require("./font-atlas");

var _chromaticMultiIconLayer = require("./chromatic-multi-icon-layer/chromatic-multi-icon-layer");

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//adapted from https://github.com/uber/deck.gl/blob/6.4-release/modules/layers/src/text-layer/text-layer.js
const TEXT_ANCHOR = {
  start: 1,
  middle: 0,
  end: -1
};
const ALIGNMENT_BASELINE = {
  top: 1,
  center: 0,
  bottom: -1
};
const DEFAULT_COLOR = [0, 0, 0, 255];
const MISSING_CHAR_WIDTH = 32;
const FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];
const defaultProps = {
  fp64: false,
  sizeScale: 1,
  characterSet: _fontAtlas.DEFAULT_CHAR_SET,
  fontFamily: _fontAtlas.DEFAULT_FONT_FAMILY,
  fontWeight: _fontAtlas.DEFAULT_FONT_WEIGHT,
  fontSettings: {},
  getText: {
    type: 'accessor',
    value: x => x.text
  },
  getPosition: {
    type: 'accessor',
    value: x => x.position
  },
  getColor: {
    type: 'accessor',
    value: DEFAULT_COLOR
  },
  getSize: {
    type: 'accessor',
    value: 32
  },
  getAngle: {
    type: 'accessor',
    value: 0
  },
  getHighlightColor: {
    type: 'accessor',
    value: DEFAULT_COLOR
  },
  getTextAnchor: {
    type: 'accessor',
    value: 'middle'
  },
  getAlignmentBaseline: {
    type: 'accessor',
    value: 'center'
  },
  getPixelOffset: {
    type: 'accessor',
    value: [0, 0]
  }
};

function _ChromaticTextLayer(props) {
  class __ChromaticTextLayer extends _base.base.deck.CompositeLayer {
    updateState({
      props,
      oldProps,
      changeFlags
    }) {
      const fontChanged = this.fontChanged(oldProps, props);

      if (fontChanged) {
        this.updateFontAtlas();
      }

      if (changeFlags.dataChanged || fontChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText)) {
        this.transformStringToLetters();
      }
    }

    updateFontAtlas() {
      const {
        gl
      } = this.context;
      const {
        fontSettings,
        fontFamily,
        fontWeight,
        characterSet
      } = this.props;
      const mergedFontSettings = Object.assign({}, _fontAtlas.DEFAULT_FONT_SETTINGS, fontSettings, {
        fontFamily,
        fontWeight,
        characterSet
      });
      const {
        scale,
        mapping,
        texture
      } = (0, _fontAtlas.makeFontAtlas)(gl, mergedFontSettings);
      this.setState({
        scale,
        iconAtlas: texture,
        iconMapping: mapping
      });
    }

    fontChanged(oldProps, props) {
      if (oldProps.fontFamily !== props.fontFamily || oldProps.characterSet !== props.characterSet || oldProps.fontWeight !== props.fontWeight) {
        return true;
      }

      if (oldProps.fontSettings === props.fontSettings) {
        return false;
      }

      const oldFontSettings = oldProps.fontSettings || {};
      const fontSettings = props.fontSettings || {};
      return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);
    }

    getPickingInfo({
      info
    }) {
      // because `TextLayer` assign the same pickingInfoIndex for one text label,
      // here info.index refers the index of text label in props.data
      return Object.assign(info, {
        // override object with original data
        object: info.index >= 0 ? this.props.data[info.index] : null
      });
    }
    /* eslint-disable no-loop-func */


    transformStringToLetters() {
      const {
        data,
        getText
      } = this.props;
      const {
        iconMapping
      } = this.state;
      const transformedData = [];
      let objectIndex = 0;

      for (const val of data) {
        const text = getText(val);

        if (text) {
          const letters = Array.from(text);
          const offsets = [0];
          let offsetLeft = 0;
          letters.forEach((letter, i) => {
            const datum = {
              text: letter,
              index: i,
              offsets,
              len: text.length,
              // reference of original object and object index
              object: val,
              objectIndex
            };
            const frame = iconMapping[letter];

            if (frame) {
              offsetLeft += frame.width;
            } else {
              //log.warn(`Missing character: ${letter}`)();
              offsetLeft += MISSING_CHAR_WIDTH;
            }

            offsets.push(offsetLeft);
            transformedData.push(datum);
          });
        }

        objectIndex++;
      }

      this.setState({
        data: transformedData
      });
    }
    /* eslint-enable no-loop-func */


    getLetterOffset(datum) {
      return datum.offsets[datum.index];
    }

    getTextLength(datum) {
      return datum.offsets[datum.offsets.length - 1];
    }

    _getAccessor(accessor) {
      if (typeof accessor === 'function') {
        return x => accessor(x.object);
      }

      return accessor;
    }

    getAnchorXFromTextAnchor(getTextAnchor) {
      return x => {
        const textAnchor = typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;

        if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {
          throw new Error(`Invalid text anchor parameter: ${textAnchor}`);
        }

        return TEXT_ANCHOR[textAnchor];
      };
    }

    getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {
      return x => {
        const alignmentBaseline = typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(x.object) : getAlignmentBaseline;

        if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {
          throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);
        }

        return ALIGNMENT_BASELINE[alignmentBaseline];
      };
    }

    renderLayers() {
      const {
        data,
        scale,
        iconAtlas,
        iconMapping
      } = this.state;
      const {
        getPosition,
        getColor,
        getSize,
        getAngle,
        getHighlightColor,
        getTextAnchor,
        getAlignmentBaseline,
        getPixelOffset,
        fp64,
        sdf,
        sizeScale,
        transitions,
        updateTriggers
      } = this.props;
      const SubLayerClass = this.getSubLayerClass('characters', _chromaticMultiIconLayer.MultiIconLayer);
      return new SubLayerClass({
        sdf,
        iconAtlas,
        iconMapping,
        getPosition: d => getPosition(d.object),
        getColor: this._getAccessor(getColor),
        getSize: this._getAccessor(getSize),
        getAngle: this._getAccessor(getAngle),
        getHighlightColor: this._getAccessor(getHighlightColor),
        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),
        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),
        getPixelOffset: this._getAccessor(getPixelOffset),
        fp64,
        sizeScale: sizeScale * scale,
        transitions: transitions && {
          getPosition: transitions.getPosition,
          getAngle: transitions.getAngle,
          getHighlightColor: transitions.getHighlightColor,
          getColor: transitions.getColor,
          getSize: transitions.getSize,
          getPixelOffset: updateTriggers.getPixelOffset
        }
      }, this.getSubLayerProps({
        id: 'characters',
        updateTriggers: {
          getPosition: updateTriggers.getPosition,
          getAngle: updateTriggers.getAngle,
          getHighlightColor: updateTriggers.getHighlightColor,
          getColor: updateTriggers.getColor,
          getSize: updateTriggers.getSize,
          getPixelOffset: updateTriggers.getPixelOffset,
          getAnchorX: updateTriggers.getTextAnchor,
          getAnchorY: updateTriggers.getAlignmentBaseline
        }
      }), {
        data,
        getIcon: d => d.text,
        getShiftInQueue: d => this.getLetterOffset(d),
        getLengthOfQueue: d => this.getTextLength(d)
      });
    }

  }

  __ChromaticTextLayer.layerName = 'TextLayer';
  __ChromaticTextLayer.defaultProps = defaultProps;
  const instance = new __ChromaticTextLayer(props);
  return instance;
} //signature to allow this function to be used with the 'new' keyword.
//need to trick the compiler by casting to 'any'.

/**
 * TextLayer - a modification of deck.gl's TextLayer.
 * This is instantiatable by calling `new TextLayer()`.
 */


const ChromaticTextLayer = _ChromaticTextLayer;
exports.ChromaticTextLayer = ChromaticTextLayer;
},{"../base":"To8D","./font-atlas":"HKAP","./chromatic-multi-icon-layer/chromatic-multi-icon-layer":"Pvx6"}],"mHNm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var _default = `\
#define SHADER_NAME cube-layer-fragment-shader

precision highp float;

varying vec4 vColor;

void main(void) {
  gl_FragColor = vColor;

  // use highlight color if this fragment belongs to the selected object.
  gl_FragColor = picking_filterHighlightColor(gl_FragColor);

  // use picking color if rendering to picking FBO.
  gl_FragColor = picking_filterPickingColor(gl_FragColor);
}
`;
exports.default = _default;
},{}],"jQIe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createStage = createStage;
exports.minPixelSize = exports.min3dDepth = exports.defaultView = exports.lineZ = exports.groupStrokeWidth = exports.defaultPresenterConfig = exports.defaultPresenterStyle = exports.minWidth = exports.minHeight = void 0;
const minHeight = '100px';
exports.minHeight = minHeight;
const minWidth = '100px';
exports.minWidth = minWidth;
const lightSettings = {
  '2d': {},
  '3d': {
    lightsPosition: [-122.45, 37.66, 8000, -122.0, 38.0, 8000],
    ambientRatio: 0.3,
    diffuseRatio: 0.6,
    specularRatio: 0.4,
    lightsStrength: [0.3, 0.0, 0.8, 0.0],
    numberOfLights: 2
  }
};
const defaultPresenterStyle = {
  cssPrefix: 'vega-deckgl-',
  defaultCubeColor: [128, 128, 128, 255],
  highlightColor: [0, 0, 0, 255],
  lightSettings
};
exports.defaultPresenterStyle = defaultPresenterStyle;
const defaultPresenterConfig = {
  onCubeClick: (e, cube) => {},
  onCubeHover: (e, cube) => {},
  transitionDurations: {
    color: 100,
    position: 600,
    size: 600,
    view: 600
  }
};
exports.defaultPresenterConfig = defaultPresenterConfig;

function createStage(view) {
  const stage = {
    view,
    cubeData: [],
    axes: {
      x: [],
      y: []
    },
    gridLines: [],
    textData: [],
    legend: {
      rows: {}
    },
    facets: []
  };
  return stage;
}

const groupStrokeWidth = 1;
exports.groupStrokeWidth = groupStrokeWidth;
const lineZ = -1;
exports.lineZ = lineZ;
const defaultView = '2d';
exports.defaultView = defaultView;
const min3dDepth = 0.05;
exports.min3dDepth = min3dDepth;
const minPixelSize = 0.5;
exports.minPixelSize = minPixelSize;
},{}],"zIwf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaults = require("../defaults");

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var _default = `\
#define SHADER_NAME cube-layer-vertex-shader

attribute vec3 positions;
attribute vec3 normals;

attribute vec3 instancePositions;
attribute vec2 instancePositions64xyLow;
attribute vec3 instanceSizes;
attribute vec4 instanceColors;
attribute vec3 instancePickingColors;

// Custom uniforms
uniform float lightingMix;

// Result
varying vec4 vColor;

void main(void) {

  float x = instanceSizes.x > 0.0 ? max(instanceSizes.x, ${_defaults.minPixelSize.toFixed(1)}) : 0.0;
  float y = instanceSizes.y > 0.0 ? max(instanceSizes.y, ${_defaults.minPixelSize.toFixed(1)}) : 0.0;

  // if alpha == 0.0, do not render element
  float noRender = float(instanceColors.a == 0.0);
  float finalXScale = project_scale(x) * mix(1.0, 0.0, noRender);
  float finalYScale = project_scale(y) * mix(1.0, 0.0, noRender);
  float finalZScale = project_scale(instanceSizes.z) * mix(1.0, 0.0, noRender);

  // cube geometry vertics are between -1 to 1, scale and transform it to between 0, 1
  vec3 offset = vec3(
    (positions.x + 1.0) / 2.0 * finalXScale,
    (positions.y + 1.0) / 2.0 * finalYScale,
    (positions.z + 1.0) / 2.0 * finalZScale);

  // extrude positions
  vec4 position_worldspace;
  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, offset, position_worldspace);

  float lightWeight = 1.0;
  
  //allow for a small amount of error around the min3dDepth 
  if (instanceSizes.z >= ${_defaults.min3dDepth.toFixed(4)} - 0.0001) {
    lightWeight = lighting_getLightWeight(
      position_worldspace.xyz, // the w component is always 1.0
      normals
    );
  }

  vec3 lightWeightedColor = lightWeight * instanceColors.rgb;
  vec3 mixedLight = mix(instanceColors.rgb, lightWeightedColor, lightingMix);
  vec4 color = vec4(mixedLight, instanceColors.a) / 255.0;
  vColor = color;

  // Set color to be rendered to picking fbo (also used to check for selection highlight).
  picking_setPickingColor(instancePickingColors);
}
`;
exports.default = _default;
},{"../defaults":"jQIe"}],"gZmI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CubeLayer = void 0;

var _cubeLayerFragment = _interopRequireDefault(require("./cube-layer-fragment.glsl"));

var _cubeLayerVertex = _interopRequireDefault(require("./cube-layer-vertex.glsl"));

var _base = require("../base");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// Adapted from https://github.com/uber/deck.gl/blob/5.3-release/modules/layers/src/grid-cell-layer/grid-cell-layer.js
//https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants
const UNSIGNED_BYTE = 0x1401;
const DEFAULT_COLOR = [255, 0, 255, 255];
const defaultProps = {
  lightingMix: 0.5,
  fp64: false,
  getSize: x => x.size,
  getPosition: x => x.position,
  getColor: x => x.color
};

function _CubeLayer(props) {
  //dynamic superclass, since we don't know have deck.Layer in the declaration phase
  class __CubeLayer extends _base.base.deck.Layer {
    getShaders() {
      const projectModule = this.use64bitProjection() ? 'project64' : 'project32';
      return {
        vs: _cubeLayerVertex.default,
        fs: _cubeLayerFragment.default,
        modules: [projectModule, 'lighting', 'picking']
      };
    }

    initializeState() {
      const attributeManager = this.getAttributeManager();
      attributeManager.addInstanced({
        instancePositions: {
          size: 3,
          transition: true,
          accessor: 'getPosition'
        },
        instancePositions64xyLow: {
          size: 3,
          accessor: 'getPosition',
          update: this.calculateInstancePositions64xyLow
        },
        instanceSizes: {
          size: 3,
          transition: true,
          accessor: 'getSize'
        },
        instanceColors: {
          size: 4,
          type: UNSIGNED_BYTE,
          transition: true,
          accessor: 'getColor',
          defaultValue: DEFAULT_COLOR
        }
      });
    }

    updateState({
      props,
      oldProps,
      changeFlags
    }) {
      super.updateState({
        props,
        oldProps,
        changeFlags
      }); //TODO add parameter type to deck.gl-typings
      // Re-generate model if geometry changed

      if (props.fp64 !== oldProps.fp64) {
        const {
          gl
        } = this.context;

        if (this.state.model) {
          this.state.model.delete();
        }

        this.setState({
          model: this._getModel(gl)
        });
        this.getAttributeManager().invalidateAll();
      }
    }

    _getModel(gl) {
      return new _base.base.luma.Model(gl, Object.assign({}, this.getShaders(), {
        id: this.props.id,
        geometry: new _base.base.luma.CubeGeometry(),
        isInstanced: true,
        shaderCache: this.context.shaderCache
      }));
    }

    draw({
      uniforms
    }) {
      let {
        lightingMix
      } = this.props;

      if (this.props.interpolator && this.props.interpolator.layerInterpolatedProps) {
        lightingMix = this.props.interpolator.layerInterpolatedProps.lightingMix;
      }

      this.state.model.render(Object.assign({}, uniforms, {
        lightingMix
      }));
    }

    calculateInstancePositions64xyLow(attribute) {
      const isFP64 = this.use64bitPositions();
      attribute.constant = !isFP64;

      if (!isFP64) {
        attribute.value = new Float32Array(2);
        return;
      }

      const {
        data,
        getPosition
      } = this.props;
      const {
        value
      } = attribute;
      let i = 0;

      for (const point of data) {
        const position = getPosition(point);
        value[i++] = _base.base.luma.fp64.fp64LowPart(position[0]);
        value[i++] = _base.base.luma.fp64.fp64LowPart(position[1]);
      }
    }

  }

  __CubeLayer.layerName = 'CubeLayer';
  __CubeLayer.defaultProps = defaultProps;
  const instance = new __CubeLayer(props);
  return instance;
} //signature to allow this function to be used with the 'new' keyword.
//need to trick the compiler by casting to 'any'.

/**
 * CubeLayer - a Deck.gl layer to render cuboids.
 * This is instantiatable by calling `new CubeLayer()`.
 */


const CubeLayer = _CubeLayer;
exports.CubeLayer = CubeLayer;
},{"./cube-layer-fragment.glsl":"mHNm","./cube-layer-vertex.glsl":"zIwf","../base":"To8D"}],"INt0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"YHiQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"qmX2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"dJ3h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"uHbA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"VbvH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"Nnyc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"WDS3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"LEz6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"kSts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"id0f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"INt0","./quad.js":"YHiQ","./cubic.js":"qmX2","./poly.js":"dJ3h","./sin.js":"uHbA","./exp.js":"VbvH","./circle.js":"Nnyc","./bounce.js":"WDS3","./back.js":"LEz6","./elastic.js":"kSts"}],"U4xU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLayers = getLayers;
exports.getCubeLayer = getCubeLayer;
exports.getCubes = getCubes;

var _base = require("./base");

var _chromaticTextLayer = require("./chromatic-text-layer/chromatic-text-layer");

var _array = require("./array");

var _cubeLayer = require("./cube-layer/cube-layer");

var _d3Ease = require("d3-ease");

var _constants = require("./constants");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function getLayers(presenter, config, stage, lightSettings, lightingMix, interpolator, guideLines) {
  const cubeLayer = newCubeLayer(presenter, config, stage.cubeData, presenter.style.highlightColor, lightSettings, lightingMix, interpolator);
  const {
    x,
    y
  } = stage.axes;
  const lines = (0, _array.concat)(stage.gridLines, guideLines);
  const texts = [...stage.textData];
  [x, y].forEach(axes => {
    axes.forEach(axis => {
      if (axis.domain) lines.push(axis.domain);
      if (axis.ticks) lines.push.apply(lines, axis.ticks);
      if (axis.tickText) texts.push.apply(texts, axis.tickText);
      if (axis.title) texts.push(axis.title);
    });
  });

  if (stage.facets) {
    stage.facets.forEach(f => {
      if (f.lines) lines.push.apply(lines, f.lines);
    });
  }

  const lineLayer = newLineLayer(_constants.layerNames.lines, lines);
  const textLayer = newTextLayer(presenter, _constants.layerNames.text, texts, config, presenter.style.fontFamily);
  return [textLayer, cubeLayer, lineLayer];
}

function newCubeLayer(presenter, config, cubeData, highlightColor, lightSettings, lightingMix, interpolator) {
  const getPosition = getTiming(config.transitionDurations.position, _d3Ease.easeExpInOut);
  const getSize = getTiming(config.transitionDurations.size, _d3Ease.easeExpInOut);
  const getColor = getTiming(config.transitionDurations.color);
  const cubeLayerProps = {
    interpolator,
    lightingMix,
    id: _constants.layerNames.cubes,
    data: cubeData,
    coordinateSystem: _base.base.deck.COORDINATE_SYSTEM.IDENTITY,
    pickable: true,
    autoHighlight: true,
    highlightColor,
    onClick: (o, e) => {
      config.onCubeClick(e && e.srcEvent, o.object);
    },
    onHover: (o, e) => {
      if (o.index === -1) {
        presenter.deckgl.interactiveState.onCube = false;
        config.onCubeHover(e && e.srcEvent, null);
      } else {
        presenter.deckgl.interactiveState.onCube = true;
        config.onCubeHover(e && e.srcEvent, o.object);
      }
    },
    lightSettings,
    transitions: {
      getPosition,
      getColor,
      getSize
    }
  };
  return new _cubeLayer.CubeLayer(cubeLayerProps);
}

function newLineLayer(id, data) {
  return new _base.base.layers.LineLayer({
    id,
    data,
    coordinateSystem: _base.base.deck.COORDINATE_SYSTEM.IDENTITY,
    getColor: o => o.color,
    getStrokeWidth: o => o.strokeWidth
  });
}

function newTextLayer(presenter, id, data, config, fontFamily) {
  const props = {
    id,
    data,
    coordinateSystem: _base.base.deck.COORDINATE_SYSTEM.IDENTITY,
    autoHighlight: true,
    pickable: true,
    getHighlightColor: config.getTextHighlightColor || (o => o.color),
    onClick: (o, e) => {
      let pe = e && e.srcEvent;
      config.onTextClick && config.onTextClick(pe, o.object);
    },
    onHover: (o, e) => {
      if (o.index === -1) {
        presenter.deckgl.interactiveState.onText = false;
      } else {
        presenter.deckgl.interactiveState.onText = config.onTextHover ? config.onTextHover(e && e.srcEvent, o.object) : true;
      }
    },
    getColor: config.getTextColor || (o => o.color),
    getTextAnchor: o => o.textAnchor,
    getSize: o => o.size,
    getAngle: o => o.angle,
    fontSettings: {
      sdf: true,
      fontSize: 128,
      buffer: 3
    }
  };

  if (fontFamily) {
    props.fontFamily = fontFamily;
  }

  return new _chromaticTextLayer.ChromaticTextLayer(props);
}

function getTiming(duration, easing) {
  let timing;

  if (duration) {
    timing = {
      duration
    };

    if (easing) {
      timing.easing = easing;
    }
  }

  return timing;
}

function getCubeLayer(deckProps) {
  return deckProps.layers.filter(layer => layer.id === _constants.layerNames.cubes)[0];
}

function getCubes(deckProps) {
  const cubeLayer = getCubeLayer(deckProps);
  if (!cubeLayer) return;
  const cubeLayerProps = cubeLayer.props;
  return cubeLayerProps.data;
}
},{"./base":"To8D","./chromatic-text-layer/chromatic-text-layer":"VizX","./array":"Oim5","./cube-layer/cube-layer":"gZmI","d3-ease":"id0f","./constants":"Fy6F"}],"WeBf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "allTruthy", {
  enumerable: true,
  get: function () {
    return _array.allTruthy;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function () {
    return _array.concat;
  }
});
Object.defineProperty(exports, "push", {
  enumerable: true,
  get: function () {
    return _array.push;
  }
});
Object.defineProperty(exports, "addDiv", {
  enumerable: true,
  get: function () {
    return _htmlHelpers.addDiv;
  }
});
Object.defineProperty(exports, "addEl", {
  enumerable: true,
  get: function () {
    return _htmlHelpers.addEl;
  }
});
Object.defineProperty(exports, "outerSize", {
  enumerable: true,
  get: function () {
    return _htmlHelpers.outerSize;
  }
});
Object.defineProperty(exports, "clone", {
  enumerable: true,
  get: function () {
    return _clone.clone;
  }
});
Object.defineProperty(exports, "deepMerge", {
  enumerable: true,
  get: function () {
    return _clone.deepMerge;
  }
});
Object.defineProperty(exports, "colorFromString", {
  enumerable: true,
  get: function () {
    return _color.colorFromString;
  }
});
Object.defineProperty(exports, "colorIsEqual", {
  enumerable: true,
  get: function () {
    return _color.colorIsEqual;
  }
});
Object.defineProperty(exports, "colorToString", {
  enumerable: true,
  get: function () {
    return _color.colorToString;
  }
});
Object.defineProperty(exports, "desaturate", {
  enumerable: true,
  get: function () {
    return _color.desaturate;
  }
});
Object.defineProperty(exports, "createElement", {
  enumerable: true,
  get: function () {
    return _tsxCreateElement.createElement;
  }
});
Object.defineProperty(exports, "getActiveElementInfo", {
  enumerable: true,
  get: function () {
    return _tsxCreateElement.getActiveElementInfo;
  }
});
Object.defineProperty(exports, "mount", {
  enumerable: true,
  get: function () {
    return _tsxCreateElement.mount;
  }
});
Object.defineProperty(exports, "setActiveElement", {
  enumerable: true,
  get: function () {
    return _tsxCreateElement.setActiveElement;
  }
});
Object.defineProperty(exports, "getCubeLayer", {
  enumerable: true,
  get: function () {
    return _layers.getCubeLayer;
  }
});
Object.defineProperty(exports, "getCubes", {
  enumerable: true,
  get: function () {
    return _layers.getCubes;
  }
});

var _array = require("../array");

var _htmlHelpers = require("../htmlHelpers");

var _clone = require("../clone");

var _color = require("../color");

var _tsxCreateElement = require("tsx-create-element");

var _layers = require("../layers");
},{"../array":"Oim5","../htmlHelpers":"i6BN","../clone":"Jcn2","../color":"j7Ij","tsx-create-element":"YitK","../layers":"U4xU"}],"YfRA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.box = box;
exports.default = void 0;

var _base = require("../base");

var _color = require("../color");

var _defaults = require("../defaults");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const markStager = (options, stage, scene, x, y, groupType) => {
  _base.base.vega.sceneVisit(scene, function (item) {
    var x1, y1, x2, y2;
    x1 = item.x || 0;
    y1 = item.y || 0;
    x2 = item.x2 != null ? item.x2 : x1;
    y2 = item.y2 != null ? item.y2 : y1;
    const lineItem = styledLine(x1 + x, y1 + y, x2 + x, y2 + y, item.stroke, item.strokeWidth);

    if (item.mark.role === 'axis-tick') {
      options.currAxis.ticks.push(lineItem);
    } else if (item.mark.role === 'axis-domain') {
      options.currAxis.domain = lineItem;
    } else {
      stage.gridLines.push(lineItem);
    }
  });
};

function styledLine(x1, y1, x2, y2, stroke, strokeWidth) {
  const line = {
    sourcePosition: [x1, -y1, _defaults.lineZ],
    targetPosition: [x2, -y2, _defaults.lineZ],
    color: (0, _color.colorFromString)(stroke),
    strokeWidth: strokeWidth * 10 //translate width to deck.gl

  };
  return line;
}

function box(gx, gy, height, width, stroke, strokeWidth, diagonals = false) {
  const lines = [styledLine(gx, gy, gx + width, gy, stroke, strokeWidth), styledLine(gx + width, gy, gx + width, gy + height, stroke, strokeWidth), styledLine(gx + width, gy + height, gx, gy + height, stroke, strokeWidth), styledLine(gx, gy + height, gx, gy, stroke, strokeWidth)];

  if (diagonals) {
    lines.push(styledLine(gx, gy, gx + width, gy + height, stroke, strokeWidth));
    lines.push(styledLine(gx, gy + height, gx + width, gy, stroke, strokeWidth));
  }

  return lines;
}

var _default = markStager;
exports.default = _default;
},{"../base":"To8D","../color":"j7Ij","../defaults":"jQIe"}],"qyL6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PresenterElement = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

/**
 * HTML elements outputted by the presenter.
 */
var PresenterElement;
exports.PresenterElement = PresenterElement;

(function (PresenterElement) {
  PresenterElement[PresenterElement["root"] = 0] = "root";
  PresenterElement[PresenterElement["gl"] = 1] = "gl";
  PresenterElement[PresenterElement["panel"] = 2] = "panel";
  PresenterElement[PresenterElement["legend"] = 3] = "legend";
  PresenterElement[PresenterElement["vegaControls"] = 4] = "vegaControls";
})(PresenterElement || (exports.PresenterElement = PresenterElement = {}));
},{}],"qkJA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initializePanel = initializePanel;
exports.className = className;

var _tsxCreateElement = require("tsx-create-element");

var _defaults = require("./defaults");

var _enums = require("./enums");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function initializePanel(presenter) {
  const rootDiv = (0, _tsxCreateElement.createElement)("div", {
    className: className(_enums.PresenterElement.root, presenter)
  }, (0, _tsxCreateElement.createElement)("div", {
    className: className(_enums.PresenterElement.gl, presenter),
    style: {
      minHeight: _defaults.minHeight,
      minWidth: _defaults.minWidth
    }
  }), (0, _tsxCreateElement.createElement)("div", {
    className: className(_enums.PresenterElement.panel, presenter)
  }, (0, _tsxCreateElement.createElement)("div", {
    className: className(_enums.PresenterElement.vegaControls, presenter)
  }), (0, _tsxCreateElement.createElement)("div", {
    className: className(_enums.PresenterElement.legend, presenter)
  })));
  (0, _tsxCreateElement.mount)(rootDiv, presenter.el);
}

function className(type, presenter) {
  return `${presenter.style.cssPrefix}${_enums.PresenterElement[type]}`;
}
},{"tsx-create-element":"YitK","./defaults":"jQIe","./enums":"qyL6"}],"gyzW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createOrbitControllerClass = createOrbitControllerClass;

var _base = require("../base");

function createOrbitControllerClass(factoryOptions) {
  function wrapper(props) {
    class OrbitControllerInternal extends _base.base.deck._OrbitController {
      constructor(props) {
        super(props);
        this.invertPan = true;
      }

      _onDoubleTap(event) {
        if (factoryOptions && factoryOptions.doubleClickHandler) {
          factoryOptions.doubleClickHandler(event, this);
        } else {
          super._onDoubleTap(event);
        }
      }

      _onPanRotate(event) {
        if (!this.dragRotate) {
          return false;
        }

        return this._onPanRotateStandard(event);
      }

    }

    const instance = new OrbitControllerInternal(props);
    return instance;
  }

  return wrapper;
}
},{"../base":"To8D"}],"NGGy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDeckGLClassesForPresenter = createDeckGLClassesForPresenter;

var _base = require("../base");

var _orbitController = require("./orbitController");

//adapted from https://github.com/uber/deck.gl/blob/5.3-release/modules/lite/src/deckgl.js
const CANVAS_STYLE = {
  position: 'absolute',
  left: 0,
  top: 0,
  width: '100%',
  height: '100%'
}; // Create canvas elements for map and deck

function createCanvas(props) {
  let {
    container = document.body
  } = props;

  if (typeof container === 'string') {
    container = document.getElementById(container);
  }

  if (!container) {
    throw Error('Deck: container not found');
  } // Add DOM elements


  const containerStyle = window.getComputedStyle(container);

  if (containerStyle.position === 'static') {
    container.style.position = 'relative';
  }

  const deckCanvas = document.createElement('canvas');
  container.appendChild(deckCanvas);
  Object.assign(deckCanvas.style, CANVAS_STYLE);
  return {
    container,
    deckCanvas
  };
}
/**
 * Creates Deck.gl classes for rendering WebGL.
 * DEck.gl is instantiatable by calling `new createDeckGLClassesForPresenter(controlleroptions)(deckProps)`.
 */


function createDeckGLClassesForPresenter(factoryOptions) {
  const OrbitControllerClass = (0, _orbitController.createOrbitControllerClass)(factoryOptions); //dynamic superclass lets us create a subclass at execution phase instead of declaration phase.
  //This allows us to retrieve Deck from either UMD or ES6 consumers of this class.

  function wrapper(props) {
    /**
     * @params container (Element) - DOM element to add deck.gl canvas to
     * @params controller (Object) - Controller class. Leave empty for auto detection
     */
    class DeckGLInternal extends _base.base.deck.Deck {
      constructor(props = {}) {
        if (typeof document === 'undefined') {
          // Not browser
          throw Error('Deck can only be used in the browser');
        }

        const {
          deckCanvas
        } = createCanvas(props);
        const viewState = props.initialViewState || props.viewState || {};
        super(Object.assign({}, props, {
          width: '100%',
          height: '100%',
          canvas: deckCanvas,
          controller: OrbitControllerClass,
          initialViewState: viewState
        })); // Callback for the controller

        this._updateViewState = params => {
          if (this.onViewStateChange) {
            this.onViewStateChange(params);
          }
        };
      }

      setProps(props) {
        // this._updateViewState must be bound to `this`
        // but we don't have access to the current instance before calling super().
        if ('onViewStateChange' in props && this._updateViewState) {
          // This is called at least once at _onRendererInitialized
          this.onViewStateChange = props.onViewStateChange;
          props.onViewStateChange = this._updateViewState;
        }

        super.setProps(props);
      }

    }

    const instance = new DeckGLInternal(props);
    return instance;
  }

  return {
    OrbitControllerClass,
    DeckGL_Class: wrapper
  };
}
},{"../base":"To8D","./orbitController":"gyzW"}],"zxV0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LegendView = void 0;

var _tsxCreateElement = require("tsx-create-element");

var _controls = require("./controls");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const LegendView = props => {
  const rows = [];

  const addRow = (row, i) => {
    const fn = symbolMap[row.symbol.shape];
    let jsx;

    if (fn) {
      jsx = fn(row.symbol);
    } else {
      jsx = (0, _tsxCreateElement.createElement)("span", null, "x"); //console.log(`need to render ${row.symbol.shape} symbol shape`);
    }

    rows.push({
      cells: [{
        className: 'symbol',
        content: jsx
      }, {
        className: 'label',
        content: row.label,
        title: row.label
      }]
    });
  };

  var sorted = Object.keys(props.legend.rows).sort((a, b) => +a - +b);
  sorted.forEach(i => addRow(props.legend.rows[i], +i));

  if (sorted.length) {
    return (0, _tsxCreateElement.createElement)(_controls.Table, {
      rows: rows,
      rowClassName: "legend-row",
      onRowClick: (e, i) => props.onClick(e, props.legend, i)
    }, props.legend.title !== void 0 && (0, _tsxCreateElement.createElement)("tr", {
      onClick: e => props.onClick(e, props.legend, null)
    }, (0, _tsxCreateElement.createElement)("th", {
      colSpan: 2
    }, props.legend.title)));
  }
};

exports.LegendView = LegendView;
const symbolMap = {
  square: function (symbol) {
    return (0, _tsxCreateElement.createElement)("div", {
      style: {
        height: `${symbol.bounds.y2 - symbol.bounds.y1}px`,
        width: `${symbol.bounds.x2 - symbol.bounds.x1}px`,
        backgroundColor: symbol.fill,
        borderColor: symbol.fill
      }
    });
  }
};
},{"tsx-create-element":"YitK","./controls":"KmGS"}],"BfWC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinearInterpolator = void 0;

var _base = require("../base");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function wrapper(props) {
  class LinearInterpolatorInternal extends _base.base.deck.LinearInterpolator {
    constructor(transitionProps) {
      super(transitionProps);
    }

    interpolateProps(viewStateStartProps, viewStateEndProps, t) {
      if (this.layerStartProps && this.layerEndProps) {
        this.layerInterpolatedProps = super.interpolateProps(this.layerStartProps, this.layerEndProps, t);
      }

      return super.interpolateProps(viewStateStartProps, viewStateEndProps, t);
    }

  }

  const instance = new LinearInterpolatorInternal(props);
  return instance;
}

const LinearInterpolator = wrapper;
exports.LinearInterpolator = LinearInterpolator;
},{"../base":"To8D"}],"sE6a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.patchCubeArray = patchCubeArray;

function patchCubeArray(allocatedSize, empty, cubes) {
  const patched = new Array(allocatedSize);
  patched.fill(empty);
  cubes.forEach(cube => patched[cube.ordinal] = cube);
  return patched;
}
},{}],"KS5e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _base = require("../base");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const legendMap = {
  'legend-title': function (legend, textItem) {
    legend.title = textItem.text;
  },
  'legend-symbol': function (legend, symbol) {
    const {
      bounds,
      fill,
      shape
    } = symbol; //this object is safe for serialization

    const legendRowSymbol = {
      bounds,
      fill,
      shape
    };
    const i = symbol.datum.index;
    legend.rows[i] = legend.rows[i] || {};
    legend.rows[i].symbol = legendRowSymbol;
  },
  'legend-label': function (legend, label) {
    const i = label.datum.index;
    legend.rows[i] = legend.rows[i] || {};
    const row = legend.rows[i];
    row.label = label.text;
    row.value = label.datum.value;
  }
};

const markStager = (options, stage, scene, x, y, groupType) => {
  _base.base.vega.sceneVisit(scene, function (item) {
    const fn = legendMap[item.mark.role];

    if (fn) {
      fn(stage.legend, item);
    } else {//console.log(`need to render legend ${item.mark.role}`);
    }
  });
};

var _default = markStager;
exports.default = _default;
},{"../base":"To8D"}],"Bi9w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _base = require("../base");

var _color = require("../color");

var _defaults = require("../defaults");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const markStager = (options, stage, scene, x, y, groupType) => {
  _base.base.vega.sceneVisit(scene, function (item) {
    //for orthographic (2d) - always use 0 or else Deck will not show them
    const z = stage.view === '2d' ? 0 : item.z || 0;
    const depth = (stage.view === '2d' ? 0 : item.depth || 0) + _defaults.min3dDepth; //change direction of y from SVG to GL

    const ty = -1;
    let ordinal = options.assignCubeOrdinal(item.datum);

    if (ordinal > options.maxOrdinal) {
      options.maxOrdinal = ordinal;
    }

    if (ordinal === undefined) {//TODO add to polygons
      //console.log('not a cube');
    } else {
      const cube = {
        ordinal,
        size: [item.width, item.height, depth],
        position: [x + (item.x || 0), ty * (y + (item.y || 0)) - item.height, z],
        color: (0, _color.colorFromString)(item.fill) || options.defaultCubeColor || [128, 128, 128, 128]
      };
      cube.color[3] = item.opacity === undefined ? 255 : 255 * item.opacity;
      stage.cubeData.push(cube);
    }
  });
};

var _default = markStager;
exports.default = _default;
},{"../base":"To8D","../color":"j7Ij","../defaults":"jQIe"}],"ZnIC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _base = require("../base");

var _color = require("../color");

const markStager = (options, stage, scene, x, y, groupType) => {
  //scale Deck.Gl text to Vega size
  const fontScale = 6; //change direction of y from SVG to GL

  const ty = -1;

  _base.base.vega.sceneVisit(scene, function (item) {
    if (!item.text) return;
    const size = item.fontSize * fontScale;
    const alignmentBaseline = convertBaseline(item.baseline);
    const yOffset = alignmentBaseline === 'top' ? item.fontSize / 2 : 0; //fixup to get tick text correct

    const textItem = {
      color: (0, _color.colorFromString)(item.fill),
      text: _base.base.vega.truncate(item.text, item.limit, 'right', item.ellipsis || '...'),
      position: [x + (item.x || 0), ty * (y + (item.y || 0) + yOffset), 0],
      size,
      angle: convertAngle(item.angle),
      textAnchor: convertAlignment(item.align),
      alignmentBaseline,
      metaData: item.metaData
    };

    if (item.mark.role === 'axis-label') {
      const tickText = textItem;
      tickText.value = item.datum.value;
      options.currAxis.tickText.push(tickText);
    } else if (item.mark.role === 'axis-title') {
      options.currAxis.title = textItem;
    } else {
      stage.textData.push(textItem);
    }
  });
};

function convertAngle(vegaTextAngle) {
  if (vegaTextAngle && !isNaN(vegaTextAngle)) {
    return 360 - vegaTextAngle;
  }

  return 0;
}

function convertAlignment(textAlign) {
  switch (textAlign) {
    case 'center':
      return 'middle';

    case 'left':
      return 'start';

    case 'right':
      return 'end';
  }

  return 'start';
}

function convertBaseline(baseline) {
  switch (baseline) {
    case 'middle':
      return 'center';
  }

  return baseline || 'bottom';
}

var _default = markStager;
exports.default = _default;
},{"../base":"To8D","../color":"j7Ij"}],"ESmf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GroupType = void 0;
var GroupType;
exports.GroupType = GroupType;

(function (GroupType) {
  GroupType[GroupType["none"] = 0] = "none";
  GroupType[GroupType["legend"] = 1] = "legend";
  GroupType[GroupType["xAxis"] = 2] = "xAxis";
  GroupType[GroupType["yAxis"] = 3] = "yAxis";
})(GroupType || (exports.GroupType = GroupType = {}));
},{}],"yA2f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sceneToStage = sceneToStage;

var _legend = _interopRequireDefault(require("./marks/legend"));

var _rect = _interopRequireDefault(require("./marks/rect"));

var _rule = _interopRequireWildcard(require("./marks/rule"));

var _text = _interopRequireDefault(require("./marks/text"));

var _base = require("./base");

var _color = require("./color");

var _defaults = require("./defaults");

var _interfaces = require("./marks/interfaces");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function convertGroupRole(group) {
  if (group.mark.role === 'legend') return _interfaces.GroupType.legend;

  if (group.mark.role === 'axis') {
    var vegaAxisDatum = group.datum;

    if (vegaAxisDatum) {
      switch (vegaAxisDatum.orient) {
        case 'bottom':
        case 'top':
          return _interfaces.GroupType.xAxis;

        case 'left':
        case 'right':
          return _interfaces.GroupType.yAxis;
      }
    }
  }
}

const group = (options, stage, scene, x, y, groupType) => {
  _base.base.vega.sceneVisit(scene, function (g) {
    const gx = g.x || 0,
          gy = g.y || 0;

    if (g.context && g.context.background && !stage.backgroundColor) {
      stage.backgroundColor = (0, _color.colorFromString)(g.context.background);
    }

    if (g.stroke) {
      const facetRect = {
        datum: g.datum,
        lines: (0, _rule.box)(gx + x, gy + y, g.height, g.width, g.stroke, _defaults.groupStrokeWidth)
      };
      stage.facets.push(facetRect);
    }

    groupType = convertGroupRole(g) || groupType;
    setCurrentAxis(options, stage, groupType); // draw group contents

    _base.base.vega.sceneVisit(g, function (item) {
      mainStager(options, stage, item, gx + x, gy + y, groupType);
    });
  });
};

function setCurrentAxis(options, stage, groupType) {
  let axes;

  switch (groupType) {
    case _interfaces.GroupType.xAxis:
      axes = stage.axes.x;
      break;

    case _interfaces.GroupType.yAxis:
      axes = stage.axes.y;
      break;

    default:
      return;
  }

  options.currAxis = {
    domain: null,
    tickText: [],
    ticks: []
  };
  axes.push(options.currAxis);
}

const markStagers = {
  group,
  legend: _legend.default,
  rect: _rect.default,
  rule: _rule.default,
  text: _text.default
};

var mainStager = (options, stage, scene, x, y, groupType) => {
  if (scene.marktype !== 'group' && groupType === _interfaces.GroupType.legend) {
    (0, _legend.default)(options, stage, scene, x, y, groupType);
  } else {
    var markStager = markStagers[scene.marktype];

    if (markStager) {
      markStager(options, stage, scene, x, y, groupType);
    } else {//console.log(`need to render ${scene.marktype}`);
    }
  }
};

function sceneToStage(options, stage, scene) {
  mainStager(options, stage, scene, 0, 0, null);
  sortAxis(stage.axes.x, 0);
  sortAxis(stage.axes.y, 1);
}

function sortAxis(axes, dim) {
  axes.forEach(axis => {
    if (axis.domain) orderDomain(axis.domain, dim);
    axis.ticks.sort((a, b) => a.sourcePosition[dim] - b.sourcePosition[dim]);
    axis.tickText.sort((a, b) => a.position[dim] - b.position[dim]);
  });
}

function orderDomain(domain, dim) {
  if (domain.sourcePosition[dim] > domain.targetPosition[dim]) {
    const temp = domain.targetPosition;
    domain.targetPosition = domain.sourcePosition;
    domain.sourcePosition = temp;
  }
}
},{"./marks/legend":"KS5e","./marks/rect":"Bi9w","./marks/rule":"YfRA","./marks/text":"ZnIC","./base":"To8D","./color":"j7Ij","./defaults":"jQIe","./marks/interfaces":"ESmf"}],"sOaQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.targetViewState = targetViewState;
exports.viewStateProps = void 0;
const viewStateProps = ['distance', 'fov', 'lookAt', 'rotationOrbit', 'rotationX', 'zoom'];
exports.viewStateProps = viewStateProps;

function targetViewState(height, width, view) {
  const distance = 10;
  const fov = 60;
  const lookAt = [width / 2, -height / 2, 0]; //add a 4th dimension to make transitions work

  lookAt.push(1);

  if (view === '2d') {
    return {
      distance,
      fov,
      lookAt,
      rotationOrbit: 0,
      rotationX: 0,
      zoom: 10 / height
    };
  } else {
    return {
      distance,
      fov,
      lookAt,
      rotationOrbit: -25,
      rotationX: 60,
      zoom: 9 / height
    };
  }
}
},{}],"VMtV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Presenter = void 0;

var _base = require("./base");

var _rule = require("./marks/rule");

var _panel = require("./panel");

var _color = require("./color");

var _deckgl = require("./deck.gl-classes/deckgl");

var _defaults = require("./defaults");

var _clone = require("./clone");

var _d3Ease = require("d3-ease");

var _tsxCreateElement = require("tsx-create-element");

var _layers = require("./layers");

var _legend = require("./legend");

var _linearInterpolator = require("./deck.gl-classes/linearInterpolator");

var _patchedCubeArray = require("./patchedCubeArray");

var _enums = require("./enums");

var _stagers = require("./stagers");

var _viewState = require("./viewState");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

/**
 * Class which presents a Stage of chart data using Deck.gl to render.
 */
class Presenter {
  /**
   * Instantiate a new Presenter.
   * @param el Parent HTMLElement to present within.
   * @param style Optional PresenterStyle styling options.
   */
  constructor(el, style) {
    this.el = el;
    this.style = (0, _clone.deepMerge)(_defaults.defaultPresenterStyle, style);
    (0, _panel.initializePanel)(this);
    this._last = {
      view: null,
      height: null,
      width: null,
      cubeCount: null,
      stage: null
    };
  }
  /**
   * Get the previously rendered Stage object.
   */


  get stage() {
    return this._last.stage;
  }
  /**
   * Get the current View camera type.
   */


  get view() {
    return this._last.view;
  }
  /**
   * Cancels any pending animation, calling animationCanceled() on original queue.
   */


  animationCancel() {
    if (this.animationTimer) {
      clearTimeout(this.animationTimer);
      this.animationTimer = null;

      if (this.logger) {
        this.logger(`canceling animation ${this.queuedAnimationOptions && this.queuedAnimationOptions.handlerLabel || 'handler'}`);
      }

      if (this.queuedAnimationOptions && this.queuedAnimationOptions.animationCanceled) {
        this.queuedAnimationOptions.animationCanceled.call(null);
      }
    }
  }
  /**
   * Stops the current animation and queues a new animation.
   * @param handler Function to invoke when timeout is complete.
   * @param timeout Length of time to wait before invoking the handler.
   * @param options Optional QueuedAnimationOptions object.
   */


  animationQueue(handler, timeout, options) {
    if (this.logger) {
      this.logger(`queueing animation ${options && options.waitingLabel || 'waiting'}...`);
    }

    this.animationCancel();
    this.animationTimer = setTimeout(() => {
      if (this.logger) {
        this.logger(`queueing animation ${options && options.handlerLabel || 'handler'}...`);
      }

      handler();
    }, timeout);
  }
  /**
   * Retrieve a sub-element of the rendered output.
   * @param type PresenterElement type of the HTMLElement to retrieve.
   */


  getElement(type) {
    const elements = this.el.getElementsByClassName((0, _panel.className)(type, this));

    if (elements && elements.length) {
      return elements[0];
    }
  }
  /**
   * Present the Vega Scene, or Stage object using Deck.gl.
   * @param sceneOrStage Vega Scene object, or Stage object containing chart layout info.
   * @param height Height of the rendering area.
   * @param width Width of the rendering area.
   * @param config Optional presentation configuration object.
   */


  present(sceneOrStage, height, width, config) {
    this.animationCancel();
    let scene = sceneOrStage;
    let stage;
    let options = {
      maxOrdinal: 0,
      currAxis: null,
      defaultCubeColor: this.style.defaultCubeColor,
      assignCubeOrdinal: config && config.onSceneRectAssignCubeOrdinal || (() => options.maxOrdinal++)
    }; //determine if this is a vega scene

    if (scene.marktype) {
      stage = (0, _defaults.createStage)(scene.view);
      (0, _stagers.sceneToStage)(options, stage, scene);
    } else {
      stage = sceneOrStage;
    }

    if (!this.deckgl) {
      const classes = (0, _deckgl.createDeckGLClassesForPresenter)({
        doubleClickHandler: () => {
          this.homeCamera();
        }
      });
      this.OrbitControllerClass = classes.OrbitControllerClass;
      const deckProps = {
        onLayerClick: config && config.onLayerClick,
        views: [new _base.base.deck.OrbitView({
          controller: this.OrbitControllerClass
        })],
        container: this.getElement(_enums.PresenterElement.gl),
        getCursor: interactiveState => {
          if (interactiveState.onText || interactiveState.onAxisSelection) {
            return 'pointer';
          } else if (interactiveState.onCube) {
            return 'default';
          } else {
            return 'grab';
          }
        }
      };

      if (stage.backgroundColor) {
        deckProps.style = {
          'background-color': (0, _color.colorToString)(stage.backgroundColor)
        };
      }

      this.deckgl = new classes.DeckGL_Class(deckProps);
    }

    let cubeCount = Math.max(this._last.cubeCount, stage.cubeData.length);

    if (options.maxOrdinal) {
      cubeCount = Math.max(cubeCount, options.maxOrdinal);
      const empty = {
        isEmpty: true,
        color: [0, 0, 0, 0] // possibly a bug in Deck.gl? set color to invisible.

      };
      stage.cubeData = (0, _patchedCubeArray.patchCubeArray)(cubeCount, empty, stage.cubeData);
    }

    this.setDeckProps(stage, height, width, cubeCount, config);
    const a = (0, _tsxCreateElement.getActiveElementInfo)();
    (0, _tsxCreateElement.mount)((0, _legend.LegendView)({
      legend: stage.legend,
      onClick: config && config.onLegendClick
    }), this.getElement(_enums.PresenterElement.legend));
    (0, _tsxCreateElement.setActiveElement)(a);

    if (config && config.onPresent) {
      config.onPresent();
    }
  }
  /**
   * Present the same recently rendered Stage with only slight modifications such as a color change,
   * using the previous Stage values as a basis.
   * @param stage Partially populated Stage object containing changes.
   * @param modifyConfig Optional presentation configuration object.
   */


  rePresent(stage, modifyConfig) {
    const newStage = Object.assign(Object.assign({}, this._last.stage), stage);
    this.setDeckProps(newStage, this._last.height, this._last.width, this._last.cubeCount, modifyConfig);
  }

  isNewBounds(view, height, width, cubeCount) {
    const lastBounds = this.lastBounds();

    for (let prop in lastBounds) {
      if (lastBounds[prop] === null) return true;
    }

    const newBounds = {
      cubeCount,
      height,
      view,
      width
    };

    for (let prop in lastBounds) {
      if (lastBounds[prop] !== newBounds[prop]) return true;
    }
  }

  lastBounds() {
    const {
      cubeCount,
      height,
      view,
      width
    } = this._last;
    return {
      cubeCount,
      height,
      view,
      width
    };
  }

  setDeckProps(stage, height, width, cubeCount, modifyConfig) {
    const config = (0, _clone.deepMerge)(_defaults.defaultPresenterConfig, modifyConfig);
    const newBounds = this.isNewBounds(stage.view, height, width, cubeCount);
    let lightSettings = this.style.lightSettings[stage.view];
    let lightingMix = stage.view === '3d' ? 1.0 : 0.0;
    let linearInterpolator; //choose the current OrbitView viewstate if possible

    let viewState = this.deckgl.viewState && Object.keys(this.deckgl.viewState).length && this.deckgl.viewState.OrbitView || //otherwise use the initial viewstate if any
    this.deckgl.props.viewState;

    if (!viewState || newBounds || config.shouldViewstateTransition && config.shouldViewstateTransition()) {
      let newViewStateTarget = true;

      if (config && config.onTargetViewState) {
        const result = config.onTargetViewState(height, width);
        height = result.height;
        width = result.width;

        if (result.newViewStateTarget !== undefined) {
          newViewStateTarget = result.newViewStateTarget;
        }
      }

      if (!viewState || newViewStateTarget) {
        viewState = (0, _viewState.targetViewState)(height, width, stage.view);
      }

      const oldCubeLayer = (0, _layers.getCubeLayer)(this.deckgl.props);

      if (oldCubeLayer) {
        linearInterpolator = new _linearInterpolator.LinearInterpolator(_viewState.viewStateProps);
        linearInterpolator.layerStartProps = {
          lightingMix: oldCubeLayer.props.lightingMix
        };
        linearInterpolator.layerEndProps = {
          lightingMix
        };
        viewState.transitionDuration = config.transitionDurations.view;
        viewState.transitionEasing = _d3Ease.easeExpInOut;
        viewState.transitionInterpolator = linearInterpolator;
      }

      if (stage.view === '2d') {
        lightSettings = this.style.lightSettings['3d'];
      }
    }

    const guideLines = this._showGuides && (0, _rule.box)(0, 0, height, width, '#0f0', 1, true);
    config.preLayer && config.preLayer(stage);
    const layers = (0, _layers.getLayers)(this, config, stage, lightSettings, lightingMix, linearInterpolator, guideLines);
    const deckProps = {
      views: [new _base.base.deck.OrbitView({
        controller: this.OrbitControllerClass
      })],
      viewState,
      layers
    };

    if (config && config.preStage) {
      config.preStage(stage, deckProps);
    }

    this.deckgl.setProps(deckProps);
    delete stage.cubeData;
    this._last = {
      cubeCount,
      height,
      width,
      stage: stage,
      view: stage.view
    };
  }
  /**
   * Home the camera to the last initial position.
   */


  homeCamera() {
    const viewState = (0, _viewState.targetViewState)(this._last.height, this._last.width, this._last.view);
    viewState.transitionDuration = _defaults.defaultPresenterConfig.transitionDurations.view;
    viewState.transitionEasing = _d3Ease.easeExpInOut;
    viewState.transitionInterpolator = new _linearInterpolator.LinearInterpolator(_viewState.viewStateProps);
    const deckProps = {
      views: this.deckgl.props.views,
      viewState,
      layers: this.deckgl.props.layers
    };
    this.deckgl.setProps(deckProps);
  }
  /**
   * Get cube data array from the cubes layer.
   */


  getCubeData() {
    return (0, _layers.getCubes)(this.deckgl.props);
  }
  /**
   * Show guidelines of rendering height/width and center of OrbitView.
   */


  showGuides() {
    this._showGuides = true;
    this.getElement(_enums.PresenterElement.gl).classList.add('show-center');
    this.rePresent(Object.assign(Object.assign({}, this._last.stage), {
      cubeData: this.getCubeData()
    }));
  }

  finalize() {
    this.animationCancel();
    if (this.deckgl) this.deckgl.finalize();
    if (this.el) this.el.innerHTML = '';
    this._last = null;
    this.deckgl = null;
    this.el = null;
    this.logger = null;
    this.queuedAnimationOptions = null;
  }

}

exports.Presenter = Presenter;
},{"./base":"To8D","./marks/rule":"YfRA","./panel":"qkJA","./color":"j7Ij","./deck.gl-classes/deckgl":"NGGy","./defaults":"jQIe","./clone":"Jcn2","d3-ease":"id0f","tsx-create-element":"YitK","./layers":"U4xU","./legend":"zxV0","./deck.gl-classes/linearInterpolator":"BfWC","./patchedCubeArray":"sE6a","./enums":"qyL6","./stagers":"yA2f","./viewState":"sOaQ"}],"wGit":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RendererGl = void 0;

var _base = require("../base");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
//pass in the SuperClass, which should be a vega.View
function _RendererGl(loader) {
  //dynamic superclass, since we don't know have vega.View in the declaration phase
  class RendererGlInternal extends _base.base.vega.Renderer {
    initialize(el, width, height, origin) {
      this.height = height;
      this.width = width; // this method will invoke resize to size the canvas appropriately

      return super.initialize(el, width, height, origin);
    }

    resize(width, height, origin) {
      super.resize(width, height, origin);
      this.origin = origin;
      this.height = height;
      this.width = width; //rteturn this for vega

      return this;
    }

    _render(scene, items) {
      const scene3d = scene;
      scene3d.view = this.getView();
      this.presenter.present(scene3d, this.height, this.width, this.presenterConfig); //return this for vega

      return this;
    }

  }

  const instance = new RendererGlInternal(loader);
  return instance;
} //signature to allow this function to be used with the 'new' keyword.
//need to trick the compiler by casting to 'any'.

/**
 * Subclass of Vega.Renderer, with added properties for accessing a Presenter.
 * This is instantiated by ViewGl.
 */


const RendererGl = _RendererGl;
exports.RendererGl = RendererGl;
},{"../base":"To8D"}],"FyHd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewGl = void 0;

var _base = require("../base");

var _defaults = require("../defaults");

var _presenter = require("../presenter");

var _enums = require("../enums");

var _rendererGl = require("./rendererGl");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
let registered = false; //dynamic superclass lets us create a subclass at execution phase instead of declaration phase.
//This allows us to retrieve vega.View from either UMD or ES6 consumers of this class.
//pass in the SuperClass, which should be a vega.View

function _ViewGl(runtime, config) {
  //dynamic superclass, since we don't know have vega.View in the declaration phase
  class ViewGlInternal extends _base.base.vega.View {
    constructor(runtime, config = {}) {
      super(runtime, config);
      this.config = config;
      this.presenter = config.presenter;
      config.presenterConfig = config.presenterConfig || {};

      config.presenterConfig.redraw = () => {
        this._redraw = true; //use Vega View private member _redraw

        this.run();
      };
    }

    renderer(renderer) {
      if (renderer === 'deck.gl' && !registered) {
        _base.base.vega.renderModule('deck.gl', {
          handler: _base.base.vega.CanvasHandler,
          renderer: _rendererGl.RendererGl
        });

        registered = true;
      }

      return super.renderer(renderer);
    }

    initialize(el) {
      if (!this.presenter) {
        this.presenter = new _presenter.Presenter(el);
      }

      super.initialize(this.presenter.getElement(_enums.PresenterElement.vegaControls));
      const renderer = this._renderer;
      renderer.presenterConfig = this.config.presenterConfig;
      renderer.presenter = this.presenter;

      renderer.getView = this.config && this.config.getView || (() => this.presenter.view || _defaults.defaultView);

      return this;
    }

    error(e) {
      if (this.presenter.logger) {
        this.presenter.logger(e);
      }
    }

  }

  const instance = new ViewGlInternal(runtime, config);
  return instance;
} //signature to allow this function to be used with the 'new' keyword.
//need to trick the compiler by casting to 'any'.

/**
 * Subclass of Vega.View, with added properties for accessing a Presenter.
 * This is instantiatable by calling `new ViewGl()`. See https://vega.github.io/vega/docs/api/view/
 */


const ViewGl = _ViewGl;
exports.ViewGl = ViewGl;
},{"../base":"To8D","../defaults":"jQIe","../presenter":"VMtV","../enums":"qyL6","./rendererGl":"wGit"}],"eFEk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  constants: true,
  controls: true,
  types: true,
  util: true,
  defaults: true,
  base: true,
  use: true,
  Presenter: true,
  ViewGl: true
};
Object.defineProperty(exports, "base", {
  enumerable: true,
  get: function () {
    return _base.base;
  }
});
Object.defineProperty(exports, "use", {
  enumerable: true,
  get: function () {
    return _base.use;
  }
});
Object.defineProperty(exports, "Presenter", {
  enumerable: true,
  get: function () {
    return _presenter.Presenter;
  }
});
Object.defineProperty(exports, "ViewGl", {
  enumerable: true,
  get: function () {
    return _viewGl.ViewGl;
  }
});
exports.defaults = exports.util = exports.types = exports.controls = exports.constants = void 0;

var constants = _interopRequireWildcard(require("./constants"));

exports.constants = constants;

var controls = _interopRequireWildcard(require("./exports/controls"));

exports.controls = controls;

var types = _interopRequireWildcard(require("./exports/types"));

exports.types = types;

var util = _interopRequireWildcard(require("./exports/util"));

exports.util = util;

var defaults = _interopRequireWildcard(require("./defaults"));

exports.defaults = defaults;

var _base = require("./base");

var _presenter = require("./presenter");

var _viewGl = require("./vega-classes/viewGl");

var _enums = require("./enums");

Object.keys(_enums).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _enums[key];
    }
  });
});

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./constants":"Fy6F","./exports/controls":"kUTU","./exports/types":"dNRs","./exports/util":"WeBf","./defaults":"jQIe","./base":"To8D","./presenter":"VMtV","./vega-classes/viewGl":"FyHd","./enums":"qyL6"}],"G0Md":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPresenterStyle = getPresenterStyle;
exports.dualColorSchemeColors = exports.cssPrefix = exports.defaultViewerOptions = void 0;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const {
  defaultPresenterConfig,
  defaultPresenterStyle
} = VegaDeckGl.defaults;
const {
  desaturate
} = VegaDeckGl.util;
const defaultViewerOptions = {
  colors: {
    activeCube: 'purple',
    defaultCube: VegaDeckGl.util.colorToString(defaultPresenterStyle.defaultCubeColor),
    hoveredCube: VegaDeckGl.util.colorToString(defaultPresenterStyle.highlightColor),
    selectedCube: 'yellow',
    axisSelectHighlight: VegaDeckGl.util.colorToString([128, 128, 128, 128]),
    axisLine: '#000',
    axisText: '#000',
    unselectedColorMethod: color => {
      const c = desaturate(color, 0.05);
      c[3] = 171;
      return c;
    }
  },
  language: {
    headers: {
      chart: 'Chart',
      details: 'Details',
      legend: 'Legend',
      selection: 'Select & Filter'
    },
    bing: 'bing',
    newColorMap: 'remap color to filtered items',
    oldColorMap: 'keep same colors',
    deselect: 'deselect',
    exclude: 'exclude',
    isolate: 'isolate',
    legendOther: 'other',
    nextDetail: '>',
    previousDetail: '<',
    reset: 'reset',
    colorBinCount: 'Color bin count',
    colorReverse: 'Color reverse',
    count: 'Count',
    percent: 'Percent',
    sum: 'Sum',
    scatterPointSize: 'Point size',
    FacetMaxBins: 'Facet max bins',
    FacetVMaxBins: 'Cross facet max bins',
    XMaxBins: 'X axis max bins',
    YMaxBins: 'Y axis max bins',
    XGridSize: 'X grid size',
    YGridSize: 'Y grid size',
    InnerPaddingSize: 'Inner padding size',
    OuterPaddingSize: 'Outer padding size',
    treeMapMethod: 'Treemap layout',
    facetColumns: 'Facet columns',
    facetRows: 'Facet rows',
    markOpacitySignal: 'Mark opacity',
    textScaleSignal: 'Text scale',
    xAxisTextAngleSignal: 'X axis text angle',
    yAxisTextAngleSignal: 'Y axis text angle',
    zGrounded: 'Z grounded',
    zScaleProportion: 'Z scale proportion to Y',
    selectionCount: count => `${count} items selected`
  },
  maxLegends: 19,
  onError: errors => {//console.log(`UnitVisViewer errors: ${errors.join('\n')}`);
  },
  transitionDurations: Object.assign(Object.assign({}, defaultPresenterConfig.transitionDurations), {
    scope: 600
  }),
  selectionPolygonZ: -1,
  tickSize: 10
};
exports.defaultViewerOptions = defaultViewerOptions;

function getPresenterStyle(options) {
  var style = {
    cssPrefix,
    fontFamily: options.fontFamily,
    defaultCubeColor: VegaDeckGl.util.colorFromString(options.colors.defaultCube)
  };

  if (options.colors.hoveredCube) {
    style.highlightColor = VegaDeckGl.util.colorFromString(options.colors.hoveredCube);
  }

  if (options.lightSettings) {
    style.lightSettings = options.lightSettings;
  }

  return style;
}

const cssPrefix = 'sanddance-';
exports.cssPrefix = cssPrefix;
const dualColorSchemeColors = {
  black: '#212121',
  gray: '#D2D2D2',
  blue: '#0060F0',
  green: '#00C000',
  orange: '#FF9900',
  red: '#E00000'
};
exports.dualColorSchemeColors = dualColorSchemeColors;
},{"@msrvida/vega-deck.gl":"eFEk"}],"BTLl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInternalFieldName = isInternalFieldName;
Object.defineProperty(exports, "getColumnsFromData", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.getColumnsFromData;
  }
});
Object.defineProperty(exports, "getStats", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.getStats;
  }
});
Object.defineProperty(exports, "inferAll", {
  enumerable: true,
  get: function () {
    return _sanddanceSpecs.inferAll;
  }
});
Object.defineProperty(exports, "getPresenterStyle", {
  enumerable: true,
  get: function () {
    return _defaults.getPresenterStyle;
  }
});

var _constants = require("./constants");

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _defaults = require("./defaults");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function isInternalFieldName(columnName, includeVegaDeckGLFields = false) {
  if (includeVegaDeckGLFields) {
    if (columnName === _constants.GL_ORDINAL) return true;
  }

  for (let f in _constants.FieldNames) {
    if (columnName === _constants.FieldNames[f]) return true;
  }

  return false;
}
},{"./constants":"Syc7","@msrvida/sanddance-specs":"gl1V","./defaults":"G0Md"}],"kNpg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerColorSchemes = registerColorSchemes;
exports.colorSchemes = void 0;

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _defaults = require("./defaults");

const dualPairs = [[_defaults.dualColorSchemeColors.black, _defaults.dualColorSchemeColors.gray], [_defaults.dualColorSchemeColors.red, _defaults.dualColorSchemeColors.green], [_defaults.dualColorSchemeColors.red, _defaults.dualColorSchemeColors.blue], [_defaults.dualColorSchemeColors.black, _defaults.dualColorSchemeColors.red], [_defaults.dualColorSchemeColors.black, _defaults.dualColorSchemeColors.orange], [_defaults.dualColorSchemeColors.black, _defaults.dualColorSchemeColors.green]];
/**
 * Array of color schemes.
 */

const colorSchemes = [{
  scheme: _sanddanceSpecs.ColorScaleNone,
  colors: [_defaults.defaultViewerOptions.colors.defaultCube]
}];
exports.colorSchemes = colorSchemes;
createDualColorSchemes();

function registerColorSchemes(vega) {
  colorSchemes.forEach(cs => {
    if (cs.colors.length === 1) {
      vega.scheme(cs.scheme, x => cs.colors[0]);
    } else {
      vega.scheme(cs.scheme, cs.colors);
    }
  });
}

function createPair(names, colors) {
  const scheme = `dual_${names[0]}${names[1]}`;
  colorSchemes.push({
    scheme,
    colors
  });
}

function createDualColorSchemes() {
  dualPairs.forEach(colors => {
    const names = colors.map(color => {
      for (let key in _defaults.dualColorSchemeColors) if (color === _defaults.dualColorSchemeColors[key]) return key;
    });
    createPair(names, colors);
    createPair([...names].reverse(), [...colors].reverse());
  });
}
},{"@msrvida/sanddance-specs":"gl1V","./defaults":"G0Md"}],"U1OZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Animator = exports.DataLayoutChange = void 0;
var DataLayoutChange;
exports.DataLayoutChange = DataLayoutChange;

(function (DataLayoutChange) {
  DataLayoutChange[DataLayoutChange["same"] = 0] = "same";
  DataLayoutChange[DataLayoutChange["reset"] = 1] = "reset";
  DataLayoutChange[DataLayoutChange["refine"] = 2] = "refine";
})(DataLayoutChange || (exports.DataLayoutChange = DataLayoutChange = {}));

class Animator {
  constructor(dataScope, props) {
    this.dataScope = dataScope;
    this.props = props;
  }

  select(search) {
    return new Promise((resolve, reject) => {
      this.dataScope.select(search);
      this.props.onDataChanged(DataLayoutChange.same);
      resolve();
    });
  }

  deselect() {
    return new Promise((resolve, reject) => {
      this.dataScope.deselect();
      this.props.onDataChanged(DataLayoutChange.same);
      resolve();
    });
  }

  filter(search, keepData, collapseData) {
    this.dataScope.collapse(true, collapseData);
    return new Promise((resolve, reject) => {
      this.props.onAnimateDataChange(DataLayoutChange.refine, 'before refine', 'refine').then(() => {
        this.dataScope.deselect();
        this.dataScope.setFilteredData(keepData);
        this.props.onDataChanged(DataLayoutChange.refine, search);
        resolve();
      }).catch(reject);
    });
  }

  reset() {
    return new Promise((resolve, reject) => {
      this.dataScope.deselect();
      this.dataScope.setFilteredData(null);
      this.props.onAnimateDataChange(DataLayoutChange.reset, 'before reset', 'reset').then(() => {
        this.dataScope.collapse(false);
        this.props.onDataChanged(DataLayoutChange.reset);
        resolve();
      }).catch(reject);
    });
  }

  activate(datum) {
    return new Promise((resolve, reject) => {
      this.dataScope.activate(datum);
      this.props.onDataChanged(DataLayoutChange.same);
      resolve();
    });
  }

  deactivate() {
    return new Promise((resolve, reject) => {
      this.dataScope.deactivate();
      this.props.onDataChanged(DataLayoutChange.same);
      resolve();
    });
  }

}

exports.Animator = Animator;
},{}],"PfBA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSelectedColorMap = getSelectedColorMap;
exports.colorMapFromCubes = colorMapFromCubes;
exports.populateColorContext = populateColorContext;
exports.applyColorMapToCubes = applyColorMapToCubes;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _constants = require("./constants");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function getSelectedColorMap(currentData, showSelectedData, showActive, viewerOptions) {
  function getSelectionColorItem(datum) {
    let item;

    if (showSelectedData) {
      item = datum[_sanddanceSpecs.FieldNames.Selected] ? {
        color: VegaDeckGl.util.colorFromString(viewerOptions.colors.selectedCube)
      } : {
        unSelected: true
      };
    }

    if (showActive && datum[_sanddanceSpecs.FieldNames.Active]) {
      item = {
        color: VegaDeckGl.util.colorFromString(viewerOptions.colors.activeCube)
      };
    }

    return item;
  }

  const colorMap = {};
  currentData.forEach(datum => {
    const selectionColor = getSelectionColorItem(datum);

    if (selectionColor) {
      const ordinal = datum[_constants.GL_ORDINAL];
      colorMap[ordinal] = selectionColor;
    }
  });
  return colorMap;
}

function colorMapFromCubes(cubes) {
  const map = {};
  cubes.forEach(cube => {
    map[cube.ordinal] = {
      color: cube.color
    };
  });
  return map;
}

function populateColorContext(colorContext, presenter) {
  if (!colorContext.colorMap) {
    const cubes = presenter.getCubeData();
    colorContext.colorMap = colorMapFromCubes(cubes);
  }

  colorContext.legend = VegaDeckGl.util.clone(presenter.stage.legend);
  colorContext.legendElement = presenter.getElement(VegaDeckGl.PresenterElement.legend).children[0];
}

function applyColorMapToCubes(maps, cubes, unselectedColorMethod) {
  Object.keys(maps[0]).forEach(ordinal => {
    const cube = cubes[+ordinal];

    if (cube && !cube.isEmpty) {
      const actualColorMappedItem = maps[0][ordinal];

      if (maps.length > 1) {
        const selectedColorMappedItem = maps[1][ordinal];

        if (selectedColorMappedItem) {
          if (selectedColorMappedItem.unSelected && unselectedColorMethod) {
            cube.color = unselectedColorMethod(actualColorMappedItem.color);
          } else {
            cube.color = selectedColorMappedItem.color;
          }

          return;
        }
      }

      cube.color = actualColorMappedItem.color;
    }
  });
}
},{"@msrvida/vega-deck.gl":"eFEk","@msrvida/sanddance-specs":"gl1V","./constants":"Syc7"}],"jmI2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applySignalValues = applySignalValues;
exports.extractSignalValuesFromView = extractSignalValuesFromView;

function applySignalValues(sv, b) {
  if (!sv || !b || !b.signals || !b.signals.length) return;

  for (let key in sv) {
    let value = sv[key];
    let signalB = b.signals.filter(signal => signal.name === key)[0];

    if (signalB && signalB.bind) {
      signalB.value = value;
    }
  }
}

function extractSignalValuesFromView(view, spec) {
  if (!view || !spec || !spec.signals || !spec.signals.length) return;
  const result = {};
  spec.signals.forEach(signalA => {
    //bound to a UI control
    if (signalA.bind) {
      try {
        result[signalA.name] = view.signal(signalA.name);
      } catch (e) {// continue regardless of error
      }
    }
  });
  return result;
}
},{}],"dxn8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assignOrdinals = assignOrdinals;
exports.getDataIndexOfCube = getDataIndexOfCube;

var _constants = require("./constants");

function assignOrdinals(columns, data, ordinalMap) {
  const uCol = columns.uid && columns.uid.name;

  if (ordinalMap) {
    data.forEach((d, i) => {
      const key = uCol ? d[uCol] : i;
      d[_constants.GL_ORDINAL] = ordinalMap[key];
    });
  } else {
    ordinalMap = {};
    data.forEach((d, i) => {
      d[_constants.GL_ORDINAL] = i;
      const uColValue = uCol ? d[uCol] : i;
      ordinalMap[uColValue] = i;
    });
  }

  return ordinalMap;
}

function getDataIndexOfCube(cube, data) {
  const len = data.length;

  for (let i = 0; i < len; i++) {
    if (data[i][_constants.GL_ORDINAL] === cube.ordinal) {
      return i;
    }
  }
}
},{"./constants":"Syc7"}],"bPo5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.push = exports.concat = exports.allTruthy = void 0;

var _vegaDeck = require("@msrvida/vega-deck.gl");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const {
  allTruthy,
  concat,
  push
} = _vegaDeck.util;
exports.push = push;
exports.concat = concat;
exports.allTruthy = allTruthy;
},{"@msrvida/vega-deck.gl":"eFEk"}],"KytA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSearchGroupFromVegaValue = getSearchGroupFromVegaValue;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _array = require("./array");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function getSearchGroupFromVegaValue(search) {
  let group;
  const vegaSearch = search;

  if (Array.isArray(vegaSearch)) {
    //flatten into one group
    group = {
      expressions: []
    };
    vegaSearch.forEach(g => {
      const clonedExpressions = VegaDeckGl.util.clone(g.expressions).filter(Boolean);
      clonedExpressions[0].clause = '&&';
      (0, _array.push)(group.expressions, clonedExpressions);
    });
  } else {
    group = vegaSearch ? {
      expressions: vegaSearch.expressions.filter(Boolean)
    } : null;
  }

  return group;
}
},{"@msrvida/vega-deck.gl":"eFEk","./array":"bPo5"}],"JTcr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notNice = notNice;
exports.selectNullOrEmpty = selectNullOrEmpty;
exports.selectExact = selectExact;
exports.selectNone = selectNone;
exports.selectExactAxis = selectExactAxis;
exports.selectBetween = selectBetween;
exports.selectBetweenAxis = selectBetweenAxis;

function notNice(niceValue) {
  //convert "nice" numbers to numeric value
  return (niceValue + '').replace(/,/g, '');
}

function tickValue(axis, i) {
  const tick = axis.tickText[i];
  let value;

  if (tick) {
    value = axis.tickText[i].value;
  }

  return {
    tick,
    value
  };
}

function selectNullOrEmpty(column) {
  const searchExpression = {
    name: column.name,
    operator: 'isnullorEmpty'
  };
  return searchExpression;
}

function selectExact(column, value) {
  if (value == null) {
    return selectNullOrEmpty(column);
  }

  const searchExpression = {
    name: column.name,
    operator: '==',
    value
  };
  return searchExpression;
}

function selectNone(column, values) {
  const expressions = values.map((value, i) => {
    const searchExpression = {
      name: column.name,
      operator: '!=',
      value
    };

    if (i) {
      searchExpression.clause = '&&';
    }

    return searchExpression;
  });
  const searchExpressionGroup = {
    expressions
  };
  return searchExpressionGroup;
}

function selectExactAxis(axis, column, i) {
  const result = tickValue(axis, i);

  if (result.tick) {
    return selectExact(column, result.value);
  }
}

function selectBetween(column, lowValue, highValue, lowOperator = '>=', highOperator = '<') {
  const expressions = [];

  if (lowValue !== undefined) {
    expressions.push({
      name: column.name,
      operator: lowOperator,
      value: lowValue
    });
  }

  if (highValue !== undefined) {
    expressions.push({
      name: column.name,
      operator: highOperator,
      value: highValue
    });
  }

  if (expressions.length > 1) {
    expressions[1].clause = '&&';
  }

  const searchExpressionGroup = {
    expressions
  };
  return searchExpressionGroup;
}

function selectBetweenAxis(axis, column, i) {
  const low = tickValue(axis, i);
  const high = tickValue(axis, i + 1);
  return selectBetween(column, low.value, high.value);
}
},{}],"oIzg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisSelectionLayer = axisSelectionLayer;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _search = require("./search");

var _expression = require("./expression");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function axisSelectionLayer(presenter, specCapabilities, columns, stage, clickHandler, highlightColor, polygonZ) {
  const polygons = [];
  const xRole = specCapabilities.roles.filter(r => r.role === 'x')[0];

  if (xRole && xRole.axisSelection) {
    stage.axes.x.filter(axis => axis.tickText.length).forEach(axis => {
      polygons.push.apply(polygons, axisSelectionPolygons(axis, false, xRole.axisSelection, columns.x));
    });
  }

  const yRole = specCapabilities.roles.filter(r => r.role === 'y')[0];

  if (yRole && yRole.axisSelection) {
    stage.axes.y.filter(axis => axis.tickText.length).forEach(axis => {
      polygons.push.apply(polygons, axisSelectionPolygons(axis, true, yRole.axisSelection, columns.y));
    });
  }

  if (stage.facets && columns.facet) {
    polygons.push.apply(polygons, facetSelectionPolygons(stage.facets));
  } //move polygons to Z


  polygons.forEach(datum => {
    datum.polygon.forEach(p => {
      p[2] = polygonZ;
    });
  });

  const onClick = (o, e) => clickHandler(e.srcEvent, o.object.search);

  const polygonLayer = new VegaDeckGl.base.layers.PolygonLayer({
    autoHighlight: true,
    coordinateSystem: VegaDeckGl.base.deck.COORDINATE_SYSTEM.IDENTITY,
    data: polygons,
    extruded: false,
    highlightColor: VegaDeckGl.util.colorFromString(highlightColor),
    id: 'selections',
    onHover: (o, e) => {
      if (o.index === -1) {
        presenter.deckgl.interactiveState.onAxisSelection = false;
      } else {
        presenter.deckgl.interactiveState.onAxisSelection = true;
      }
    },
    onClick,
    getElevation: () => 0,
    getFillColor: () => [0, 0, 0, 0],
    pickable: true,
    stroked: false
  });
  return polygonLayer;
}

function axisSelectionPolygons(axis, vertical, axisSelectionType, column) {
  const polygons = [];
  const size = 50;
  const getSearch = axisSelectionType === 'exact' ? (a, c, i) => ({
    expressions: [(0, _expression.selectExactAxis)(a, c, i)]
  }) : _expression.selectBetweenAxis;
  const {
    domain,
    ticks
  } = axis;

  if (ticks.length > 0 && domain) {
    const dim = vertical ? 1 : 0;
    const between = Math.abs(ticks[0].sourcePosition[dim] - domain.sourcePosition[dim]) > 1;
    let divisions;

    if (between) {
      divisions = [];

      for (let i = 1; i < ticks.length; i++) {
        divisions.push((ticks[i].sourcePosition[dim] + ticks[i - 1].sourcePosition[dim]) / 2);
      }
    } else {
      divisions = ticks.slice(1, -1).map(tick => tick.sourcePosition[dim]);
    }

    const add = (p2, i) => {
      var coords = [[p1, q1], [p2, q1], [p2, q2], [p1, q2]];
      polygons.push({
        search: getSearch(axis, column, i),
        polygon: vertical ? coords.map(xy => xy.reverse()) : coords
      });
      p1 = p2;
    };

    let p1 = domain.sourcePosition[dim];
    const q1 = domain.sourcePosition[vertical ? 0 : 1];
    const q2 = q1 - size;
    divisions.forEach(add);
    add(domain.targetPosition[dim], ticks.length - (between ? 1 : 2));
  }

  return polygons;
}

function facetSelectionPolygons(facetRects) {
  const polygons = [];
  let linesAndSearches;
  linesAndSearches = facetRects.map(({
    datum,
    lines
  }, i) => {
    let group = (0, _search.getSearchGroupFromVegaValue)(datum[_sanddanceSpecs.FieldNames.FacetSearch]);
    return {
      lines,
      search: group
    };
  });
  linesAndSearches.forEach(({
    lines,
    search
  }, i) => {
    //take any 2 lines to get a box dimension
    const [x, y] = minMaxPoints(lines.slice(2));
    polygons.push({
      search,
      polygon: [[x.min, y.min], [x.max, y.min], [x.max, y.max], [x.min, y.max]]
    });
  });
  return polygons;
}

function minMaxPoints(lines) {
  const points = [];
  lines.forEach(line => {
    [line.sourcePosition, line.targetPosition].forEach(point => {
      points.push(point);
    });
  });
  return [0, 1].map(dim => {
    let minMax = {
      min: null,
      max: null
    };
    points.forEach(point => {
      if (minMax.max == null) {
        minMax.max = point[dim];
      } else {
        minMax.max = Math.max(minMax.max, point[dim]);
      }

      if (minMax.min == null) {
        minMax.min = point[dim];
      } else {
        minMax.min = Math.min(minMax.min, point[dim]);
      }
    });
    return minMax;
  });
}
},{"@msrvida/vega-deck.gl":"eFEk","@msrvida/sanddance-specs":"gl1V","./search":"KytA","./expression":"JTcr"}],"MJ1d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataScope = void 0;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _searchExpression = require("@msrvida/search-expression");

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _constants = require("./constants");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
class DataScope {
  constructor() {
    this.filteredColumnsStats = {};
  }

  setData(data, columns) {
    const differentData = this.data !== data;

    if (differentData) {
      if (this.data) {
        //clean up things we added to old data
        this.deselect();
      }

      this.data = data;
      this.columns = columns;
      this.filteredData = null;
      this.filteredColumnsStats = {};
    }

    return differentData;
  }

  setFilteredData(filteredData) {
    this.filteredData = filteredData;
    this.filteredColumnsStats = {};
  }

  getColumns(columnTypes) {
    if (!this.columns) {
      this.columns = (0, _sanddanceSpecs.getColumnsFromData)(VegaDeckGl.base.vega.inferTypes, this.data, columnTypes);
    }

    return this.columns;
  }

  getFilteredColumnStats(columnName) {
    if (!this.filteredColumnsStats[columnName]) {
      this.filteredColumnsStats[columnName] = (0, _sanddanceSpecs.getStats)(this.filteredData, this.columns.filter(c => c.name === columnName)[0]);
    }

    return this.filteredColumnsStats[columnName];
  }

  currentData() {
    return this.filteredData || this.data;
  }

  select(search) {
    this.deselect();

    if (search) {
      this.selection = this.createUserSelection(search, true);

      if (this.selection.included.length) {
        this.activate(this.selection.included[0]);
      }
    }
  }

  createUserSelection(search, assign) {
    const exec = new _searchExpression.Exec(search, this.getColumns());
    const s = {
      search,
      included: [],
      excluded: []
    };
    this.currentData().forEach(datum => {
      if (exec.run(datum)) {
        if (assign) {
          datum[_sanddanceSpecs.FieldNames.Selected] = true;
        }

        s.included.push(datum);
      } else {
        s.excluded.push(datum);
      }
    });
    return s;
  }

  deselect() {
    this.deactivate();
    this.data.forEach(datum => {
      delete datum[_sanddanceSpecs.FieldNames.Selected];
    });
    this.selection = null;
  }

  hasFilteredData() {
    return !!this.filteredData;
  }

  hasSelectedData() {
    return !!this.selection;
  }

  collapse(collapsed, data = this.data) {
    data.forEach(datum => {
      datum[_sanddanceSpecs.FieldNames.Collapsed] = collapsed;
    });
    this.isCollapsed = collapsed;
  }

  activate(datum) {
    this.deactivate();
    datum[_sanddanceSpecs.FieldNames.Active] = true;
    this.active = datum;
  }

  deactivate() {
    if (this.active) {
      delete this.active[_sanddanceSpecs.FieldNames.Active];
    }

    this.active = null;
  }

  ordinalIndexWithinSelection(ordinal) {
    if (this.selection) {
      for (let i = 0; i < this.selection.included.length; i++) {
        let datum = this.selection.included[i];

        if (datum[_constants.GL_ORDINAL] === ordinal) {
          return {
            datum,
            index: i
          };
        }
      }
    }

    return {
      datum: null,
      index: -1
    };
  }

  finalize() {
    this.data = null;
    this.filteredData = null;
    this.filteredColumnsStats = null;

    if (this.selection) {
      this.selection.excluded = null;
      this.selection.included = null;
      this.selection = null;
    }
  }

}

exports.DataScope = DataScope;
},{"@msrvida/vega-deck.gl":"eFEk","@msrvida/search-expression":"VB4o","@msrvida/sanddance-specs":"gl1V","./constants":"Syc7"}],"KCB5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Details = void 0;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _defaults = require("./defaults");

var _constants = require("./constants");

var _searchExpression = require("@msrvida/search-expression");

var _util = require("./util");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var Action;

(function (Action) {
  Action[Action["deselect"] = 0] = "deselect";
  Action[Action["isolate"] = 1] = "isolate";
  Action[Action["exclude"] = 2] = "exclude";
  Action[Action["reset"] = 3] = "reset";
  Action[Action["next"] = 4] = "next";
  Action[Action["previous"] = 5] = "previous";
})(Action || (Action = {}));

class Details {
  constructor(parentElement, language, animator, dataScope, colorMapHandler, hasColorMaps) {
    this.language = language;
    this.animator = animator;
    this.dataScope = dataScope;
    this.colorMapHandler = colorMapHandler;
    this.hasColorMaps = hasColorMaps;
    this.element = VegaDeckGl.util.addDiv(parentElement, `${_defaults.cssPrefix}unitControls`);
    this.clear();
  }

  finalize() {
    if (this.element) this.element.innerHTML = '';
    this.dataScope = null;
    this.element = null;
  }

  clear() {
    this.state = {
      userSelection: null,
      index: -1,
      remapColor: false
    };
    this.render();
  }

  clearSelection() {
    this.state.userSelection = null;
    this.state.index = -1;
    this.render();
  }

  populate(userSelection, index = 0) {
    this.state.userSelection = userSelection;
    this.state.index = index;
    this.render();
  }

  selectByNameValue(columnName, value) {
    const search = {
      name: columnName,
      operator: '==',
      value
    };
    this.clearSelection();
    this.animator.select(search);
    this.populate(this.dataScope.selection);
  }

  remapChanged(remap) {
    this.state.remapColor = remap;
    this.colorMapHandler(remap);
    this.render();
  }

  handleAction(action) {
    let p;
    const u = this.state.userSelection;

    switch (action) {
      case Action.deselect:
        {
          this.clearSelection();
          p = this.animator.deselect();
          break;
        }

      case Action.exclude:
        {
          this.clearSelection();
          p = this.animator.filter((0, _searchExpression.invert)(u.search), u.excluded, u.included);
          this.state.remapColor = false;
          break;
        }

      case Action.isolate:
        {
          this.clearSelection();
          p = this.animator.filter(u.search, u.included, u.excluded);
          this.state.remapColor = false;
          break;
        }

      case Action.reset:
        {
          this.clear();
          p = this.animator.reset();
          break;
        }

      default:
        {
          switch (action) {
            case Action.previous:
              {
                this.state.index--;

                if (this.state.index < 0) {
                  this.state.index = this.state.userSelection.included.length - 1;
                }

                break;
              }

            case Action.next:
              {
                this.state.index++;

                if (this.state.index >= this.state.userSelection.included.length) {
                  this.state.index = 0;
                }

                break;
              }
          }

          this.render();
          p = this.animator.activate(this.state.userSelection.included[this.state.index]);
        }
    }

    p.then(() => this.render());
  }

  render() {
    const hasRefinedData = this.dataScope.hasFilteredData();
    const renderProps = {
      language: this.language,
      actionHandler: action => this.handleAction(action),
      selectionHandler: (columnName, value) => this.selectByNameValue(columnName, value),
      count: this.state.userSelection && this.state.userSelection.included.length,
      hasRefinedData,
      item: this.state.userSelection && this.state.userSelection.included[this.state.index],
      remapColorHandler: remap => this.remapChanged(remap),
      hasColorMaps: this.hasColorMaps() && hasRefinedData,
      remapColor: this.state.remapColor
    };
    const a = VegaDeckGl.util.getActiveElementInfo();
    VegaDeckGl.util.mount(renderDetails(renderProps), this.element);
    VegaDeckGl.util.setActiveElement(a);
  }

}

exports.Details = Details;

const renderDetails = props => {
  const controlButtons = [VegaDeckGl.util.createElement("button", {
    disabled: !props.item,
    onClick: e => props.actionHandler(Action.deselect)
  }, props.language.deselect), VegaDeckGl.util.createElement("button", {
    disabled: !props.item,
    onClick: e => props.actionHandler(Action.isolate)
  }, props.language.isolate), VegaDeckGl.util.createElement("button", {
    disabled: !props.item,
    onClick: e => props.actionHandler(Action.exclude)
  }, props.language.exclude)];
  const colorMapping = VegaDeckGl.util.createElement("div", null, VegaDeckGl.util.createElement("button", {
    disabled: props.remapColor,
    onClick: e => props.remapColorHandler(true)
  }, props.language.newColorMap), VegaDeckGl.util.createElement("button", {
    disabled: !props.remapColor,
    onClick: e => props.remapColorHandler(false)
  }, props.language.oldColorMap));
  const singleItem = props.count === 1;
  const scrollButtons = [VegaDeckGl.util.createElement("button", {
    disabled: singleItem,
    onClick: e => props.actionHandler(Action.previous)
  }, props.language.previousDetail), VegaDeckGl.util.createElement("button", {
    disabled: singleItem,
    onClick: e => props.actionHandler(Action.next)
  }, props.language.nextDetail), VegaDeckGl.util.createElement("span", null, " ", props.language.selectionCount(props.count))];
  const rows = [];

  for (let prop in props.item) {
    if (prop === _constants.GL_ORDINAL) {
      continue;
    }

    if ((0, _util.isInternalFieldName)(prop)) {
      continue;
    }

    rows.push({
      cells: [{
        content: prop
      }, {
        content: linkSelect(props.language, prop, props.item[prop], props.selectionHandler)
      }]
    });
  }

  return VegaDeckGl.util.createElement("div", null, props.hasColorMaps && colorMapping, VegaDeckGl.util.createElement("h4", null, props.language.headers.selection), VegaDeckGl.util.createElement("div", {
    className: `${_defaults.cssPrefix}selection`
  }, controlButtons, VegaDeckGl.util.createElement("button", {
    disabled: !props.hasRefinedData,
    onClick: e => props.actionHandler(Action.reset)
  }, "reset")), props.item && VegaDeckGl.util.createElement("h4", null, props.language.headers.details), VegaDeckGl.util.createElement("div", null, VegaDeckGl.util.createElement("div", {
    className: `${_defaults.cssPrefix}details-scroll`
  }, props.item && scrollButtons), VegaDeckGl.util.createElement("div", {
    className: `${_defaults.cssPrefix}details`
  }, props.item && VegaDeckGl.util.createElement(VegaDeckGl.controls.Table, {
    rows: rows
  }))));
};

function linkSelect(language, columnName, value, selectionHandler) {
  return VegaDeckGl.util.createElement("span", null, VegaDeckGl.util.createElement("a", {
    href: "#",
    onClick: e => selectionHandler(columnName, value)
  }, value), isNaN(value) ? [' ', VegaDeckGl.util.createElement("a", {
    className: "bing-search",
    href: `https://www.bing.com/search?q=${encodeURIComponent(value)}`,
    target: "_blank"
  }, language.bing)] : '');
}
},{"@msrvida/vega-deck.gl":"eFEk","./defaults":"G0Md","./constants":"Syc7","@msrvida/search-expression":"VB4o","./util":"BTLl"}],"nQLz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureHeaders = ensureHeaders;

var _vegaDeck = require("@msrvida/vega-deck.gl");

function ensureHeaders(presenter, headers) {
  const vegaControls = presenter.getElement(_vegaDeck.PresenterElement.vegaControls);
  conditionalHeader(!!vegaControls.querySelectorAll('.vega-bindings > *').length, vegaControls, headers.chart);
  const legend = presenter.getElement(_vegaDeck.PresenterElement.legend);
  conditionalHeader(!!legend.children.length, legend, headers.legend);
}

function conditionalHeader(condition, element, header) {
  var existing = existingHeader(element, header);

  if (condition && !existing) {
    addHeader(element, header);
  }

  if (!condition && existing) {
    existing.remove();
  }
}

function addHeader(element, header) {
  const h = document.createElement('h4');
  h.innerHTML = header;
  element.insertAdjacentElement('beforebegin', h);
}

function existingHeader(element, header) {
  const {
    previousElementSibling
  } = element;

  if (previousElementSibling && previousElementSibling.innerHTML === header) {
    return previousElementSibling;
  }
}
},{"@msrvida/vega-deck.gl":"eFEk"}],"rI67":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.finalizeLegend = finalizeLegend;

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _expression = require("./expression");

function legendRange(colorBinType, column, legend, clickedIndex) {
  if (column.quantitative) {
    return selectQuantitative(colorBinType, column, legend, clickedIndex);
  } else {
    return selectCategorical(column, legend, clickedIndex);
  }
}

function selectCategorical(column, legend, clickedIndex) {
  const value = legend.rows[clickedIndex].value;

  if (value === _sanddanceSpecs.Other) {
    const values = [];

    for (let i in legend.rows) {
      if (+i !== clickedIndex) {
        values.push(legend.rows[i].value);
      }
    }

    return (0, _expression.selectNone)(column, values);
  } else {
    //select equal
    return {
      expressions: [(0, _expression.selectExact)(column, legend.rows[clickedIndex].value)]
    };
  }
}

function selectQuantitative(colorBinType, column, legend, clickedIndex) {
  const keys = Object.keys(legend.rows).map(key => +key).sort((a, b) => +a - +b);
  let lowValue;
  let lowOperator;
  let highValue;
  let highOperator;
  const rowText = legend.rows[clickedIndex].label;

  switch (colorBinType) {
    case 'continuous':
      {
        lowValue = rowText;

        if (clickedIndex < keys.length - 1) {
          highValue = legend.rows[clickedIndex + 1].value;
        }

        break;
      }

    default:
      {
        if (rowText.indexOf('null') > 0) {
          const ex = {
            expressions: [(0, _expression.selectNullOrEmpty)(column)]
          };
          return ex;
        }

        const dash = rowText.indexOf('–'); //this is not the common dash character!

        if (dash > 0) {
          //bug in Vega for quantize?
          //lowOperator = '>';
          //highOperator = '<=';
          lowValue = rowText.substr(0, dash);
          highValue = rowText.substr(dash + 1);
        } else {
          if (rowText.indexOf('<') >= 0) {
            highValue = rowText.substring(2);
          } else {
            if (rowText.indexOf('≥') >= 0) {
              lowValue = rowText.substring(2);
            }
          }
        }
      }
  }

  if (lowValue) lowValue = (0, _expression.notNice)(lowValue);
  if (highValue) highValue = (0, _expression.notNice)(highValue);
  return (0, _expression.selectBetween)(column, lowValue, highValue, lowOperator, highOperator);
}

function finalizeLegend(colorBinType, colorColumn, legend, language) {
  const rowTexts = [];

  for (let i in legend.rows) {
    let row = legend.rows[i];
    row.search = legendRange(colorBinType, colorColumn, legend, +i);

    if (row.value === _sanddanceSpecs.Other) {
      row.label = language.legendOther;
    } else if (rowTexts.indexOf(row.value) >= 0) {
      delete legend.rows[i];
    } else {
      rowTexts.push(row.value);
    }
  }
}
},{"@msrvida/sanddance-specs":"gl1V","./expression":"JTcr"}],"A7xy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.recolorAxes = recolorAxes;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function cloneAxis(axes, axisColor, axisTextColor) {
  return axes.map(axis => {
    const newAxis = VegaDeckGl.util.deepMerge(axis);
    newAxis.domain.color = axisColor;
    newAxis.title.color = axisTextColor;
    newAxis.ticks.forEach(t => {
      t.color = axisColor;
    });
    newAxis.tickText.forEach(t => {
      t.color = axisTextColor;
    });
    return newAxis;
  });
}

function cloneTextData(textData, color) {
  return textData.map(t => {
    return Object.assign(Object.assign({}, t), {
      color
    });
  });
}

function colorEquals(a, b) {
  if (a.length !== b.length) return false;

  for (let i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) return false;
  }

  return true;
}

function recolorAxes(stage, oldColors, newColors) {
  const hasNewLineColor = newColors.axisLine && newColors.axisLine !== oldColors.axisLine;
  const hasNewTextColor = newColors.axisText && newColors.axisText !== oldColors.axisText;
  let axes;
  let textData;

  if (hasNewLineColor || hasNewTextColor) {
    const lineColor = VegaDeckGl.util.colorFromString(newColors.axisLine || oldColors.axisLine);
    const textColor = VegaDeckGl.util.colorFromString(newColors.axisText || oldColors.axisText);
    axes = {
      x: cloneAxis(stage.axes.x, lineColor, textColor),
      y: cloneAxis(stage.axes.y, lineColor, textColor)
    };
  }

  if (hasNewTextColor) {
    textData = cloneTextData(stage.textData, VegaDeckGl.util.colorFromString(newColors.axisText));
  }

  return {
    axes,
    textData
  };
}
},{"@msrvida/vega-deck.gl":"eFEk"}],"bkgF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = void 0;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _constants = require("./constants");

var _util = require("./util");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const {
  outerSize
} = VegaDeckGl.util;
const {
  Table
} = VegaDeckGl.controls;

class Tooltip {
  constructor(props) {
    const renderProps = {
      cssPrefix: props.cssPrefix,
      rows: getRows(props.item, props.options)
    };
    this.element = renderTooltip(renderProps);

    if (this.element) {
      this.element.style.position = 'absolute';
      this.child = this.element.firstChild;
      document.body.appendChild(this.element); //measure and move as necessary

      let m = outerSize(this.child);

      while (m.height > document.documentElement.clientHeight) {
        let tr = this.child.querySelector('tr:last-child');

        if (tr) {
          tr.parentElement.removeChild(tr);
        } else {
          break;
        }

        m = outerSize(this.child);
      }

      if (props.position.clientX + m.width >= document.documentElement.clientWidth) {
        this.child.style.right = '0';
      }

      let moveTop = true;

      if (props.position.clientY + m.height >= document.documentElement.clientHeight) {
        if (props.position.clientY - m.height > 0) {
          this.child.style.bottom = '0';
        } else {
          moveTop = false;
        }
      }

      if (moveTop) {
        this.element.style.top = `${props.position.clientY}px`;
      }

      this.element.style.left = `${props.position.clientX}px`;
    }
  }

  finalize() {
    if (this.element) {
      document.body.removeChild(this.element);
    }

    this.element = null;
  }

}

exports.Tooltip = Tooltip;

function getRows(item, options) {
  const rows = [];

  for (let columnName in item) {
    if (columnName === _constants.GL_ORDINAL) {
      continue;
    }

    if ((0, _util.isInternalFieldName)(columnName)) {
      continue;
    }

    if (options && options.exclude) {
      if (options.exclude(columnName)) {
        continue;
      }
    }

    let value = item[columnName];
    let content;

    if (options && options.displayValue) {
      content = options.displayValue(value);
    } else {
      switch (value) {
        case null:
          content = VegaDeckGl.util.createElement("i", null, "null");
          break;

        case undefined:
          content = VegaDeckGl.util.createElement("i", null, "undefined");
          break;

        default:
          content = value.toString();
      }
    }

    rows.push({
      cells: [{
        content: columnName + ':'
      }, {
        content
      }]
    });
  }

  return rows;
}

const renderTooltip = props => {
  return props.rows.length === 0 ? null : VegaDeckGl.util.createElement("div", {
    className: `${props.cssPrefix}tooltip`
  }, Table({
    rows: props.rows
  }));
};
},{"@msrvida/vega-deck.gl":"eFEk","./constants":"Syc7","./util":"BTLl"}],"CdFf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Viewer = void 0;

var searchExpression = _interopRequireWildcard(require("@msrvida/search-expression"));

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

var _animator = require("./animator");

var _colorCubes = require("./colorCubes");

var _signals = require("./signals");

var _ordinal = require("./ordinal");

var _axisSelection = require("./axisSelection");

var _sanddanceSpecs = require("@msrvida/sanddance-specs");

var _dataScope = require("./dataScope");

var _defaults = require("./defaults");

var _details = require("./details");

var _headers = require("./headers");

var _legend = require("./legend");

var _search = require("./search");

var _constants = require("./constants");

var _axes = require("./axes");

var _colorSchemes = require("./colorSchemes");

var _tooltip = require("./tooltip");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}; // Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.


const {
  defaultView
} = VegaDeckGl.defaults;
let didRegisterColorSchemes = false;
/**
 * Component to view a SandDance data visualization.
 */

class Viewer {
  /**
   * Instantiate a new Viewer.
   * @param element Parent HTMLElement to present within.
   * @param options Optional viewer options object.
   */
  constructor(element, options) {
    this.element = element;
    this.options = VegaDeckGl.util.deepMerge(_defaults.defaultViewerOptions, options);
    this.presenter = new VegaDeckGl.Presenter(element, (0, _defaults.getPresenterStyle)(this.options));
    this._dataScope = new _dataScope.DataScope();
    this._animator = new _animator.Animator(this._dataScope, {
      onDataChanged: this.onDataChanged.bind(this),
      onAnimateDataChange: this.onAnimateDataChange.bind(this)
    });
    this._details = new _details.Details(this.presenter.getElement(VegaDeckGl.PresenterElement.panel), this.options.language, this._animator, this._dataScope, remap => {
      this.currentColorContext = ~~remap;
      this.renderSameLayout();
    }, () => this.insight && this.insight.columns && !!this.insight.columns.color && this.colorContexts && this.colorContexts.length > 1);
    this.insight = {};
    this._signalValues = {};
  }

  changeColorContexts(colorContexts) {
    this.colorContexts = colorContexts;
    this.currentColorContext = 0;
    this.options.onColorContextChange && this.options.onColorContextChange();
  }

  applyLegendColorContext(colorContext) {
    const a = VegaDeckGl.util.getActiveElementInfo();
    VegaDeckGl.util.mount(colorContext.legendElement, this.presenter.getElement(VegaDeckGl.PresenterElement.legend));
    VegaDeckGl.util.setActiveElement(a);
    this.presenter.stage.legend = colorContext.legend;
  }

  onAnimateDataChange(dataChange, waitingLabel, handlerLabel) {
    return new Promise((resolve, reject) => {
      let innerPromise;

      if (dataChange === _animator.DataLayoutChange.refine) {
        const oldColorContext = this.colorContexts[this.currentColorContext];
        innerPromise = new Promise(innerResolve => {
          this.renderNewLayout({
            preStage: (stage, deckProps) => {
              (0, _legend.finalizeLegend)(this.insight.colorBin, this._specColumns.color, stage.legend, this.options.language);
              this.overrideAxisLabels(stage);
              (0, _colorCubes.applyColorMapToCubes)([oldColorContext.colorMap], VegaDeckGl.util.getCubes(deckProps));

              if (this.options.onStage) {
                this.options.onStage(stage, deckProps);
              }
            }
          }).then(() => {
            //apply old legend
            this.applyLegendColorContext(oldColorContext);
            innerResolve();
          });
        });
      } else {
        innerPromise = this.renderNewLayout({
          preStage: (stage, deckProps) => {
            (0, _legend.finalizeLegend)(this.insight.colorBin, this._specColumns.color, stage.legend, this.options.language);
            this.overrideAxisLabels(stage);

            if (this.options.onStage) {
              this.options.onStage(stage, deckProps);
            }
          }
        });
      }

      innerPromise.then(() => {
        this.presenter.animationQueue(resolve, this.options.transitionDurations.position, {
          waitingLabel,
          handlerLabel,
          animationCanceled: reject
        });
      });
    });
  }

  onDataChanged(dataLayout, filter) {
    return __awaiter(this, void 0, void 0, function* () {
      switch (dataLayout) {
        case _animator.DataLayoutChange.same:
          {
            this.renderSameLayout();
            break;
          }

        case _animator.DataLayoutChange.refine:
          {
            //save cube colors
            const oldColorContext = this.colorContexts[this.currentColorContext];
            let colorMap;
            yield this.renderNewLayout({
              preStage: (stage, deckProps) => {
                //save off the spec colors
                colorMap = (0, _colorCubes.colorMapFromCubes)(stage.cubeData);
                (0, _colorCubes.applyColorMapToCubes)([oldColorContext.colorMap], VegaDeckGl.util.getCubes(deckProps));
                this.preStage(stage, deckProps);
              },
              onPresent: () => {
                //save new legend
                const newColorContext = {
                  colorMap,
                  legend: VegaDeckGl.util.clone(this.presenter.stage.legend),
                  legendElement: this.presenter.getElement(VegaDeckGl.PresenterElement.legend).children[0]
                }; //apply old legend

                this.applyLegendColorContext(oldColorContext);
                this.changeColorContexts([oldColorContext, newColorContext]);
              }
            }); //narrow the filter only if it is different

            if (!searchExpression.compare(this.insight.filter, filter)) {
              this.insight.filter = searchExpression.narrow(this.insight.filter, filter);
            }

            if (this.options.onDataFilter) {
              this.options.onDataFilter(this.insight.filter, this._dataScope.currentData());
            }

            break;
          }

        case _animator.DataLayoutChange.reset:
          {
            const colorContext = {
              colorMap: null,
              legend: null,
              legendElement: null
            };
            this.changeColorContexts([colorContext]);
            yield this.renderNewLayout({
              onPresent: () => {
                (0, _colorCubes.populateColorContext)(colorContext, this.presenter);
              }
            });
            delete this.insight.filter;

            if (this.options.onDataFilter) {
              this.options.onDataFilter(null, null);
            }

            break;
          }
      }

      if (this.options.onSelectionChanged) {
        const sel = this.getSelection();
        this.options.onSelectionChanged(sel && sel.search || null, 0, sel && sel.selectedData || null);
      }
    });
  }

  getSpecColumnsWithFilteredStats() {
    if (!this._dataScope.hasFilteredData()) {
      return this._specColumns;
    }

    const roles = ['color', 'facet', 'group', 'size', 'sort', 'sum', 'x', 'y', 'z'];
    const specColumns = Object.assign({}, this._specColumns);
    roles.forEach(r => {
      if (specColumns[r]) {
        const column = Object.assign({}, specColumns[r]);
        column.stats = this.getColumnStats(column);
        specColumns[r] = column;
      }
    });
    return specColumns;
  }

  renderNewLayout(presenterConfig, view) {
    return __awaiter(this, void 0, void 0, function* () {
      const currData = this._dataScope.currentData();

      const context = {
        specColumns: this.getSpecColumnsWithFilteredStats(),
        insight: this.insight,
        specViewOptions: this.options
      };
      const specResult = (0, _sanddanceSpecs.cloneVegaSpecWithData)(context, currData);

      if (!specResult.errors) {
        const uiValues = (0, _signals.extractSignalValuesFromView)(this.vegaViewGl, this.vegaSpec);
        this._signalValues = Object.assign(Object.assign(Object.assign({}, this._signalValues), uiValues), this.insight.signalValues);
        (0, _signals.applySignalValues)(this._signalValues, specResult.vegaSpec);
        this.vegaSpec = specResult.vegaSpec;
        this.options.onVegaSpec && this.options.onVegaSpec(this.vegaSpec);
        this.specCapabilities = specResult.specCapabilities;
        const config = this.createConfig(presenterConfig);

        if (view) {
          config.getView = () => view;
        }

        if (!didRegisterColorSchemes) {
          (0, _colorSchemes.registerColorSchemes)(VegaDeckGl.base.vega);
          didRegisterColorSchemes = true;
        }

        try {
          const runtime = VegaDeckGl.base.vega.parse(this.vegaSpec);
          this.vegaViewGl = new VegaDeckGl.ViewGl(runtime, config).renderer('deck.gl').initialize(this.element);
          yield this.vegaViewGl.runAsync(); //capture new color color contexts via signals

          this.configForSignalCapture(config.presenterConfig);
        } catch (e) {
          specResult.errors = [e.message];
        }

        if (!specResult.errors) {
          (0, _headers.ensureHeaders)(this.presenter, this.options.language.headers);
        }
      }

      if (specResult.errors) {
        if (this.options.onError) {
          this.options.onError(specResult.errors);
        } else if (this.presenter.logger) {
          this.presenter.logger(`errors rendering Vega spec:${specResult.errors.join('\n')}`);
        }
      }

      return specResult;
    });
  }
  /**
   * Render the same layout with new options.
   * @param newViewerOptions New options object.
   */


  renderSameLayout(newViewerOptions) {
    const colorContext = this.colorContexts[this.currentColorContext];
    const clonedCubes = this.presenter.getCubeData().map(cube => {
      return Object.assign({}, cube);
    });
    this.applyLegendColorContext(colorContext);
    let {
      axes,
      textData
    } = this.presenter.stage;
    let recoloredAxes;

    if (newViewerOptions) {
      if (newViewerOptions.colors) {
        recoloredAxes = (0, _axes.recolorAxes)(this.presenter.stage, this._lastColorOptions, newViewerOptions.colors);
        axes = recoloredAxes.axes || axes;
        textData = recoloredAxes.textData || textData;
      }

      this.options = VegaDeckGl.util.deepMerge(this.options, newViewerOptions);
    }

    let colorMaps = [colorContext.colorMap];
    let colorMethod;

    const hasSelectedData = this._dataScope.hasSelectedData();

    const hasActive = !!this._dataScope.active;

    if (hasSelectedData || hasActive) {
      const selectedColorMap = (0, _colorCubes.getSelectedColorMap)(this._dataScope.currentData(), hasSelectedData, hasActive, this.options);
      colorMaps.push(selectedColorMap);
      colorMethod = this.options.colors.unselectedColorMethod;
    }

    (0, _colorCubes.applyColorMapToCubes)(colorMaps, clonedCubes, colorMethod);
    const stage = {
      cubeData: clonedCubes,
      axes,
      textData
    };
    this.vegaViewGl.presenter.rePresent(stage, this.createConfig().presenterConfig);
  }

  getView(view) {
    if (view === undefined) {
      if (this.presenter.view === null) {
        return defaultView;
      } else {
        return this.presenter.view;
      }
    } else {
      return view;
    }
  }

  transformData(values, transform) {
    try {
      const runtime = VegaDeckGl.base.vega.parse({
        $schema: 'https://vega.github.io/schema/vega/v4.json',
        data: [{
          name: 'source',
          values,
          transform
        }]
      });
      new VegaDeckGl.ViewGl(runtime).run();
    } catch (e) {// continue regardless of error
    }

    return values;
  }
  /**
   * Render data into a visualization.
   * @param insight Object to create a visualization specification.
   * @param data Array of data objects.
   * @param view Optional View to specify camera type.
   * @param ordinalMap Optional map of ordinals to assign to the data such that the same cubes can be re-used for new data.
   */


  render(insight, data, options = {}) {
    return __awaiter(this, void 0, void 0, function* () {
      let result; //see if refine expression has changed

      if (!searchExpression.compare(insight.filter, this.insight.filter)) {
        const allowAsyncRenderTime = 100;

        if (insight.filter) {
          //refining
          result = yield this._render(insight, data, options);
          this.presenter.animationQueue(() => {
            this.filter(insight.filter);
          }, allowAsyncRenderTime, {
            waitingLabel: 'layout before refine',
            handlerLabel: 'refine after layout'
          });
        } else {
          //not refining
          this._dataScope.setFilteredData(null);

          result = yield this._render(insight, data, options);
          this.presenter.animationQueue(() => {
            this.reset();
          }, allowAsyncRenderTime, {
            waitingLabel: 'layout before reset',
            handlerLabel: 'reset after layout'
          });
        }
      } else {
        result = yield this._render(insight, data, options);
      }

      return result;
    });
  }

  shouldViewstateTransition(newInsight, oldInsight) {
    if (!oldInsight.columns) return false;
    if (oldInsight.chart !== newInsight.chart) return true;
    if (oldInsight.size.height !== newInsight.size.height) return true;
    if (oldInsight.size.width !== newInsight.size.width) return true;
    if (oldInsight.columns.facet !== newInsight.columns.facet) return true;
    return false;
  }

  configForSignalCapture(presenterConfig) {
    const colorContext = {
      colorMap: null,
      legend: null,
      legendElement: null
    }; //now be ready to capture color changing signals 

    presenterConfig.preStage = (stage, deckProps) => {
      if (this._shouldSaveColorContext()) {
        //save off the colors from Vega layout
        colorContext.colorMap = (0, _colorCubes.colorMapFromCubes)(stage.cubeData);
      }

      this.preStage(stage, deckProps);
    };

    presenterConfig.onPresent = () => {
      if (this._shouldSaveColorContext()) {
        (0, _colorCubes.populateColorContext)(colorContext, this.presenter);
        this.changeColorContexts([colorContext]);

        this._dataScope.deselect();
      }
    };
  }

  _render(insight, data, options) {
    return __awaiter(this, void 0, void 0, function* () {
      if (this._tooltip) {
        this._tooltip.finalize();

        this._tooltip = null;
      }

      if (this._dataScope.setData(data, options.columns)) {
        //data is different, reset the signal value cache
        this._signalValues = {}; //apply transform to the data

        this.transformData(data, insight.transform);
      }

      this._specColumns = (0, _sanddanceSpecs.getSpecColumns)(insight, this._dataScope.getColumns(options.columnTypes));
      const ordinalMap = (0, _ordinal.assignOrdinals)(this._specColumns, data, options.ordinalMap);
      this.insight = VegaDeckGl.util.clone(insight);
      this._lastColorOptions = VegaDeckGl.util.clone(this.options.colors);

      this._shouldSaveColorContext = () => !options.initialColorContext;

      const colorContext = options.initialColorContext || {
        colorMap: null,
        legend: null,
        legendElement: null
      };
      const specResult = yield this.renderNewLayout({
        preStage: (stage, deckProps) => {
          if (this._shouldSaveColorContext()) {
            //save off the colors from Vega layout
            colorContext.colorMap = (0, _colorCubes.colorMapFromCubes)(stage.cubeData);
          } else {
            //apply passed colorContext
            (0, _colorCubes.applyColorMapToCubes)([colorContext.colorMap], VegaDeckGl.util.getCubes(deckProps));
          } //if items are selected, repaint


          const hasSelectedData = !!this._dataScope.hasSelectedData();
          const hasActive = !!this._dataScope.active;

          if (this._dataScope.hasSelectedData() || this._dataScope.active) {
            const selectedColorMap = (0, _colorCubes.getSelectedColorMap)(this._dataScope.currentData(), hasSelectedData, hasActive, this.options);
            (0, _colorCubes.applyColorMapToCubes)([colorContext.colorMap, selectedColorMap], stage.cubeData, this.options.colors.unselectedColorMethod);
          }

          this.preStage(stage, deckProps);
        },
        onPresent: () => {
          if (this._shouldSaveColorContext()) {
            (0, _colorCubes.populateColorContext)(colorContext, this.presenter);
            this.changeColorContexts([colorContext]);
          } else {
            //apply passed colorContext
            this.applyLegendColorContext(colorContext);
          }
        },
        shouldViewstateTransition: () => this.shouldViewstateTransition(insight, this.insight)
      }, this.getView(insight.view)); //future signal changes should save the color context

      this._shouldSaveColorContext = () => !options.discardColorContextUpdates || !options.discardColorContextUpdates();

      this._details.render();

      const result = {
        ordinalMap,
        specResult
      };
      return result;
    });
  }

  overrideAxisLabels(stage) {// if (this._specColumns.x && this._specColumns.x.type === 'date') {
    //     stage.axes.x.forEach(axis => makeDateRange(
    //         axis.tickText,
    //         this.getColumnStats(this._specColumns.x)
    //     ));
    // }
    // if (this._specColumns.y && this._specColumns.y.type === 'date') {
    //     stage.axes.y.forEach(axis => makeDateRange(
    //         axis.tickText,
    //         this.getColumnStats(this._specColumns.y)
    //     ));
    // }
  }

  preStage(stage, deckProps) {
    const onClick = (e, search) => {
      if (this.options.onAxisClick) {
        this.options.onAxisClick(e, search);
      } else {
        this.select(search);
      }
    };

    this.overrideAxisLabels(stage);
    const polygonLayer = (0, _axisSelection.axisSelectionLayer)(this.presenter, this.specCapabilities, this._specColumns, stage, onClick, this.options.colors.axisSelectHighlight, this.options.selectionPolygonZ);
    const order = 1; //after textlayer but before others

    deckProps.layers.splice(order, 0, polygonLayer);
    (0, _legend.finalizeLegend)(this.insight.colorBin, this._specColumns.color, stage.legend, this.options.language);

    if (this.options.onStage) {
      this.options.onStage(stage, deckProps);
    }
  }

  onCubeClick(e, cube) {
    const hasSelectedData = this._dataScope.hasSelectedData();

    if (hasSelectedData && this._dataScope.selection.included.length > 1) {
      //if active is within selection, keep the selection and activate the one.
      const indexWithinSelection = this._dataScope.ordinalIndexWithinSelection(cube.ordinal);

      if (indexWithinSelection.index >= 0) {
        this.activate(indexWithinSelection.datum);

        this._details.populate(this._dataScope.selection, indexWithinSelection.index);

        if (this.options.onSelectionChanged) {
          const sel = this.getSelection();
          this.options.onSelectionChanged(sel.search, indexWithinSelection.index, sel.selectedData);
        }

        return;
      }
    }

    if (hasSelectedData && this._dataScope.selection.included.length === 1 && this._dataScope.selection.included[0][_constants.GL_ORDINAL] === cube.ordinal) {
      this.deselect();
      return;
    }

    const search = {
      name: _constants.GL_ORDINAL,
      operator: '==',
      value: cube.ordinal
    };
    this.select(search);
  }

  onCubeHover(e, cube) {
    if (this._tooltip) {
      this._tooltip.finalize();

      this._tooltip = null;
    }

    if (!cube) {
      return;
    }

    const currentData = this._dataScope.currentData();

    const index = (0, _ordinal.getDataIndexOfCube)(cube, currentData);

    if (index >= 0) {
      this._tooltip = new _tooltip.Tooltip({
        options: this.options.tooltipOptions,
        item: currentData[index],
        position: e,
        cssPrefix: this.presenter.style.cssPrefix
      });
    }
  }

  onTextHover(e, t) {
    //return true if highlight color is different
    if (!t || !this.options.getTextColor || !this.options.getTextHighlightColor) return false;
    return !VegaDeckGl.util.colorIsEqual(this.options.getTextColor(t), this.options.getTextHighlightColor(t));
  }

  createConfig(c) {
    const {
      getTextColor,
      getTextHighlightColor,
      onTextClick
    } = this.options;
    const defaultPresenterConfig = {
      getTextColor,
      getTextHighlightColor,
      onTextClick: (e, t) => {
        if (t.metaData && t.metaData.search) {
          const search = (0, _search.getSearchGroupFromVegaValue)(t.metaData.search);

          if (this.options.onAxisClick) {
            this.options.onAxisClick(e, search);
          } else {
            this.select(search);
          }
        }

        if (onTextClick) {
          onTextClick(e, t);
        }
      },
      onCubeClick: this.onCubeClick.bind(this),
      onCubeHover: this.onCubeHover.bind(this),
      onTextHover: this.onTextHover.bind(this),
      preStage: this.preStage.bind(this),
      onPresent: this.options.onPresent,
      onLayerClick: (info, pickedInfos, e) => {
        if (!info) {
          this.deselect();
        }
      },
      onLegendClick: (e, legend, clickedIndex) => {
        const legendRow = clickedIndex !== null && legend.rows[clickedIndex];

        if (legendRow) {
          if (this.options.onLegendRowClick) {
            this.options.onLegendRowClick(e, legendRow);
          } else {
            this.select(legendRow.search);
          }
        } else if (this.options.onLegendHeaderClick) {
          //header clicked
          this.options.onLegendHeaderClick(e);
        }
      },
      onSceneRectAssignCubeOrdinal: datum => {
        //TODO see if datum is a facet selection rect
        return datum[_constants.GL_ORDINAL];
      },
      onTargetViewState: (h, w) => {
        const {
          height,
          width
        } = this.insight.size;
        let newViewStateTarget;

        if (this.options.onNewViewStateTarget) {
          newViewStateTarget = this.options.onNewViewStateTarget();
        }

        return {
          height,
          width,
          newViewStateTarget
        };
      }
    };

    if (this.options.onBeforeCreateLayers) {
      defaultPresenterConfig.preLayer = stage => this.options.onBeforeCreateLayers(stage, this.specCapabilities);
    }

    const config = {
      presenter: this.presenter,
      presenterConfig: Object.assign(defaultPresenterConfig, c)
    };

    if (this.options.transitionDurations) {
      config.presenterConfig.transitionDurations = this.options.transitionDurations;
    }

    return config;
  }
  /**
   * Filter the data and animate.
   * @param search Filter expression, see https://vega.github.io/vega/docs/expressions/
   */


  filter(search) {
    const u = this._dataScope.createUserSelection(search, false);

    return new Promise((resolve, reject) => {
      this._animator.filter(search, u.included, u.excluded).then(() => {
        this._details.clear();

        this._details.clearSelection();

        this._details.populate(this._dataScope.selection);

        resolve();
      });
    });
  }
  /**
   * Remove any filtration and animate.
   */


  reset() {
    return new Promise((resolve, reject) => {
      this._animator.reset().then(() => {
        this._details.clear();

        this._details.clearSelection();

        resolve();
      });
    });
  }
  /**
   * Select cubes by a filter expression.
   * @param search Filter expression, see https://vega.github.io/vega/docs/expressions/
   */


  select(search) {
    return new Promise((resolve, reject) => {
      this._animator.select(search).then(() => {
        this._details.populate(this._dataScope.selection);

        resolve();
      });
    });
  }
  /**
   * Removes any selection.
   */


  deselect() {
    return new Promise((resolve, reject) => {
      this._animator.deselect().then(() => {
        this._details.clearSelection();

        resolve();
      });
    });
  }
  /**
   * Gets the current selection.
   */


  getSelection() {
    if (!this._dataScope) return null;
    const selectionState = {
      search: this._dataScope.selection && this._dataScope.selection.search || null,
      selectedData: this._dataScope.selection && this._dataScope.selection.included || null,
      active: this._dataScope.active
    };
    return selectionState;
  }
  /**
   * Set one data row to the active state.
   */


  activate(datum) {
    return new Promise((resolve, reject) => {
      this._animator.activate(datum).then(() => {
        this._details.render();

        resolve();
      });
    });
  }
  /**
   * Deactivate item.
   */


  deActivate() {
    return new Promise((resolve, reject) => {
      if (this._dataScope && this._dataScope.active) {
        this._animator.deactivate().then(() => {
          this._details.render();

          resolve();
        });
      } else {
        resolve();
      }
    });
  }
  /**
   * Gets the current insight with signal values.
   */


  getInsight() {
    const insight = Object.assign({}, this.insight);
    insight.signalValues = this.getSignalValues();
    return insight;
  }
  /**
   * Gets column stats from current data (filtered or all).
   * @param column Column to get stats for.
   */


  getColumnStats(column) {
    return this._dataScope.hasFilteredData() ? this._dataScope.getFilteredColumnStats(column.name) : column.stats;
  }
  /**
   * Gets current signal values.
   */


  getSignalValues() {
    return (0, _signals.extractSignalValuesFromView)(this.vegaViewGl, this.vegaSpec);
  }

  finalize() {
    if (this._dataScope) this._dataScope.finalize();
    if (this._details) this._details.finalize();
    if (this._tooltip) this._tooltip.finalize();
    if (this.vegaViewGl) this.vegaViewGl.finalize();
    if (this.presenter) this.presenter.finalize();
    if (this.element) this.element.innerHTML = '';
    this.colorContexts = null;
    this.element = null;
    this.options = null;
    this.presenter = null;
    this.vegaSpec = null;
    this.vegaViewGl = null;
    this._animator = null;
    this._dataScope = null;
    this._details = null;
    this._tooltip = null;
  }

}
/**
 * Default Viewer options.
 */


exports.Viewer = Viewer;
Viewer.defaultViewerOptions = _defaults.defaultViewerOptions;
},{"@msrvida/search-expression":"VB4o","@msrvida/vega-deck.gl":"eFEk","./animator":"U1OZ","./colorCubes":"PfBA","./signals":"jmI2","./ordinal":"dxn8","./axisSelection":"oIzg","@msrvida/sanddance-specs":"gl1V","./dataScope":"MJ1d","./defaults":"G0Md","./details":"KCB5","./headers":"nQLz","./legend":"rI67","./search":"KytA","./constants":"Syc7","./axes":"A7xy","./colorSchemes":"kNpg","./tooltip":"bkgF"}],"DZif":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.version = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const version = '3.0.0-alpha.2';
exports.version = version;
},{}],"rZaE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "colorSchemes", {
  enumerable: true,
  get: function () {
    return _colorSchemes.colorSchemes;
  }
});
Object.defineProperty(exports, "Viewer", {
  enumerable: true,
  get: function () {
    return _viewer.Viewer;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _version.version;
  }
});
exports.VegaDeckGl = exports.util = exports.types = exports.specs = exports.searchExpression = exports.constants = exports.use = void 0;

var constants = _interopRequireWildcard(require("./constants"));

exports.constants = constants;

var searchExpression = _interopRequireWildcard(require("@msrvida/search-expression"));

exports.searchExpression = searchExpression;

var specs = _interopRequireWildcard(require("@msrvida/sanddance-specs"));

exports.specs = specs;

var types = _interopRequireWildcard(require("./types"));

exports.types = types;

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

var VegaDeckGl = _interopRequireWildcard(require("@msrvida/vega-deck.gl"));

exports.VegaDeckGl = VegaDeckGl;

var _colorSchemes = require("./colorSchemes");

var _viewer = require("./viewer");

var _version = require("./version");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const use = VegaDeckGl.use;
exports.use = use;
},{"./constants":"Syc7","@msrvida/search-expression":"VB4o","@msrvida/sanddance-specs":"gl1V","./types":"JCLk","./util":"BTLl","@msrvida/vega-deck.gl":"eFEk","./colorSchemes":"kNpg","./viewer":"CdFf","./version":"DZif"}],"wkaK":[function(require,module,exports) {
module.exports = compare;

/*
  primitives: value1 === value2
  functions: value1.toString == value2.toString
  arrays: if length, sequence and values of properties are identical
  objects: if length, names and values of properties are identical
  compare([[1, [2, 3]], [[1, [2, 3]]); // true
  compare([[1, [2, 3], 4], [[1, [2, 3]]); // false
  compare({a: 2, b: 3}, {a: 2, b: 3}); // true
  compare({a: 2, b: 3}, {b: 3, a: 2}); // true
  compare({a: 2, b: 3, c: 4}, {a: 2, b: 3}); // false
  compare({a: 2, b: 3}, {a: 2, b: 3, c: 4}); // false
  compare([[1, [2, {a: 4}], 4], [[1, [2, {a: 4}]]); // true
*/

function compare(value1, value2) {
  if (value1 === value2) {
    return true;
  }
  /* eslint-disable no-self-compare */
  // if both values are NaNs return true
  if ((value1 !== value1) && (value2 !== value2)) {
    return true;
  }
  if ({}.toString.call(value1) != {}.toString.call(value2)) {
    return false;
  }
  if (value1 !== Object(value1)) {
    // non equal primitives
    return false;
  }
  if (!value1) {
    return false;
  }
  if (Array.isArray(value1)) {
    return compareArrays(value1, value2);
  }
  if ({}.toString.call(value1) == '[object Object]') {
    return compareObjects(value1, value2);
  } else {
    return compareNativeSubtypes(value1, value2);
  }
}

function compareNativeSubtypes(value1, value2) {
  // e.g. Function, RegExp, Date
  return value1.toString() === value2.toString();
}

function compareArrays(value1, value2) {
  var len = value1.length;
  if (len != value2.length) {
    return false;
  }
  var alike = true;
  for (var i = 0; i < len; i++) {
    if (!compare(value1[i], value2[i])) {
      alike = false;
      break;
    }
  }
  return alike;
}

function compareObjects(value1, value2) {
  var keys1 = Object.keys(value1).sort();
  var keys2 = Object.keys(value2).sort();
  var len = keys1.length;
  if (len != keys2.length) {
    return false;
  }
  for (var i = 0; i < len; i++) {
    var key1 = keys1[i];
    var key2 = keys2[i];
    if (!(key1 == key2 && compare(value1[key1], value2[key2]))) {
      return false;
    }
  }
  return true;
}

},{}],"HI4Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepCompare = exports.classList = void 0;

var compare = _interopRequireWildcard(require("just-compare"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
const classList = (...args) => {
  return args.filter(Boolean).join(' ');
};

exports.classList = classList;
const deepCompare = compare.default || compare;
exports.deepCompare = deepCompare;
},{"just-compare":"wkaK"}],"N4VU":[function(require,module,exports) {
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var l = require("object-assign"),
    n = "function" === typeof Symbol && Symbol.for,
    p = n ? Symbol.for("react.element") : 60103,
    q = n ? Symbol.for("react.portal") : 60106,
    r = n ? Symbol.for("react.fragment") : 60107,
    t = n ? Symbol.for("react.strict_mode") : 60108,
    u = n ? Symbol.for("react.profiler") : 60114,
    v = n ? Symbol.for("react.provider") : 60109,
    w = n ? Symbol.for("react.context") : 60110,
    x = n ? Symbol.for("react.forward_ref") : 60112,
    y = n ? Symbol.for("react.suspense") : 60113,
    z = n ? Symbol.for("react.memo") : 60115,
    A = n ? Symbol.for("react.lazy") : 60116,
    B = "function" === typeof Symbol && Symbol.iterator;

function C(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var D = {
  isMounted: function () {
    return !1;
  },
  enqueueForceUpdate: function () {},
  enqueueReplaceState: function () {},
  enqueueSetState: function () {}
},
    E = {};

function F(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

F.prototype.isReactComponent = {};

F.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(C(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

F.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function G() {}

G.prototype = F.prototype;

function H(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

var I = H.prototype = new G();
I.constructor = H;
l(I, F.prototype);
I.isPureReactComponent = !0;
var J = {
  current: null
},
    K = Object.prototype.hasOwnProperty,
    L = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function M(a, b, c) {
  var e,
      d = {},
      g = null,
      k = null;
  if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
  var f = arguments.length - 2;
  if (1 === f) d.children = c;else if (1 < f) {
    for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];

    d.children = h;
  }
  if (a && a.defaultProps) for (e in f = a.defaultProps, f) void 0 === d[e] && (d[e] = f[e]);
  return {
    $$typeof: p,
    type: a,
    key: g,
    ref: k,
    props: d,
    _owner: J.current
  };
}

function N(a, b) {
  return {
    $$typeof: p,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === p;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var P = /\/+/g,
    Q = [];

function R(a, b, c, e) {
  if (Q.length) {
    var d = Q.pop();
    d.result = a;
    d.keyPrefix = b;
    d.func = c;
    d.context = e;
    d.count = 0;
    return d;
  }

  return {
    result: a,
    keyPrefix: b,
    func: c,
    context: e,
    count: 0
  };
}

function S(a) {
  a.result = null;
  a.keyPrefix = null;
  a.func = null;
  a.context = null;
  a.count = 0;
  10 > Q.length && Q.push(a);
}

function T(a, b, c, e) {
  var d = typeof a;
  if ("undefined" === d || "boolean" === d) a = null;
  var g = !1;
  if (null === a) g = !0;else switch (d) {
    case "string":
    case "number":
      g = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case p:
        case q:
          g = !0;
      }

  }
  if (g) return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
  g = 0;
  b = "" === b ? "." : b + ":";
  if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
    d = a[k];
    var f = b + U(d, k);
    g += T(d, f, c, e);
  } else if (null === a || "object" !== typeof a ? f = null : (f = B && a[B] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) d = d.value, f = b + U(d, k++), g += T(d, f, c, e);else if ("object" === d) throw c = "" + a, Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
  return g;
}

function V(a, b, c) {
  return null == a ? 0 : T(a, "", b, c);
}

function U(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}

function W(a, b) {
  a.func.call(a.context, b, a.count++);
}

function aa(a, b, c) {
  var e = a.result,
      d = a.keyPrefix;
  a = a.func.call(a.context, b, a.count++);
  Array.isArray(a) ? X(a, e, c, function (a) {
    return a;
  }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)), e.push(a));
}

function X(a, b, c, e, d) {
  var g = "";
  null != c && (g = ("" + c).replace(P, "$&/") + "/");
  b = R(b, g, e, d);
  V(a, aa, b);
  S(b);
}

var Y = {
  current: null
};

function Z() {
  var a = Y.current;
  if (null === a) throw Error(C(321));
  return a;
}

var ba = {
  ReactCurrentDispatcher: Y,
  ReactCurrentBatchConfig: {
    suspense: null
  },
  ReactCurrentOwner: J,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: function (a, b, c) {
    if (null == a) return a;
    var e = [];
    X(a, e, null, b, c);
    return e;
  },
  forEach: function (a, b, c) {
    if (null == a) return a;
    b = R(null, null, b, c);
    V(a, W, b);
    S(b);
  },
  count: function (a) {
    return V(a, function () {
      return null;
    }, null);
  },
  toArray: function (a) {
    var b = [];
    X(a, b, null, function (a) {
      return a;
    });
    return b;
  },
  only: function (a) {
    if (!O(a)) throw Error(C(143));
    return a;
  }
};
exports.Component = F;
exports.Fragment = r;
exports.Profiler = u;
exports.PureComponent = H;
exports.StrictMode = t;
exports.Suspense = y;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(C(267, a));
  var e = l({}, a.props),
      d = a.key,
      g = a.ref,
      k = a._owner;

  if (null != b) {
    void 0 !== b.ref && (g = b.ref, k = J.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var f = a.type.defaultProps;

    for (h in b) K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
  }

  var h = arguments.length - 2;
  if (1 === h) e.children = c;else if (1 < h) {
    f = Array(h);

    for (var m = 0; m < h; m++) f[m] = arguments[m + 2];

    e.children = f;
  }
  return {
    $$typeof: p,
    type: a.type,
    key: d,
    ref: g,
    props: e,
    _owner: k
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: w,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: v,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = M;

exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: x,
    render: a
  };
};

exports.isValidElement = O;

exports.lazy = function (a) {
  return {
    $$typeof: A,
    _ctor: a,
    _status: -1,
    _result: null
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: z,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return Z().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return Z().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return Z().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return Z().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return Z().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return Z().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return Z().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return Z().useRef(a);
};

exports.useState = function (a) {
  return Z().useState(a);
};

exports.version = "16.13.1";
},{"object-assign":"W2ED"}],"W4rj":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.production.min.js":"N4VU"}],"W2Ku":[function(require,module,exports) {
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';var f,g,h,k,l;
if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};
exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};

},{}],"KTa4":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.production.min.js":"W2Ku"}],"t7dJ":[function(require,module,exports) {
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("react"),n=require("object-assign"),r=require("scheduler");function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function vh(a,b){return"function"===typeof b?b(a):b}
function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
d)}}
var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
var ii={dehydrated:null,retryTime:0};
function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.13.1",
rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.13.1";

},{"react":"W4rj","object-assign":"W2ED","scheduler":"KTa4"}],"UiuB":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("production" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("production" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.production.min.js":"t7dJ"}],"qyfj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SandDanceReact = void 0;

var React = _interopRequireWildcard(require("react"));

var _util = require("./util");

var _reactDom = require("react-dom");

var _sanddance = require("@msrvida/sanddance");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function addNullable(insight, signalValues) {
  const withNulls = Object.assign(Object.assign({
    view: null,
    filter: null
  }, insight), {
    signalValues
  });
  return withNulls;
}

class SandDanceReact extends React.Component {
  areLayoutPropsSame() {
    const currentInsight = this.viewer.getInsight();
    const a = addNullable(currentInsight, Object.assign(Object.assign({}, this.viewer.insight.signalValues), currentInsight.signalValues));
    const b = addNullable(this.props.insight, Object.assign(Object.assign({}, a.signalValues), this.props.insight.signalValues));
    const compare = (0, _util.deepCompare)(a, b);
    return compare && this.props.data === this.lastData;
  }

  needsLayout() {
    return this.props.insight && this.props.data && !this.areLayoutPropsSame();
  }

  layout() {
    this.lastData = this.props.data;
    this.viewer.render(this.props.insight, this.props.data, this.props.renderOptions).then(renderResult => {
      //TODO: show errors if any
      //console.log('viewer render');
      this.props.onView && this.props.onView(renderResult);
    }).catch(e => {
      //console.log('viewer error');
      this.props.onError && this.props.onError(e);
    });
  }

  view() {
    const needsLayout = this.needsLayout();

    if (needsLayout) {
      this.layout();
    }
  }

  componentDidMount() {
    const element = (0, _reactDom.findDOMNode)(this.viewerDiv);
    this.viewer = new _sanddance.Viewer(element, this.props.viewerOptions);

    if (this.props.onMount) {
      if (this.props.onMount(this.viewer.presenter.getElement(_sanddance.VegaDeckGl.PresenterElement.gl))) {
        this.view();
      }
    } else {
      this.view();
    }
  }

  componentDidUpdate() {
    this.viewer.options = _sanddance.VegaDeckGl.util.deepMerge(this.viewer.options, this.props.viewerOptions);
    this.view();
  }

  componentWillUnmount() {
    this.viewer.finalize();
  }

  render() {
    return React.createElement("div", {
      className: "sanddance-ReactViewer",
      ref: div => this.viewerDiv = div
    });
  }

}

exports.SandDanceReact = SandDanceReact;
},{"react":"W4rj","./util":"HI4Z","react-dom":"UiuB","@msrvida/sanddance":"rZaE"}],"MjKu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "SandDanceReact", {
  enumerable: true,
  get: function () {
    return _viewer.SandDanceReact;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _version.version;
  }
});
exports.util = exports.SandDance = void 0;

var SandDance = _interopRequireWildcard(require("@msrvida/sanddance"));

exports.SandDance = SandDance;

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

var _viewer = require("./viewer");

var _version = require("./version");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"@msrvida/sanddance":"rZaE","./util":"HI4Z","./viewer":"qyfj","./version":"DZif"}],"Vlbn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.use = use;
exports.base = void 0;

var _sanddanceReact = require("@msrvida/sanddance-react");

var base = {
  fabric: null
};
/**
 * Specify the dependency libraries to use for rendering.
 * @param fabric Office UI Fabric React library.
 */

exports.base = base;

function use(fabric, vega, deck, layers, luma) {
  _sanddanceReact.SandDance.VegaDeckGl.use(vega, deck, layers, luma);

  base.fabric = fabric;
}
},{"@msrvida/sanddance-react":"MjKu"}],"pP3Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertToDelimited = convertToDelimited;

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function convertToDelimited(data, delimiter) {
  var fields = Object.keys(data[0]);
  var file = data.map(function (row) {
    return fields.map(function (fieldName) {
      var value = row[fieldName];

      if (typeof value === 'number') {
        return value;
      }

      if (typeof value === 'string') {
        if (value.indexOf(delimiter) >= 0) {
          return "\"".concat(value.replace(/"/g, '""'), "\"");
        } else {
          return value;
        }
      }

      return '';
    }).join(delimiter);
  });
  file.unshift(fields.join(delimiter));
  return file.join('\n');
}
},{}],"fOIZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.embedHtml = void 0;

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var embedHtml = function embedHtml(title, embed) {
  return "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>".concat(title, "</title>\n    <link rel=\"stylesheet\" type=\"text/css\"\n        href=\"https://unpkg.com/@msrvida/sanddance-embed@3.0.0-alpha.2/dist/css/sanddance-embed.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\"\n        href=\"https://unpkg.com/@msrvida/sanddance-explorer@3.0.0-alpha.2/dist/css/sanddance-explorer.css\" />\n</head>\n\n<body>\n    <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/deck.gl@6/deckgl.min.js\"></script>\n    <script src=\"https://unpkg.com/vega@5.9/build/vega.min.js\"></script>\n    <script src=\"https://unpkg.com/office-ui-fabric-react@6.204.4/dist/office-ui-fabric-react.js\"></script>\n    <script src=\"https://unpkg.com/@msrvida/sanddance-explorer@3.0.0-alpha.2/dist/umd/sanddance-explorer.js\"></script>\n    <script src=\"https://unpkg.com/@msrvida/sanddance-embed@3.0.0-alpha.2/dist/umd/sanddance-embed.js\"></script>\n\n    <div id=\"app\"></div>\n\n    ").concat(embed, "\n\n</body>\n\n</html>");
};

exports.embedHtml = embedHtml;
},{}],"hk5u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var strings = {
  appName: 'SandDance',
  bingsearch: 'Bing',
  bingsearchDescription: function bingsearchDescription(term) {
    return "Search Bing for \"".concat(term, "\"");
  },
  buttonClose: 'Close',
  buttonSelect: 'Search & Select',
  buttonColorSchemeMap: 'Map color scheme to filtered data',
  buttonColorSchemeRemap: 'Remap color to filtered data',
  buttonColorSchemeKeep: 'Keep same color scheme',
  buttonCopyToClipboard: 'Copy to clipboard',
  buttonExclude: 'Exclude',
  buttonExport: 'Export',
  buttonExportCount: function buttonExportCount(total) {
    return total == 1 ? 'Export 1 row...' : "Export ".concat(total, " rows...");
  },
  buttonIsolate: 'Isolate',
  buttonReset: 'Stop filtering',
  buttonDeselect: 'Clear selection',
  buttonToolbarFloat: 'Float toolbar',
  buttonToolbarDock: 'Dock toolbar',
  buttonToolbarHide: 'Hide toolbar',
  buttonToolbarShow: 'Show toolbar',
  buttonNextDataItem: 'Next data item',
  buttonPrevDataItem: 'Previous data item',
  buttonCreateSnapshot: 'Create snapshot',
  buttonNextSnapshot: 'Next snapshot',
  buttonPrevSnapshot: 'Previous snapshot',
  buttonUpdateSnapshot: 'Update snapshot',
  buttonAddExpression: 'Add expression',
  buttonAddExpressionGroup: 'Add group',
  buttonDeleteExpression: 'Delete',
  buttonDeleteExpressionGroup: 'Delete group',
  buttonClearSnapshots: 'Clear snapshots',
  buttonDeleteSnapshot: 'Delete snapshot',
  buttonEditSnapshot: 'Edit snapshot',
  buttonMoveUp: 'Move up',
  buttonMoveDown: 'Move down',
  buttonShowVegaSpec: 'Show Vega spec',
  buttonLaunchVegaEditor: 'Open Vega Editor',
  buttonCameraHome: 'Center chart in window',
  buttonTooltipMapping: 'Tooltip columns...',
  chartTypeBarChartH: 'Bar',
  chartTypeBarChartV: 'Column',
  chartTypeDensity: 'Density',
  chartTypeGrid: 'Grid',
  chartTypeScatterPlot: 'Scatter',
  chartTypeStacks: 'Stacks',
  chartTypeStrips: 'Strips',
  chartTypeTreeMap: 'Treemap',
  defaultFileName: 'sanddance-data',
  errorExportFilenameEmpty: 'Filename cannot be blank',
  errorExportFilenameCharacters: function errorExportFilenameCharacters(characters) {
    return "A filename cannot contain any of the following characters: ".concat(characters);
  },
  errorColumnMustBeNumeric: 'Numeric column required for this chart type.',
  labelBlank: 'blank',
  labelNull: 'null',
  labelTrue: 'true',
  labelFalse: 'false',
  labelSystemInfo: 'System info',
  labelChartSettings: 'Chart settings',
  labelDataBrowser: 'Data browser',
  labelDataScope: 'Scope',
  labelExport: 'Export Data',
  labelExportFormat: 'File format',
  labelExportCSV: '.CSV - Comma separated values',
  labelExportHTML: '.HTML - A SandDance html page embedding this data',
  labelExportJSON: '.JSON - JavaScript object notation',
  labelExportTSV: '.TSV - Tab separated values',
  labelTools: 'Tools',
  labelVegaSpec: 'Vega specification',
  labelColor: 'Chart color',
  labelError: 'Error',
  labelExportFileName: 'File name',
  labelSnapshots: 'Snapshots',
  labelSnapshotSettingThumbnailWidth: 'Thumbnail image width',
  labelSearch: 'Select by search',
  labelSearchClause: 'Clause',
  labelSearchColumn: 'Field',
  labelSearchOperator: 'Operator',
  labelSearchValue: 'Value',
  labelSearchValuePlaceholder: 'Value to search for',
  labelChart: 'Chart',
  labelChartCanvas: 'Chart canvas',
  labelColumnMapping: 'Column Mapping',
  labelChartTypeOptions: 'Chart options',
  labelColorBin: 'Color binning',
  labelColorOptions: 'Color options',
  labelColorBinExplanation: 'For numeric columns',
  labelColorFieldInfo: function labelColorFieldInfo(colorColumnName, colorColumnType, categoricalNumeric, distinctValueCount) {
    return "Field <span className=\"fieldname\">".concat(colorColumnName, "</span> is of type <span className=\"fieldtype\">").concat(colorColumnType, "</span>").concat(categoricalNumeric ? " and has ".concat(distinctValueCount, " distinct values") : '', ".");
  },
  labelColorFieldIsColorData: function labelColorFieldIsColorData(colorColumnName) {
    return "Field <span className=\"fieldname\">".concat(colorColumnName, "</span> contains direct color data.");
  },
  labelColorBinNone: 'None (continuous)',
  labelColorBinQuantize: 'Quantize',
  labelColorBinQuantile: 'Quantile',
  labelColorFilter: 'Note: Colors will be re-mapped to the filter when viewing this snapshot.',
  labelColorScheme: 'Scheme',
  labelTotal: 'Total by',
  labelTotalByCountSquare: 'Count (Grid layout)',
  labelTotalByCountStrip: 'Count (Strip layout)',
  labelTotalBySumStrip: 'Sum (Strip layout)',
  labelTotalBySumTreemap: 'Sum (Treemap layout)',
  labelTotalBySumStripPercent: 'Sum as percentage (Strip layout)',
  labelColumnColor: 'Color by',
  labelColumnFacet: 'Facet by',
  labelFacetLayout: 'Facet layout',
  labelFacetLayoutWrap: 'Wrap',
  labelFacetLayoutHorizontal: 'Horizontal',
  labelFacetLayoutVertical: 'Vertical',
  labelFacetLayoutCross: '⊞',
  labelColumnFacetV: 'Cross facet by',
  labelColumnSort: 'Sort by',
  labelColumnX: 'X Axis',
  labelColumnY: 'Y Axis',
  labelColumnZ: 'Z Axis',
  labelColumnSize: 'Size by',
  labelColumnGroup: 'Group by',
  labelAliasColor: 'Color',
  labelAliasFacet: 'Facet',
  labelAliasFacetV: 'Vertical facet',
  labelAliasSort: 'Sort',
  labelAliasX: 'X Axis',
  labelAliasY: 'Y Axis',
  labelAliasZ: 'Z Axis',
  labelAliasSize: 'Size',
  labelAliasGroup: 'Group',
  labelDataItemIsFiltered: 'Item is filtered from view',
  labelShowLegend: 'Show legend',
  labelShowAxes: 'Show axes',
  labelSnapshotTitle: 'Title',
  labelSnapshotDescription: 'Note (optional)',
  labelTooltipMapping: 'Tooltip columns',
  labelTransitionDurations: 'Transition durations',
  labelTransitionCamera: '2D / 3D view',
  labelTransitionColor: 'Color',
  labelTransitionPosition: 'Position',
  labelTransitionSize: 'Size',
  labelVegaSpecData: 'Data reference',
  labelVegaSpecNotes: 'Note: You may need to change the color scheme to make this visible in Vega.',
  labelYes: 'Yes',
  labelNo: 'No',
  labelConfirmation: 'Are you sure?',
  loading: 'Loading...',
  schemeCategorical: 'Categorical',
  schemeDiverging: 'Diverging',
  schemeDual: 'Dual',
  schemeSequentialMultiHue: 'Sequential Multi Hue',
  schemeSequentialSingleHue: 'Sequential Single Hue',
  selectDataSpanAll: 'All rows',
  selectDataSpanFilter: 'Filtered',
  selectDataSpanSelection: 'Selected',
  selectVegaSpecDataNone: 'None',
  selectVegaSpecDataInline: 'Inline - WARNING this may use substantial browser/clipboard memory for large data sets.',
  selectVegaSpecDataUrl: 'URL',
  record: function record(current, total) {
    return "".concat(current, " of ").concat(total);
  },
  searchEQ: '=',
  searchNEQ: '<>',
  searchGT: '>',
  searchGTE: '>=',
  searchLT: '<',
  searchLTE: '<=',
  searchNULL: 'is null or empty',
  searchIN: 'contains',
  searchSW: 'starts with',
  searchWHERE: 'Where',
  searchAND: 'and',
  searchOR: 'or',
  selectAny: '-- any --',
  selectNone: '-- none --',
  selectNumeric: 'Numeric',
  selectNonNumeric: 'Categorical',
  selectDirectColor: 'Direct color',
  selectReference: 'Column mappings',
  tooltipSearch: function tooltipSearch(column, value) {
    return "Click to search in '".concat(column, "' for \"").concat(value, "\"");
  },
  labelRequired: 'required',
  labelSystem: 'System',
  lavelViewType2d: 'View in 2D',
  labelViewType3d: 'View in 3D',
  labelDataColors: 'Enabled if this data column contains any CSS color values.',
  labelDataNullAll: 'Loading data...',
  labelDataNullFiltered: 'You can filter by first making a selection, then choosing <b>Isolate</b> or <b>Exclude</b> in the top bar.',
  labelDataNullSelection: 'You can select by: <ul><li>clicking the chart axes</li><li>clicking in the legend</li><li>searching</li</ul>',
  labelZeroAll: 'Dataset contains zero rows.',
  labelZeroSearchResults: 'No rows matched your search.',
  signalGroups: [{
    prefix: 'Chart',
    label: 'Chart options'
  }, {
    prefix: 'Mark',
    label: 'Mark options'
  }, {
    prefix: 'RoleColor',
    label: 'Color options'
  }, {
    prefix: 'RoleFacet',
    label: 'Facet options'
  }, {
    prefix: 'RoleSort',
    label: 'Sort options'
  }, {
    prefix: 'RoleX',
    label: 'X axis options'
  }, {
    prefix: 'RoleY',
    label: 'Y axis options'
  }, {
    prefix: 'RoleZ',
    label: 'Z axis options'
  }, {
    prefix: 'Text',
    label: 'Text options'
  }, {
    prefix: '*',
    label: 'Options'
  }]
};
exports.strings = strings;
},{}],"l7po":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeExtensions = removeExtensions;
exports.getEmbedHTML = getEmbedHTML;
exports.DataExportPicker = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _exportDelimited = require("../exportDelimited");

var _dataExporterHtml = require("./dataExporterHtml");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var exportTypes = [['json', _language.strings.labelExportJSON], ['csv', _language.strings.labelExportCSV], ['tsv', _language.strings.labelExportTSV], ['html', _language.strings.labelExportHTML]];

var DataExportPicker =
/*#__PURE__*/
function (_React$Component) {
  _inherits(DataExportPicker, _React$Component);

  function DataExportPicker(props) {
    var _this;

    _classCallCheck(this, DataExportPicker);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataExportPicker).call(this, props));
    _this.state = _this.getInitialState(_this.props);
    return _this;
  }

  _createClass(DataExportPicker, [{
    key: "getInitialState",
    value: function getInitialState(props) {
      var initialState = {
        initializer: props.initializer,
        dialogHidden: true,
        exportType: exportTypes[0][0],
        fileName: props.initializer.fileName,
        fileNameError: '',
        working: false
      };
      return initialState;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!_sanddanceReact.util.deepCompare(this.props.initializer, this.state.initializer)) {
        this.setState(this.getInitialState(this.props));
      }
    } // Converts to dataExport type and calls dataExportHandler to deal with data

  }, {
    key: "createExport",
    value: function createExport(exportType, displayName) {
      var _this2 = this;

      var final = function final(data) {
        _this2.props.dataExportHandler(data, exportType, displayName);

        _this2.close();
      };

      var json = JSON.stringify(this.props.data, columnReplacer);

      switch (exportType) {
        case 'json':
          {
            final(json);
            break;
          }

        case 'csv':
          {
            final((0, _exportDelimited.convertToDelimited)(JSON.parse(json), ','));
            break;
          }

        case 'tsv':
          {
            final((0, _exportDelimited.convertToDelimited)(JSON.parse(json), '\t'));
            break;
          }

        case 'html':
          {
            var csv = (0, _exportDelimited.convertToDelimited)(JSON.parse(json), ',');
            var html = (0, _dataExporterHtml.embedHtml)("".concat(_language.strings.appName, " - ").concat(escape(displayName)), embedScript(csv, displayName));
            final(html);
          }
      }
    }
  }, {
    key: "close",
    value: function close() {
      this.setState({
        dialogHidden: true,
        working: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var closeDialog = function closeDialog() {
        return _this3.close();
      };

      if (this.state.delayAction) {
        requestAnimationFrame(function () {
          //allow render to complete
          if (_this3.state.delayAction) {
            _this3.state.delayAction();

            _this3.setState({
              delayAction: null
            });
          }
        });
      }

      var disabled = this.state.working || this.state.dialogHidden;
      return React.createElement("div", {
        className: "sanddance-dataExporter"
      }, React.createElement(_base.base.fabric.DefaultButton, {
        className: "search-action search-bottom-action",
        text: _language.strings.buttonExportCount(this.props.data.length),
        onClick: function onClick() {
          return _this3.setState({
            dialogHidden: false
          });
        },
        disabled: this.props.disabled
      }), React.createElement(_base.base.fabric.Dialog, {
        hidden: this.state.dialogHidden,
        onDismiss: closeDialog,
        dialogContentProps: {
          className: "sanddance-dialog ".concat(this.props.theme),
          type: _base.base.fabric.DialogType.normal,
          title: _language.strings.labelExport
        }
      }, React.createElement(_base.base.fabric.TextField, {
        label: _language.strings.labelExportFileName,
        onChange: function onChange(e, displayName) {
          var displayNameError = getFileNameError(displayName);

          _this3.setState({
            fileName: displayName,
            fileNameError: displayNameError
          });
        },
        errorMessage: this.state.fileNameError,
        value: this.state.fileName
      }), React.createElement(_base.base.fabric.ChoiceGroup, {
        className: "sanddance-form-separate",
        disabled: disabled,
        options: exportTypes.map(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              exportType = _ref2[0],
              text = _ref2[1];

          return {
            key: exportType,
            text: text,
            disabled: false,
            checked: exportType === _this3.state.exportType
          };
        }),
        onChange: function onChange(ev, option) {
          return _this3.setState({
            exportType: option.key
          });
        },
        label: _language.strings.labelExportFormat
      }), React.createElement(_base.base.fabric.DialogFooter, null, React.createElement(_base.base.fabric.PrimaryButton, {
        disabled: disabled || !!this.state.fileNameError,
        onClick: function onClick(e) {
          return _this3.setState({
            delayAction: function delayAction() {
              return _this3.createExport(_this3.state.exportType, _this3.state.fileName);
            },
            working: true
          });
        },
        text: _language.strings.buttonExport
      }), React.createElement(_base.base.fabric.DefaultButton, {
        onClick: closeDialog,
        text: _language.strings.buttonClose
      }))));
    }
  }]);

  return DataExportPicker;
}(React.Component);

exports.DataExportPicker = DataExportPicker;
var illegalChars = '\\/:*?"<>|';

function getFileNameError(displayName) {
  if (!displayName) {
    return _language.strings.errorExportFilenameEmpty;
  }

  for (var i = 0; i < illegalChars.length; i++) {
    if (displayName.indexOf(illegalChars[i]) >= 0) {
      return _language.strings.errorExportFilenameCharacters(illegalChars);
    }
  }
}

function removeExtensions(fileName) {
  exportTypes.forEach(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 1),
        exportType = _ref4[0];

    var re = new RegExp("\\.".concat(exportType), 'ig');
    fileName = fileName.replace(re, '');
  });
  return fileName;
}

function columnReplacer(name, value) {
  if (_sanddanceReact.SandDance.util.isInternalFieldName(name, true)) {
    return undefined;
  }

  return value === null ? '' : value;
}

function embedScript(csv, displayName, snapshots) {
  var dataFile = {
    type: 'csv',
    displayName: displayName,
    snapshots: snapshots
  };
  return "<pre id='csv-data' style='display:none'>".concat(csv, "</pre>\n    <script>SandDanceEmbed.load(Object.assign({rawText: document.getElementById('csv-data').innerText}, ").concat(JSON.stringify(dataFile), "))</script>");
}

function getEmbedHTML(data, displayName, snapshots) {
  var json = JSON.stringify(data, columnReplacer);
  var csv = (0, _exportDelimited.convertToDelimited)(JSON.parse(json), ',');
  var html = (0, _dataExporterHtml.embedHtml)("".concat(_language.strings.appName, " - ").concat(escape(displayName)), embedScript(csv, displayName, snapshots));
  return html;
}
},{"react":"ccIB","../base":"Vlbn","../exportDelimited":"pP3Y","./dataExporterHtml":"fOIZ","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"h2T5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SideTabId = void 0;
var SideTabId;
exports.SideTabId = SideTabId;

(function (SideTabId) {
  SideTabId[SideTabId["ChartType"] = 0] = "ChartType";
  SideTabId[SideTabId["Data"] = 1] = "Data";
  SideTabId[SideTabId["Search"] = 2] = "Search";
  SideTabId[SideTabId["Color"] = 3] = "Color";
  SideTabId[SideTabId["Snapshots"] = 4] = "Snapshots";
  SideTabId[SideTabId["Settings"] = 5] = "Settings";
  SideTabId[SideTabId["Pin"] = 6] = "Pin";
  SideTabId[SideTabId["Collapse"] = 7] = "Collapse";
})(SideTabId || (exports.SideTabId = SideTabId = {}));
},{}],"Dryx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCanvas = getCanvas;
exports.removeTabIndex = removeTabIndex;
exports.capabilities = void 0;

var _sanddanceReact = require("@msrvida/sanddance-react");

var PresenterElement = _sanddanceReact.SandDance.VegaDeckGl.PresenterElement;

function getCanvas(viewer) {
  var tags = viewer.presenter.getElement(PresenterElement.gl).getElementsByTagName('canvas');

  if (tags) {
    return tags[0];
  }
}

function removeTabIndex(viewer) {
  var canvas = getCanvas(viewer);

  if (canvas) {
    canvas.tabIndex = -1;
  }
}

var capabilities = {
  webgl: !!document.createElement('canvas').getContext('webgl'),
  webgl2: !!document.createElement('canvas').getContext('webgl2')
};
exports.capabilities = capabilities;
},{"@msrvida/sanddance-react":"MjKu"}],"CgE3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColorSettingsFromThemePalette = getColorSettingsFromThemePalette;
exports.themePalettes = void 0;
var themePalettes = {};
exports.themePalettes = themePalettes;
themePalettes[''] = {
  themePrimary: '#0078d4',
  themeLighterAlt: '#eff6fc',
  themeLighter: '#deecf9',
  themeLight: '#c7e0f4',
  themeTertiary: '#71afe5',
  themeSecondary: '#2b88d8',
  themeDarkAlt: '#106ebe',
  themeDark: '#005a9e',
  themeDarker: '#004578',
  neutralLighterAlt: '#f8f8f8',
  neutralLighter: '#f4f4f4',
  neutralLight: '#eaeaea',
  neutralQuaternaryAlt: '#dadada',
  neutralQuaternary: '#d0d0d0',
  neutralTertiaryAlt: '#c8c8c8',
  neutralTertiary: '#c2c2c2',
  neutralSecondary: '#858585',
  neutralPrimaryAlt: '#4b4b4b',
  neutralPrimary: '#333333',
  neutralDark: '#272727',
  black: '#1d1d1d',
  white: '#ffffff'
};
themePalettes['dark-theme'] = {
  themePrimary: '#00b4f0',
  themeLighterAlt: '#00070a',
  themeLighter: '#001d26',
  themeLight: '#003648',
  themeTertiary: '#006c90',
  themeSecondary: '#009ed3',
  themeDarkAlt: '#18bbf1',
  themeDark: '#3ac5f3',
  themeDarker: '#6cd4f6',
  neutralLighterAlt: '#0b0b0b',
  neutralLighter: '#151515',
  neutralLight: '#252525',
  neutralQuaternaryAlt: '#2f2f2f',
  neutralQuaternary: '#373737',
  neutralTertiaryAlt: '#595959',
  neutralTertiary: '#929292',
  neutralSecondary: '#a7a7a7',
  neutralPrimaryAlt: '#b4b4b4',
  neutralPrimary: '#cccccc',
  neutralDark: '#d8d8d8',
  black: '#f5f5f5',
  white: '#000000'
};

function getColorSettingsFromThemePalette(themePalette) {
  return {
    axisLine: themePalette.black,
    axisText: themePalette.black,
    hoveredCube: themePalette.black,
    clickableText: themePalette.themeDark,
    clickableTextHighlight: themePalette.themeSecondary,
    searchText: themePalette.neutralPrimary,
    searchTextHighlight: themePalette.neutralPrimaryAlt
  };
}
},{}],"dH6z":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.production.min.js":"W2Ku"}],"MtQn":[function(require,module,exports) {
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("react"),n=require("object-assign"),r=require("scheduler");function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function vh(a,b){return"function"===typeof b?b(a):b}
function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
d)}}
var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
var ii={dehydrated:null,retryTime:0};
function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.13.1",
rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.13.1";

},{"react":"ccIB","object-assign":"W2ED","scheduler":"dH6z"}],"x9tB":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("production" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("production" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.production.min.js":"MtQn"}],"dQNc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconButton = IconButton;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function IconButton(props) {
  return React.createElement(_base.base.fabric.IconButton, Object.assign({}, props, {
    styles: {
      rootHovered: {
        color: props.themePalette.themePrimary
      },
      menuIcon: {
        display: 'none'
      }
    },
    iconProps: {
      iconName: props.iconName
    },
    menuProps: props.menuProps
  }));
}
},{"react":"ccIB","../base":"Vlbn"}],"E67y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applyColorButtons = applyColorButtons;

var React = _interopRequireWildcard(require("react"));

var ReactDOM = _interopRequireWildcard(require("react-dom"));

var _iconButton = require("./controls/iconButton");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("./language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var className = 'sanddance-panel-tools';

function ensureToolbar(panel) {
  var existing = panel.getElementsByClassName(className);

  if (existing.length > 0) {
    return existing[0];
  } else {
    var div = _sanddanceReact.SandDance.VegaDeckGl.util.addDiv(panel, className);

    panel.insertAdjacentElement('afterbegin', div);
    return div;
  }
}

function applyColorButtons(presenter, showLegend, props) {
  var panel = presenter.getElement(_sanddanceReact.SandDance.VegaDeckGl.PresenterElement.panel);
  var div = ensureToolbar(panel);
  ReactDOM.render(ColorMap(props), div);
  panel.style.display = showLegend ? '' : 'none';
}

function ColorMap(props) {
  var menuProps = {
    items: [{
      key: 'new',
      text: _language.strings.buttonColorSchemeRemap,
      disabled: !props.canRemap || props.isRemap,
      onClick: function onClick() {
        return props.colorMapHandler(true);
      }
    }, {
      key: 'old',
      text: _language.strings.buttonColorSchemeKeep,
      disabled: !props.canRemap || !props.isRemap,
      onClick: function onClick() {
        return props.colorMapHandler(false);
      }
    }]
  };
  return React.createElement("div", null, React.createElement(_iconButton.IconButton, {
    themePalette: props.themePalette,
    title: _language.strings.buttonColorSchemeMap,
    onClick: null,
    iconName: props.canRemap ? 'FiltersSolid' : 'Filters',
    menuProps: menuProps
  }));
}
},{"react":"ccIB","react-dom":"x9tB","./controls/iconButton":"dQNc","@msrvida/sanddance-react":"MjKu","./language":"hk5u"}],"L8O2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bestColorScheme = bestColorScheme;

function bestColorScheme(newColumn, oldColumn, oldScheme) {
  if (oldColumn && oldColumn.quantitative === newColumn.quantitative && defaultColorScheme(oldColumn) === defaultColorScheme(newColumn)) {
    return oldScheme;
  }

  return defaultColorScheme(newColumn);
}

function defaultColorScheme(c) {
  if (c.quantitative) {
    return 'redyellowgreen';
  } else if (c.stats.distinctValueCount === 2) {
    return 'dual_redgreen';
  } else if (c.stats.distinctValueCount <= 10) {
    return 'category10';
  }

  return 'category20';
}
},{}],"Uyrp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dropdown = Dropdown;
exports.dropdownWidth = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var dropdownWidth = 200;
exports.dropdownWidth = dropdownWidth;

function Dropdown(props) {
  var newProps = Object.assign({}, props);
  var selectedKey = null;

  if (newProps.options && newProps.options.length > 1) {
    var selectedOptions = newProps.options.filter(function (option) {
      return option.selected;
    });

    if (selectedOptions && selectedOptions.length > 0) {
      selectedKey = selectedOptions[0].key;
    }
  }

  if (newProps.collapseLabel) {
    newProps.onRenderTitle = function (a, b) {
      return React.createElement("span", null, newProps.label, ": ", a[0].text);
    };
  }

  return React.createElement(_base.base.fabric.Dropdown, Object.assign({
    dropdownWidth: dropdownWidth
  }, newProps, {
    label: newProps.collapseLabel ? null : newProps.label,
    selectedKey: selectedKey
  }));
}
},{"react":"ccIB","../base":"Vlbn"}],"OWDI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Signal = Signal;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Signal(props) {
  if (!props.explorer.viewer || !props.signal) {
    return null;
  }

  if (props.signal.bind) {
    var input = props.signal.bind.input;

    if (input) {
      var fn = map[input];

      if (fn) {
        var prefix = props.prefix ? "".concat(props.prefix, " ") : '';
        var initialValue;

        try {
          initialValue = props.explorer.viewer.vegaViewGl.signal(props.signal.name);
        } catch (error) {// continue regardless of error
        }

        var control = fn(prefix, props.signal.bind, initialValue, function (value) {
          props.onChange && props.onChange(value);
          props.explorer.signal(props.signal.name, value, props.newViewStateTarget);
        }, props.disabled, props.collapseLabel);
        return React.createElement("div", {
          className: "sanddance-signal"
        }, control);
      }
    }
  }

  return null;
}

var map = {};

map['range'] = function (prefix, bind, initialValue, onChange, disabled, collapseLabel) {
  return React.createElement(_base.base.fabric.Slider, {
    label: prefix + bind.name,
    max: bind.max,
    min: bind.min,
    step: bind.step,
    value: initialValue,
    onChange: onChange,
    disabled: disabled
  });
};

map['select'] = function (prefix, bind, initialValue, _onChange, disabled, collapseLabel) {
  var options = bind.options.map(function (o, i) {
    var option = {
      key: o,
      text: o
    };
    return option;
  });
  var label = prefix + bind.name;
  return React.createElement(_base.base.fabric.Dropdown, {
    onRenderTitle: collapseLabel ? function (a, b) {
      return React.createElement("span", null, label, ": ", a[0].text);
    } : undefined,
    defaultSelectedKey: initialValue,
    label: collapseLabel ? undefined : label,
    options: options,
    onChange: function onChange(e, o) {
      return _onChange(o.text);
    },
    disabled: disabled
  });
};

map['checkbox'] = function (prefix, bind, initialValue, _onChange2, disabled, collapseLabel) {
  return React.createElement(_base.base.fabric.Toggle, {
    defaultChecked: initialValue,
    label: prefix + bind.name,
    onChange: function onChange(e, checked) {
      return _onChange2(checked);
    },
    disabled: disabled
  });
}; //TODO other signal types
},{"react":"ccIB","../base":"Vlbn"}],"DSho":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getColumnMapOptions = getColumnMapOptions;
exports.ColumnMap = ColumnMap;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _dropdown = require("./dropdown");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _signal = require("./signal");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var maxFacets = 50;
var roleLabels = {
  color: _language.strings.labelColumnColor,
  facet: _language.strings.labelColumnFacet,
  facetV: _language.strings.labelColumnFacetV,
  group: _language.strings.labelColumnGroup,
  size: _language.strings.labelColumnSize,
  sort: _language.strings.labelColumnSort,
  uid: null,
  x: _language.strings.labelColumnX,
  y: _language.strings.labelColumnY,
  z: _language.strings.labelColumnZ
};
var aliasLabels = {
  color: _language.strings.labelAliasColor,
  facet: _language.strings.labelAliasFacet,
  facetV: _language.strings.labelAliasFacetV,
  group: _language.strings.labelAliasGroup,
  size: _language.strings.labelAliasSize,
  sort: _language.strings.labelAliasSort,
  uid: null,
  x: _language.strings.labelAliasX,
  y: _language.strings.labelAliasY,
  z: _language.strings.labelAliasZ
};

function filterColumnList(context, columns) {
  switch (context) {
    case 'facet':
    case 'facetV':
      return columns.filter(function (column) {
        return column.quantitative || column.stats.distinctValueCount && column.stats.distinctValueCount < maxFacets;
      });

    default:
      return columns.slice();
  }
}

function optionsForSpecColumn(sectionName, columns, role, disabledColumnName, selectedColumnName) {
  var filtered = filterColumnList(role, columns);
  var options = filtered.map(function (column) {
    var option = {
      key: "column:".concat(column.name),
      text: column.name,
      data: column,
      selected: selectedColumnName === column.name,
      disabled: disabledColumnName === column.name
    };
    return option;
  });

  if (options.length) {
    var option = {
      key: sectionName,
      text: sectionName,
      itemType: _base.base.fabric.DropdownMenuItemType.Header
    };
    options.unshift(option);
  }

  return options;
}

function optionsForReference(sectionName, specRoles) {
  var options = specRoles.map(function (specRole) {
    var option = {
      key: "role:".concat(specRole.role),
      text: aliasLabels[specRole.role],
      data: specRole.role
    };
    return option;
  }).sort(function (a, b) {
    return a.text.localeCompare(b.text);
  });

  if (options.length) {
    var option = {
      key: sectionName,
      text: sectionName,
      itemType: _base.base.fabric.DropdownMenuItemType.Header
    };
    options.unshift(option);
  }

  return options;
}

function selectFirst(options) {
  for (var i = 0; i < options.length; i++) {
    if (options[i].itemType === _base.base.fabric.DropdownMenuItemType.Header) continue;
    options[i].selected = true;
    return;
  }
}

function getColumnMapOptions(props) {
  if (!props.specRole) return null;
  var categoricalColumns;
  var directColorColumns;
  var directColorGroup;
  var referenceGroup = [];

  if (props.specRole.role === 'color') {
    categoricalColumns = props.categoricalColumns.filter(function (c) {
      return !c.isColorData;
    });
    directColorColumns = props.categoricalColumns.filter(function (c) {
      return c.isColorData;
    });
    directColorGroup = optionsForSpecColumn(_language.strings.selectDirectColor, directColorColumns, 'color', props.disabledColumnName, props.selectedColumnName);
  } else {
    categoricalColumns = props.categoricalColumns;
  }

  if (props.specRole.role === 'sort') {
    var others = props.specCapabilities.roles.filter(function (specRole) {
      return specRole.role !== props.specRole.role;
    });
    referenceGroup = optionsForReference(_language.strings.selectReference, others);
  }

  var quantitativeGroup = optionsForSpecColumn(_language.strings.selectNumeric, props.quantitativeColumns, props.specRole.role, props.disabledColumnName, props.selectedColumnName);
  var categoricGroup = props.specRole.excludeCategoric ? null : optionsForSpecColumn(_language.strings.selectNonNumeric, categoricalColumns, props.specRole.role, props.disabledColumnName, props.selectedColumnName);
  var options = referenceGroup.concat(quantitativeGroup).concat(categoricGroup).concat(directColorGroup).filter(Boolean);
  return options;
}

function ColumnMap(props) {
  var options = getColumnMapOptions(props);

  if (props.specRole.allowNone) {
    options.unshift({
      key: -1,
      text: _language.strings.selectNone
    });
  }

  var hasSelection = options.reduce(function (p, c) {
    return p || c.selected;
  }, false);

  if (!hasSelection) {
    selectFirst(options);
  }

  var signals;

  if (props.explorer.viewer && props.explorer.viewer.vegaSpec) {
    if (props.specRole.signals) {
      signals = props.explorer.viewer.vegaSpec.signals.filter(function (s) {
        return props.specRole.signals.indexOf(s.name) >= 0;
      });
    }
  }

  var label = roleLabels[props.specRole.role];
  var signalElements = !props.hideSignals && signals && signals.map(function (signal, i) {
    return React.createElement(_signal.Signal, {
      key: i,
      explorer: props.explorer,
      signal: signal,
      onChange: function onChange(value) {
        return props.onChangeSignal && props.onChangeSignal(signal.name, value);
      },
      collapseLabel: props.collapseLabel
    });
  });
  return React.createElement("div", {
    className: "sanddance-columnMap"
  }, props.prefix, !props.hideDropdown && React.createElement(_dropdown.Dropdown, {
    componentRef: props.componentRef,
    collapseLabel: props.collapseLabel,
    disabled: props.disabled,
    label: label,
    options: options,
    onChange: function onChange(e, o) {
      return props.changeColumnMapping(props.specRole.role, typeof o.data === 'string' ? o.data : _sanddanceReact.SandDance.VegaDeckGl.util.clone(o.data));
    },
    onDismiss: props.onDismiss
  }), signalElements, props.suffix);
}
},{"react":"ccIB","../base":"Vlbn","./dropdown":"Uyrp","@msrvida/sanddance-react":"MjKu","./signal":"OWDI","../language":"hk5u"}],"cFWm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dialog = Dialog;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Dialog(props) {
  return React.createElement(_base.base.fabric.Dialog, Object.assign({}, props, {
    dialogContentProps: {
      type: _base.base.fabric.DialogType.normal,
      title: props.title
    }
  }), props.children, React.createElement(_base.base.fabric.DialogFooter, null, props.buttons, React.createElement(_base.base.fabric.DefaultButton, {
    onClick: props.onDismiss,
    text: _language.strings.buttonClose
  })));
}
},{"react":"ccIB","../base":"Vlbn","../language":"hk5u"}],"Q3hf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Group = Group;

var React = _interopRequireWildcard(require("react"));

var _sanddanceReact = require("@msrvida/sanddance-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Group(props) {
  return React.createElement("div", {
    className: _sanddanceReact.util.classList('sanddance-group', props.className)
  }, React.createElement("div", {
    className: "group-head"
  }, React.createElement("label", null, props.label), props.labelCount && React.createElement("span", {
    className: "count"
  }, "(", props.labelCount, ")")), props.children && React.createElement("div", {
    className: "group-body"
  }, props.children));
}
},{"react":"ccIB","@msrvida/sanddance-react":"MjKu"}],"ZOmP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleColumns = ToggleColumns;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function ToggleColumns(props) {
  return React.createElement("div", null, props.allColumns.map(function (c, i) {
    return React.createElement("div", {
      key: c.name
    }, React.createElement("label", null, React.createElement(_base.base.fabric.Toggle, {
      checked: props.exclusions.indexOf(c.name) < 0,
      inlineLabel: true,
      label: c.name,
      onChange: function onChange() {
        return props.toggleExclusion(c.name);
      }
    })));
  }));
}
},{"react":"ccIB","../base":"Vlbn"}],"NGSt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chart = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _columnMap = require("../controls/columnMap");

var _dialog = require("../controls/dialog");

var _dropdown = require("../controls/dropdown");

var _group = require("../controls/group");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _signal = require("../controls/signal");

var _language = require("../language");

var _toggleColumns = require("../controls/toggleColumns");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var singleFacetLayouts = [{
  facetStyle: 'wrap',
  text: _language.strings.labelFacetLayoutWrap
}, {
  facetStyle: 'horizontal',
  text: _language.strings.labelFacetLayoutHorizontal
}, {
  facetStyle: 'vertical',
  text: _language.strings.labelFacetLayoutVertical
}];

var Chart =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Chart, _React$Component);

  function Chart(props) {
    var _this;

    _classCallCheck(this, Chart);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));
    _this.state = {
      showTooltipDialog: false
    };
    return _this;
  }

  _createClass(Chart, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var props = this.props;
      var explorer = props.explorer,
          specCapabilities = props.specCapabilities;
      var signals = explorer.viewer && explorer.viewer.vegaSpec && specCapabilities && specCapabilities.signals && explorer.viewer.vegaSpec.signals.filter(function (s) {
        return specCapabilities.signals.indexOf(s.name) >= 0;
      });
      return React.createElement("div", null, React.createElement(_group.Group, {
        label: _language.strings.labelChart
      }, React.createElement("div", {
        className: "calculator"
      }, React.createElement(_base.base.fabric.ChoiceGroup, {
        className: "sanddance-chart-type",
        options: [{
          key: 'grid',
          text: _language.strings.chartTypeGrid
        }, {
          key: 'scatterplot',
          text: _language.strings.chartTypeScatterPlot
        }, {
          key: 'density',
          text: _language.strings.chartTypeDensity
        }, {
          key: 'barchartV',
          text: _language.strings.chartTypeBarChartV
        }, {
          key: 'barchartH',
          text: _language.strings.chartTypeBarChartH
        }, {
          key: 'treemap',
          text: _language.strings.chartTypeTreeMap
        }, {
          key: 'strips',
          text: _language.strings.chartTypeStrips
        }, {
          key: 'stacks',
          text: _language.strings.chartTypeStacks
        }].map(function (o) {
          return Object.assign(Object.assign({}, o), {
            checked: props.chart === o.key,
            disabled: props.disabled || o.key === 'treemap' && props.quantitativeColumns.length === 0
          });
        }),
        onChange: function onChange(e, o) {
          return props.onChangeChartType(o.key);
        }
      }))), React.createElement(_group.Group, {
        label: _language.strings.labelColumnMapping
      }, React.createElement("div", null, specCapabilities && specCapabilities.roles.map(function (specRole, i) {
        var specColumnInRole = props.insightColumns[specRole.role];
        var selectedColumnName = specColumnInRole;
        var disabledColumnName;
        var prefix;
        var suffix;
        var hideDropdown = false;
        var totalStyle = props.totalStyle;

        if (!totalStyle) {
          totalStyle = 'count-square';
        }

        var facetStyle = props.facetStyle;

        if (!facetStyle) {
          facetStyle = 'wrap';
        }

        switch (specRole.role) {
          case 'facet':
            {
              suffix = React.createElement(_dropdown.Dropdown, {
                disabled: !props.insightColumns.facet,
                collapseLabel: props.collapseLabels,
                label: _language.strings.labelFacetLayout,
                calloutProps: {
                  style: {
                    minWidth: '18em'
                  }
                },
                options: [{
                  key: 'header1',
                  text: "".concat(_language.strings.labelFacetLayout, ":"),
                  itemType: _base.base.fabric.DropdownMenuItemType.Header
                }].concat(_toConsumableArray(singleFacetLayouts.map(function (f) {
                  var o = {
                    key: f.facetStyle,
                    text: f.text,
                    data: f,
                    selected: facetStyle === f.facetStyle
                  };
                  return o;
                })), [{
                  key: 'divider',
                  text: '-',
                  itemType: _base.base.fabric.DropdownMenuItemType.Divider
                }, {
                  key: 'header2',
                  text: "".concat(_language.strings.labelColumnFacetV, ":"),
                  itemType: _base.base.fabric.DropdownMenuItemType.Header
                }], _toConsumableArray((0, _columnMap.getColumnMapOptions)(Object.assign(Object.assign({}, props), {
                  specRole: specRole,
                  selectedColumnName: props.insightColumns.facetV
                })).map(function (o) {
                  if (o.itemType !== _base.base.fabric.DropdownMenuItemType.Header) {
                    var facetData = {
                      facetStyle: 'cross',
                      column: o.data
                    };
                    o.data = facetData;
                    o.text = "".concat(_language.strings.labelFacetLayoutCross, " ").concat(o.text);
                  }

                  return o;
                }))),
                onChange: function onChange(e, o) {
                  var facetData = o.data;
                  props.changeColumnMapping('facet', 'facet', {
                    facetStyle: facetData.facetStyle
                  });

                  if (facetData.facetStyle === 'cross') {
                    props.changeColumnMapping('facetV', _sanddanceReact.SandDance.VegaDeckGl.util.clone(facetData.column));
                  }
                }
              });
              break;
            }

          case 'facetV':
            {
              hideDropdown = true;
              break;
            }

          case 'size':
            {
              var options = [{
                key: 'count-square',
                text: _language.strings.labelTotalByCountSquare,
                data: 'count-square',
                selected: !totalStyle || totalStyle === 'count-square'
              }, {
                key: 'count-strip',
                text: _language.strings.labelTotalByCountStrip,
                data: 'count-strip',
                selected: totalStyle === 'count-strip'
              }, {
                key: 'sum-strip',
                text: _language.strings.labelTotalBySumStrip,
                data: 'sum-strip',
                selected: totalStyle === 'sum-strip'
              }, {
                key: 'sum-treemap',
                text: _language.strings.labelTotalBySumTreemap,
                data: 'sum-treemap',
                selected: totalStyle === 'sum-treemap',
                disabled: props.quantitativeColumns.length === 0
              }];

              if (specCapabilities.percentage) {
                options.push({
                  key: 'sum-strip-percent',
                  text: _language.strings.labelTotalBySumStripPercent,
                  data: 'sum-strip-percent',
                  selected: totalStyle === 'sum-strip-percent',
                  disabled: props.quantitativeColumns.length === 0
                });
              }

              prefix = !specCapabilities.countsAndSums ? null : React.createElement(_dropdown.Dropdown, {
                collapseLabel: props.collapseLabels,
                label: _language.strings.labelTotal,
                calloutProps: {
                  style: {
                    minWidth: '18em'
                  }
                },
                options: options,
                onChange: function onChange(e, o) {
                  return props.changeColumnMapping('size', 'size', {
                    totalStyle: o.data
                  });
                }
              });
              break;
            }
        }

        var disabled = props.disabled || props.view === '2d' && specRole.role === 'z' || specRole.role === 'size' && !(!specCapabilities.countsAndSums || totalStyle.indexOf('sum-') === 0) || specRole.role === 'sort' && specCapabilities.countsAndSums && totalStyle === 'sum-treemap';
        return React.createElement(_columnMap.ColumnMap, Object.assign({}, props, {
          prefix: prefix,
          suffix: suffix,
          collapseLabel: props.collapseLabels,
          disabled: disabled,
          disabledColumnName: disabledColumnName,
          selectedColumnName: selectedColumnName,
          specRole: specRole,
          key: i,
          onChangeSignal: function onChangeSignal(name, value) {
            return props.onChangeSignal(specRole.role, selectedColumnName, name, value);
          },
          hideDropdown: hideDropdown
        }));
      }), React.createElement("div", {
        className: "sanddance-tooltipMap"
      }, React.createElement(_base.base.fabric.DefaultButton, {
        text: _language.strings.buttonTooltipMapping,
        onClick: function onClick() {
          return _this2.setState({
            showTooltipDialog: true
          });
        }
      })))), signals && React.createElement(_group.Group, {
        label: _language.strings.labelChartTypeOptions
      }, signals.map(function (signal, i) {
        return React.createElement(_signal.Signal, {
          key: i,
          signal: signal,
          explorer: explorer,
          disabled: props.disabled || _this2.disableSignal(signal),
          collapseLabel: props.collapseLabels,
          newViewStateTarget: false
        });
      })), React.createElement(_dialog.Dialog, {
        hidden: !this.state.showTooltipDialog,
        onDismiss: function onDismiss() {
          return _this2.setState({
            showTooltipDialog: false
          });
        },
        title: _language.strings.labelTooltipMapping
      }, React.createElement(_toggleColumns.ToggleColumns, {
        allColumns: props.allColumns,
        exclusions: props.tooltipExclusions,
        toggleExclusion: props.toggleTooltipExclusion
      })));
    }
  }, {
    key: "disableSignal",
    value: function disableSignal(signal) {
      if (this.props.view === '2d' && signal.name === _sanddanceReact.SandDance.constants.SignalNames.ZGrounded) {
        return true;
      }

      return false;
    }
  }]);

  return Chart;
}(React.Component);

exports.Chart = Chart;
},{"react":"ccIB","../base":"Vlbn","../controls/columnMap":"DSho","../controls/dialog":"cFWm","../controls/dropdown":"Uyrp","../controls/group":"Q3hf","@msrvida/sanddance-react":"MjKu","../controls/signal":"OWDI","../language":"hk5u","../controls/toggleColumns":"ZOmP"}],"BSWy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.schemeOption = schemeOption;
exports.schemesJSX = void 0;

function schemeOption(selected, scheme) {
  return {
    key: scheme,
    text: scheme,
    selected: selected === scheme,
    scheme: scheme,
    children: schemesJSX[scheme]
  };
}

var schemesJSX = {};
exports.schemesJSX = schemesJSX;
},{}],"JrIT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.categorical = categorical;

var React = _interopRequireWildcard(require("react"));

var _scheme = require("./scheme");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var p8 = "".concat(100 / 8, "%");
var p9 = "".concat(100 / 9, "%");
var p10 = "".concat(100 / 10, "%");
var p12 = "".concat(100 / 12, "%");
var p20 = "".concat(100 / 20, "%");
_scheme.schemesJSX['accent'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#7fc97f",
  style: {
    width: p8,
    background: 'rgb(127, 201, 127)'
  }
}), React.createElement("div", {
  title: "#beaed4",
  style: {
    width: p8,
    background: 'rgb(190, 174, 212)'
  }
}), React.createElement("div", {
  title: "#fdc086",
  style: {
    width: p8,
    background: 'rgb(253, 192, 134)'
  }
}), React.createElement("div", {
  title: "#ffff99",
  style: {
    width: p8,
    background: 'rgb(255, 255, 153)'
  }
}), React.createElement("div", {
  title: "#386cb0",
  style: {
    width: p8,
    background: 'rgb(56, 108, 176)'
  }
}), React.createElement("div", {
  title: "#f0027f",
  style: {
    width: p8,
    background: 'rgb(240, 2, 127)'
  }
}), React.createElement("div", {
  title: "#bf5b17",
  style: {
    width: p8,
    background: 'rgb(191, 91, 23)'
  }
}), React.createElement("div", {
  title: "#666666",
  style: {
    width: p8,
    background: 'rgb(102, 102, 102)'
  }
}));
_scheme.schemesJSX['category10'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#1f77b4",
  style: {
    width: p10,
    background: 'rgb(31, 119, 180)'
  }
}), React.createElement("div", {
  title: "#ff7f0e",
  style: {
    width: p10,
    background: 'rgb(255, 127, 14)'
  }
}), React.createElement("div", {
  title: "#2ca02c",
  style: {
    width: p10,
    background: 'rgb(44, 160, 44)'
  }
}), React.createElement("div", {
  title: "#d62728",
  style: {
    width: p10,
    background: 'rgb(214, 39, 40)'
  }
}), React.createElement("div", {
  title: "#9467bd",
  style: {
    width: p10,
    background: 'rgb(148, 103, 189)'
  }
}), React.createElement("div", {
  title: "#8c564b",
  style: {
    width: p10,
    background: 'rgb(140, 86, 75)'
  }
}), React.createElement("div", {
  title: "#e377c2",
  style: {
    width: p10,
    background: 'rgb(227, 119, 194)'
  }
}), React.createElement("div", {
  title: "#7f7f7f",
  style: {
    width: p10,
    background: 'rgb(127, 127, 127)'
  }
}), React.createElement("div", {
  title: "#bcbd22",
  style: {
    width: p10,
    background: 'rgb(188, 189, 34)'
  }
}), React.createElement("div", {
  title: "#17becf",
  style: {
    width: p10,
    background: 'rgb(23, 190, 207)'
  }
}));
_scheme.schemesJSX['category20'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#1f77b4",
  style: {
    width: p20,
    background: 'rgb(31, 119, 180)'
  }
}), React.createElement("div", {
  title: "#aec7e8",
  style: {
    width: p20,
    background: 'rgb(174, 199, 232)'
  }
}), React.createElement("div", {
  title: "#ff7f0e",
  style: {
    width: p20,
    background: 'rgb(255, 127, 14)'
  }
}), React.createElement("div", {
  title: "#ffbb78",
  style: {
    width: p20,
    background: 'rgb(255, 187, 120)'
  }
}), React.createElement("div", {
  title: "#2ca02c",
  style: {
    width: p20,
    background: 'rgb(44, 160, 44)'
  }
}), React.createElement("div", {
  title: "#98df8a",
  style: {
    width: p20,
    background: 'rgb(152, 223, 138)'
  }
}), React.createElement("div", {
  title: "#d62728",
  style: {
    width: p20,
    background: 'rgb(214, 39, 40)'
  }
}), React.createElement("div", {
  title: "#ff9896",
  style: {
    width: p20,
    background: 'rgb(255, 152, 150)'
  }
}), React.createElement("div", {
  title: "#9467bd",
  style: {
    width: p20,
    background: 'rgb(148, 103, 189)'
  }
}), React.createElement("div", {
  title: "#c5b0d5",
  style: {
    width: p20,
    background: 'rgb(197, 176, 213)'
  }
}), React.createElement("div", {
  title: "#8c564b",
  style: {
    width: p20,
    background: 'rgb(140, 86, 75)'
  }
}), React.createElement("div", {
  title: "#c49c94",
  style: {
    width: p20,
    background: 'rgb(196, 156, 148)'
  }
}), React.createElement("div", {
  title: "#e377c2",
  style: {
    width: p20,
    background: 'rgb(227, 119, 194)'
  }
}), React.createElement("div", {
  title: "#f7b6d2",
  style: {
    width: p20,
    background: 'rgb(247, 182, 210)'
  }
}), React.createElement("div", {
  title: "#7f7f7f",
  style: {
    width: p20,
    background: 'rgb(127, 127, 127)'
  }
}), React.createElement("div", {
  title: "#c7c7c7",
  style: {
    width: p20,
    background: 'rgb(199, 199, 199)'
  }
}), React.createElement("div", {
  title: "#bcbd22",
  style: {
    width: p20,
    background: 'rgb(188, 189, 34)'
  }
}), React.createElement("div", {
  title: "#dbdb8d",
  style: {
    width: p20,
    background: 'rgb(219, 219, 141)'
  }
}), React.createElement("div", {
  title: "#17becf",
  style: {
    width: p20,
    background: 'rgb(23, 190, 207)'
  }
}), React.createElement("div", {
  title: "#9edae5",
  style: {
    width: p20,
    background: 'rgb(158, 218, 229)'
  }
}));
_scheme.schemesJSX['category20b'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#393b79",
  style: {
    width: p20,
    background: 'rgb(57, 59, 121)'
  }
}), React.createElement("div", {
  title: "#5254a3",
  style: {
    width: p20,
    background: 'rgb(82, 84, 163)'
  }
}), React.createElement("div", {
  title: "#6b6ecf",
  style: {
    width: p20,
    background: 'rgb(107, 110, 207)'
  }
}), React.createElement("div", {
  title: "#9c9ede",
  style: {
    width: p20,
    background: 'rgb(156, 158, 222)'
  }
}), React.createElement("div", {
  title: "#637939",
  style: {
    width: p20,
    background: 'rgb(99, 121, 57)'
  }
}), React.createElement("div", {
  title: "#8ca252",
  style: {
    width: p20,
    background: 'rgb(140, 162, 82)'
  }
}), React.createElement("div", {
  title: "#b5cf6b",
  style: {
    width: p20,
    background: 'rgb(181, 207, 107)'
  }
}), React.createElement("div", {
  title: "#cedb9c",
  style: {
    width: p20,
    background: 'rgb(206, 219, 156)'
  }
}), React.createElement("div", {
  title: "#8c6d31",
  style: {
    width: p20,
    background: 'rgb(140, 109, 49)'
  }
}), React.createElement("div", {
  title: "#bd9e39",
  style: {
    width: p20,
    background: 'rgb(189, 158, 57)'
  }
}), React.createElement("div", {
  title: "#e7ba52",
  style: {
    width: p20,
    background: 'rgb(231, 186, 82)'
  }
}), React.createElement("div", {
  title: "#e7cb94",
  style: {
    width: p20,
    background: 'rgb(231, 203, 148)'
  }
}), React.createElement("div", {
  title: "#843c39",
  style: {
    width: p20,
    background: 'rgb(132, 60, 57)'
  }
}), React.createElement("div", {
  title: "#ad494a",
  style: {
    width: p20,
    background: 'rgb(173, 73, 74)'
  }
}), React.createElement("div", {
  title: "#d6616b",
  style: {
    width: p20,
    background: 'rgb(214, 97, 107)'
  }
}), React.createElement("div", {
  title: "#e7969c",
  style: {
    width: p20,
    background: 'rgb(231, 150, 156)'
  }
}), React.createElement("div", {
  title: "#7b4173",
  style: {
    width: p20,
    background: 'rgb(123, 65, 115)'
  }
}), React.createElement("div", {
  title: "#a55194",
  style: {
    width: p20,
    background: 'rgb(165, 81, 148)'
  }
}), React.createElement("div", {
  title: "#ce6dbd",
  style: {
    width: p20,
    background: 'rgb(206, 109, 189)'
  }
}), React.createElement("div", {
  title: "#de9ed6",
  style: {
    width: p20,
    background: 'rgb(222, 158, 214)'
  }
}));
_scheme.schemesJSX['category20c'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#3182bd",
  style: {
    width: p20,
    background: 'rgb(49, 130, 189)'
  }
}), React.createElement("div", {
  title: "#6baed6",
  style: {
    width: p20,
    background: 'rgb(107, 174, 214)'
  }
}), React.createElement("div", {
  title: "#9ecae1",
  style: {
    width: p20,
    background: 'rgb(158, 202, 225)'
  }
}), React.createElement("div", {
  title: "#c6dbef",
  style: {
    width: p20,
    background: 'rgb(198, 219, 239)'
  }
}), React.createElement("div", {
  title: "#e6550d",
  style: {
    width: p20,
    background: 'rgb(230, 85, 13)'
  }
}), React.createElement("div", {
  title: "#fd8d3c",
  style: {
    width: p20,
    background: 'rgb(253, 141, 60)'
  }
}), React.createElement("div", {
  title: "#fdae6b",
  style: {
    width: p20,
    background: 'rgb(253, 174, 107)'
  }
}), React.createElement("div", {
  title: "#fdd0a2",
  style: {
    width: p20,
    background: 'rgb(253, 208, 162)'
  }
}), React.createElement("div", {
  title: "#31a354",
  style: {
    width: p20,
    background: 'rgb(49, 163, 84)'
  }
}), React.createElement("div", {
  title: "#74c476",
  style: {
    width: p20,
    background: 'rgb(116, 196, 118)'
  }
}), React.createElement("div", {
  title: "#a1d99b",
  style: {
    width: p20,
    background: 'rgb(161, 217, 155)'
  }
}), React.createElement("div", {
  title: "#c7e9c0",
  style: {
    width: p20,
    background: 'rgb(199, 233, 192)'
  }
}), React.createElement("div", {
  title: "#756bb1",
  style: {
    width: p20,
    background: 'rgb(117, 107, 177)'
  }
}), React.createElement("div", {
  title: "#9e9ac8",
  style: {
    width: p20,
    background: 'rgb(158, 154, 200)'
  }
}), React.createElement("div", {
  title: "#bcbddc",
  style: {
    width: p20,
    background: 'rgb(188, 189, 220)'
  }
}), React.createElement("div", {
  title: "#dadaeb",
  style: {
    width: p20,
    background: 'rgb(218, 218, 235)'
  }
}), React.createElement("div", {
  title: "#636363",
  style: {
    width: p20,
    background: 'rgb(99, 99, 99)'
  }
}), React.createElement("div", {
  title: "#969696",
  style: {
    width: p20,
    background: 'rgb(150, 150, 150)'
  }
}), React.createElement("div", {
  title: "#bdbdbd",
  style: {
    width: p20,
    background: 'rgb(189, 189, 189)'
  }
}), React.createElement("div", {
  title: "#d9d9d9",
  style: {
    width: p20,
    background: 'rgb(217, 217, 217)'
  }
}));
_scheme.schemesJSX['dark2'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#1b9e77",
  style: {
    width: p8,
    background: 'rgb(27, 158, 119)'
  }
}), React.createElement("div", {
  title: "#d95f02",
  style: {
    width: p8,
    background: 'rgb(217, 95, 2)'
  }
}), React.createElement("div", {
  title: "#7570b3",
  style: {
    width: p8,
    background: 'rgb(117, 112, 179)'
  }
}), React.createElement("div", {
  title: "#e7298a",
  style: {
    width: p8,
    background: 'rgb(231, 41, 138)'
  }
}), React.createElement("div", {
  title: "#66a61e",
  style: {
    width: p8,
    background: 'rgb(102, 166, 30)'
  }
}), React.createElement("div", {
  title: "#e6ab02",
  style: {
    width: p8,
    background: 'rgb(230, 171, 2)'
  }
}), React.createElement("div", {
  title: "#a6761d",
  style: {
    width: p8,
    background: 'rgb(166, 118, 29)'
  }
}), React.createElement("div", {
  title: "#666666",
  style: {
    width: p8,
    background: 'rgb(102, 102, 102)'
  }
}));
_scheme.schemesJSX['paired'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#a6cee3",
  style: {
    width: p12,
    background: 'rgb(166, 206, 227)'
  }
}), React.createElement("div", {
  title: "#1f78b4",
  style: {
    width: p12,
    background: 'rgb(31, 120, 180)'
  }
}), React.createElement("div", {
  title: "#b2df8a",
  style: {
    width: p12,
    background: 'rgb(178, 223, 138)'
  }
}), React.createElement("div", {
  title: "#33a02c",
  style: {
    width: p12,
    background: 'rgb(51, 160, 44)'
  }
}), React.createElement("div", {
  title: "#fb9a99",
  style: {
    width: p12,
    background: 'rgb(251, 154, 153)'
  }
}), React.createElement("div", {
  title: "#e31a1c",
  style: {
    width: p12,
    background: 'rgb(227, 26, 28)'
  }
}), React.createElement("div", {
  title: "#fdbf6f",
  style: {
    width: p12,
    background: 'rgb(253, 191, 111)'
  }
}), React.createElement("div", {
  title: "#ff7f00",
  style: {
    width: p12,
    background: 'rgb(255, 127, 0)'
  }
}), React.createElement("div", {
  title: "#cab2d6",
  style: {
    width: p12,
    background: 'rgb(202, 178, 214)'
  }
}), React.createElement("div", {
  title: "#6a3d9a",
  style: {
    width: p12,
    background: 'rgb(106, 61, 154)'
  }
}), React.createElement("div", {
  title: "#ffff99",
  style: {
    width: p12,
    background: 'rgb(255, 255, 153)'
  }
}), React.createElement("div", {
  title: "#b15928",
  style: {
    width: p12,
    background: 'rgb(177, 89, 40)'
  }
}));
_scheme.schemesJSX['pastel1'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#fbb4ae",
  style: {
    width: p9,
    background: 'rgb(251, 180, 174)'
  }
}), React.createElement("div", {
  title: "#b3cde3",
  style: {
    width: p9,
    background: 'rgb(179, 205, 227)'
  }
}), React.createElement("div", {
  title: "#ccebc5",
  style: {
    width: p9,
    background: 'rgb(204, 235, 197)'
  }
}), React.createElement("div", {
  title: "#decbe4",
  style: {
    width: p9,
    background: 'rgb(222, 203, 228)'
  }
}), React.createElement("div", {
  title: "#fed9a6",
  style: {
    width: p9,
    background: 'rgb(254, 217, 166)'
  }
}), React.createElement("div", {
  title: "#ffffcc",
  style: {
    width: p9,
    background: 'rgb(255, 255, 204)'
  }
}), React.createElement("div", {
  title: "#e5d8bd",
  style: {
    width: p9,
    background: 'rgb(229, 216, 189)'
  }
}), React.createElement("div", {
  title: "#fddaec",
  style: {
    width: p9,
    background: 'rgb(253, 218, 236)'
  }
}), React.createElement("div", {
  title: "#f2f2f2",
  style: {
    width: p9,
    background: 'rgb(242, 242, 242)'
  }
}));
_scheme.schemesJSX['pastel2'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#b3e2cd",
  style: {
    width: p8,
    background: 'rgb(179, 226, 205)'
  }
}), React.createElement("div", {
  title: "#fdcdac",
  style: {
    width: p8,
    background: 'rgb(253, 205, 172)'
  }
}), React.createElement("div", {
  title: "#cbd5e8",
  style: {
    width: p8,
    background: 'rgb(203, 213, 232)'
  }
}), React.createElement("div", {
  title: "#f4cae4",
  style: {
    width: p8,
    background: 'rgb(244, 202, 228)'
  }
}), React.createElement("div", {
  title: "#e6f5c9",
  style: {
    width: p8,
    background: 'rgb(230, 245, 201)'
  }
}), React.createElement("div", {
  title: "#fff2ae",
  style: {
    width: p8,
    background: 'rgb(255, 242, 174)'
  }
}), React.createElement("div", {
  title: "#f1e2cc",
  style: {
    width: p8,
    background: 'rgb(241, 226, 204)'
  }
}), React.createElement("div", {
  title: "#cccccc",
  style: {
    width: p8,
    background: 'rgb(204, 204, 204)'
  }
}));
_scheme.schemesJSX['set1'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#e41a1c",
  style: {
    width: p9,
    background: 'rgb(228, 26, 28)'
  }
}), React.createElement("div", {
  title: "#377eb8",
  style: {
    width: p9,
    background: 'rgb(55, 126, 184)'
  }
}), React.createElement("div", {
  title: "#4daf4a",
  style: {
    width: p9,
    background: 'rgb(77, 175, 74)'
  }
}), React.createElement("div", {
  title: "#984ea3",
  style: {
    width: p9,
    background: 'rgb(152, 78, 163)'
  }
}), React.createElement("div", {
  title: "#ff7f00",
  style: {
    width: p9,
    background: 'rgb(255, 127, 0)'
  }
}), React.createElement("div", {
  title: "#ffff33",
  style: {
    width: p9,
    background: 'rgb(255, 255, 51)'
  }
}), React.createElement("div", {
  title: "#a65628",
  style: {
    width: p9,
    background: 'rgb(166, 86, 40)'
  }
}), React.createElement("div", {
  title: "#f781bf",
  style: {
    width: p9,
    background: 'rgb(247, 129, 191)'
  }
}), React.createElement("div", {
  title: "#999999",
  style: {
    width: p9,
    background: 'rgb(153, 153, 153)'
  }
}));
_scheme.schemesJSX['set2'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#66c2a5",
  style: {
    width: p8,
    background: 'rgb(102, 194, 165)'
  }
}), React.createElement("div", {
  title: "#fc8d62",
  style: {
    width: p8,
    background: 'rgb(252, 141, 98)'
  }
}), React.createElement("div", {
  title: "#8da0cb",
  style: {
    width: p8,
    background: 'rgb(141, 160, 203)'
  }
}), React.createElement("div", {
  title: "#e78ac3",
  style: {
    width: p8,
    background: 'rgb(231, 138, 195)'
  }
}), React.createElement("div", {
  title: "#a6d854",
  style: {
    width: p8,
    background: 'rgb(166, 216, 84)'
  }
}), React.createElement("div", {
  title: "#ffd92f",
  style: {
    width: p8,
    background: 'rgb(255, 217, 47)'
  }
}), React.createElement("div", {
  title: "#e5c494",
  style: {
    width: p8,
    background: 'rgb(229, 196, 148)'
  }
}), React.createElement("div", {
  title: "#b3b3b3",
  style: {
    width: p8,
    background: 'rgb(179, 179, 179)'
  }
}));
_scheme.schemesJSX['set3'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#8dd3c7",
  style: {
    width: p12,
    background: 'rgb(141, 211, 199)'
  }
}), React.createElement("div", {
  title: "#ffffb3",
  style: {
    width: p12,
    background: 'rgb(255, 255, 179)'
  }
}), React.createElement("div", {
  title: "#bebada",
  style: {
    width: p12,
    background: 'rgb(190, 186, 218)'
  }
}), React.createElement("div", {
  title: "#fb8072",
  style: {
    width: p12,
    background: 'rgb(251, 128, 114)'
  }
}), React.createElement("div", {
  title: "#80b1d3",
  style: {
    width: p12,
    background: 'rgb(128, 177, 211)'
  }
}), React.createElement("div", {
  title: "#fdb462",
  style: {
    width: p12,
    background: 'rgb(253, 180, 98)'
  }
}), React.createElement("div", {
  title: "#b3de69",
  style: {
    width: p12,
    background: 'rgb(179, 222, 105)'
  }
}), React.createElement("div", {
  title: "#fccde5",
  style: {
    width: p12,
    background: 'rgb(252, 205, 229)'
  }
}), React.createElement("div", {
  title: "#d9d9d9",
  style: {
    width: p12,
    background: 'rgb(217, 217, 217)'
  }
}), React.createElement("div", {
  title: "#bc80bd",
  style: {
    width: p12,
    background: 'rgb(188, 128, 189)'
  }
}), React.createElement("div", {
  title: "#ccebc5",
  style: {
    width: p12,
    background: 'rgb(204, 235, 197)'
  }
}), React.createElement("div", {
  title: "#ffed6f",
  style: {
    width: p12,
    background: 'rgb(255, 237, 111)'
  }
}));
_scheme.schemesJSX['tableau10'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#4c78a8",
  style: {
    width: p10,
    background: 'rgb(76, 120, 168)'
  }
}), React.createElement("div", {
  title: "#f58518",
  style: {
    width: p10,
    background: 'rgb(245, 133, 24)'
  }
}), React.createElement("div", {
  title: "#e45756",
  style: {
    width: p10,
    background: 'rgb(228, 87, 86)'
  }
}), React.createElement("div", {
  title: "#72b7b2",
  style: {
    width: p10,
    background: 'rgb(114, 183, 178)'
  }
}), React.createElement("div", {
  title: "#54a24b",
  style: {
    width: p10,
    background: 'rgb(84, 162, 75)'
  }
}), React.createElement("div", {
  title: "#eeca3b",
  style: {
    width: p10,
    background: 'rgb(238, 202, 59)'
  }
}), React.createElement("div", {
  title: "#b279a2",
  style: {
    width: p10,
    background: 'rgb(178, 121, 162)'
  }
}), React.createElement("div", {
  title: "#ff9da6",
  style: {
    width: p10,
    background: 'rgb(255, 157, 166)'
  }
}), React.createElement("div", {
  title: "#9d755d",
  style: {
    width: p10,
    background: 'rgb(157, 117, 93)'
  }
}), React.createElement("div", {
  title: "#bab0ac",
  style: {
    width: p10,
    background: 'rgb(186, 176, 172)'
  }
}));
_scheme.schemesJSX['tableau20'] = React.createElement("div", {
  className: "swatch"
}, React.createElement("div", {
  title: "#4c78a8",
  style: {
    width: p20,
    background: 'rgb(76, 120, 168)'
  }
}), React.createElement("div", {
  title: "#9ecae9",
  style: {
    width: p20,
    background: 'rgb(158, 202, 233)'
  }
}), React.createElement("div", {
  title: "#f58518",
  style: {
    width: p20,
    background: 'rgb(245, 133, 24)'
  }
}), React.createElement("div", {
  title: "#ffbf79",
  style: {
    width: p20,
    background: 'rgb(255, 191, 121)'
  }
}), React.createElement("div", {
  title: "#54a24b",
  style: {
    width: p20,
    background: 'rgb(84, 162, 75)'
  }
}), React.createElement("div", {
  title: "#88d27a",
  style: {
    width: p20,
    background: 'rgb(136, 210, 122)'
  }
}), React.createElement("div", {
  title: "#b79a20",
  style: {
    width: p20,
    background: 'rgb(183, 154, 32)'
  }
}), React.createElement("div", {
  title: "#f2cf5b",
  style: {
    width: p20,
    background: 'rgb(242, 207, 91)'
  }
}), React.createElement("div", {
  title: "#439894",
  style: {
    width: p20,
    background: 'rgb(67, 152, 148)'
  }
}), React.createElement("div", {
  title: "#83bcb6",
  style: {
    width: p20,
    background: 'rgb(131, 188, 182)'
  }
}), React.createElement("div", {
  title: "#e45756",
  style: {
    width: p20,
    background: 'rgb(228, 87, 86)'
  }
}), React.createElement("div", {
  title: "#ff9d98",
  style: {
    width: p20,
    background: 'rgb(255, 157, 152)'
  }
}), React.createElement("div", {
  title: "#79706e",
  style: {
    width: p20,
    background: 'rgb(121, 112, 110)'
  }
}), React.createElement("div", {
  title: "#bab0ac",
  style: {
    width: p20,
    background: 'rgb(186, 176, 172)'
  }
}), React.createElement("div", {
  title: "#d67195",
  style: {
    width: p20,
    background: 'rgb(214, 113, 149)'
  }
}), React.createElement("div", {
  title: "#fcbfd2",
  style: {
    width: p20,
    background: 'rgb(252, 191, 210)'
  }
}), React.createElement("div", {
  title: "#b279a2",
  style: {
    width: p20,
    background: 'rgb(178, 121, 162)'
  }
}), React.createElement("div", {
  title: "#d6a5c9",
  style: {
    width: p20,
    background: 'rgb(214, 165, 201)'
  }
}), React.createElement("div", {
  title: "#9e765f",
  style: {
    width: p20,
    background: 'rgb(158, 118, 95)'
  }
}), React.createElement("div", {
  title: "#d8b5a5",
  style: {
    width: p20,
    background: 'rgb(216, 181, 165)'
  }
}));

function categorical(selected) {
  return [(0, _scheme.schemeOption)(selected, 'accent'), (0, _scheme.schemeOption)(selected, 'category10'), (0, _scheme.schemeOption)(selected, 'category20'), (0, _scheme.schemeOption)(selected, 'category20b'), (0, _scheme.schemeOption)(selected, 'category20c'), (0, _scheme.schemeOption)(selected, 'dark2'), (0, _scheme.schemeOption)(selected, 'paired'), (0, _scheme.schemeOption)(selected, 'pastel1'), (0, _scheme.schemeOption)(selected, 'pastel2'), (0, _scheme.schemeOption)(selected, 'set1'), (0, _scheme.schemeOption)(selected, 'set2'), (0, _scheme.schemeOption)(selected, 'set3'), (0, _scheme.schemeOption)(selected, 'tableau10'), (0, _scheme.schemeOption)(selected, 'tableau20')];
}
},{"react":"ccIB","./scheme":"BSWy"}],"wtjh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.diverging = diverging;

var React = _interopRequireWildcard(require("react"));

var _scheme = require("./scheme");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
_scheme.schemesJSX['blueorange'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-blueorange"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(5, 48, 97)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(34, 101, 163)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(75, 148, 196)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(143, 194, 221)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(205, 227, 238)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(242, 240, 235)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(253, 221, 179)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(248, 182, 100)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(221, 132, 31)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(178, 90, 9)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(127, 59, 8)"
}))), React.createElement("rect", {
  fill: "url(#gradient-blueorange)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['brownbluegreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-brownbluegreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(84, 48, 5)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(139, 84, 15)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(188, 132, 53)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(222, 190, 123)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(242, 228, 192)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(238, 241, 234)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(195, 231, 226)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(127, 201, 191)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(57, 152, 143)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(10, 103, 95)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 60, 48)"
}))), React.createElement("rect", {
  fill: "url(#gradient-brownbluegreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purplegreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purplegreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(64, 0, 75)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(115, 47, 128)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(154, 109, 170)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(193, 164, 205)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(228, 210, 230)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(239, 240, 239)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(214, 238, 209)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(162, 215, 158)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(92, 173, 101)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(33, 120, 57)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 68, 27)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purplegreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['pinkyellowgreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-pinkyellowgreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(142, 1, 82)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(192, 38, 126)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(221, 114, 173)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(240, 179, 214)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(250, 221, 237)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(245, 243, 239)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(225, 242, 202)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(182, 222, 135)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(128, 187, 71)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(79, 145, 37)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(39, 100, 25)"
}))), React.createElement("rect", {
  fill: "url(#gradient-pinkyellowgreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purpleorange'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purpleorange"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(45, 0, 75)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(85, 45, 132)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(129, 112, 172)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(176, 170, 208)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(215, 215, 233)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(243, 238, 234)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(253, 221, 179)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(248, 182, 100)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(221, 132, 31)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(178, 90, 9)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(127, 59, 8)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purpleorange)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['redblue'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-redblue"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(103, 0, 31)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(172, 32, 47)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(213, 96, 80)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(241, 163, 133)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(251, 215, 196)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(242, 239, 238)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(205, 227, 238)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(143, 194, 221)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(75, 148, 196)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(34, 101, 163)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(5, 48, 97)"
}))), React.createElement("rect", {
  fill: "url(#gradient-redblue)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['redgrey'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-redgrey"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(103, 0, 31)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(172, 32, 47)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(213, 96, 80)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(241, 163, 133)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(252, 216, 197)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(250, 244, 241)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(223, 223, 223)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(184, 184, 184)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(134, 134, 134)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(78, 78, 78)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(26, 26, 26)"
}))), React.createElement("rect", {
  fill: "url(#gradient-redgrey)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['redyellowblue'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-redyellowblue"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(165, 0, 38)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(212, 50, 44)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(241, 110, 67)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(252, 172, 100)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(254, 221, 144)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(250, 248, 193)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(220, 241, 236)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(171, 214, 232)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(117, 171, 208)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(74, 116, 180)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(49, 54, 149)"
}))), React.createElement("rect", {
  fill: "url(#gradient-redyellowblue)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['redyellowgreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-redyellowgreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(165, 0, 38)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(212, 50, 44)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(241, 110, 67)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(252, 172, 99)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(254, 221, 141)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(249, 247, 174)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(215, 238, 142)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(164, 216, 110)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(100, 188, 97)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(34, 150, 79)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 104, 55)"
}))), React.createElement("rect", {
  fill: "url(#gradient-redyellowgreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['spectral'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-spectral"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(158, 1, 66)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(209, 60, 75)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(240, 112, 74)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(252, 172, 99)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(254, 221, 141)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(251, 248, 176)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(224, 243, 161)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(169, 221, 162)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(105, 189, 169)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(66, 136, 181)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(94, 79, 162)"
}))), React.createElement("rect", {
  fill: "url(#gradient-spectral)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));

function diverging(selected) {
  return [(0, _scheme.schemeOption)(selected, 'blueorange'), (0, _scheme.schemeOption)(selected, 'brownbluegreen'), (0, _scheme.schemeOption)(selected, 'purplegreen'), (0, _scheme.schemeOption)(selected, 'pinkyellowgreen'), (0, _scheme.schemeOption)(selected, 'purpleorange'), (0, _scheme.schemeOption)(selected, 'redblue'), (0, _scheme.schemeOption)(selected, 'redgrey'), (0, _scheme.schemeOption)(selected, 'redyellowblue'), (0, _scheme.schemeOption)(selected, 'redyellowgreen'), (0, _scheme.schemeOption)(selected, 'spectral')];
}
},{"react":"ccIB","./scheme":"BSWy"}],"uM5k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dual = dual;

var React = _interopRequireWildcard(require("react"));

var _sanddanceReact = require("@msrvida/sanddance-react");

var _scheme = require("./scheme");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
_sanddanceReact.SandDance.colorSchemes.filter(function (cs) {
  return cs.colors.length === 2;
}).map(function (binaryScheme, i) {
  _scheme.schemesJSX[binaryScheme.scheme] = React.createElement("div", {
    className: "swatch"
  }, binaryScheme.colors.map(function (color, j) {
    return React.createElement("div", {
      key: j,
      title: color,
      style: {
        width: '50%',
        backgroundColor: color
      }
    });
  }));
});

function dual(selected) {
  return _sanddanceReact.SandDance.colorSchemes.filter(function (cs) {
    return cs.colors.length === 2;
  }).map(function (binaryScheme, i) {
    return (0, _scheme.schemeOption)(selected, binaryScheme.scheme);
  });
}
},{"react":"ccIB","@msrvida/sanddance-react":"MjKu","./scheme":"BSWy"}],"rVQa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sequentialMultiHue = sequentialMultiHue;

var React = _interopRequireWildcard(require("react"));

var _scheme = require("./scheme");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
_scheme.schemesJSX['viridis'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-viridis"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "#440154"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "#482475"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "#414487"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "#355f8d"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "#2a788e"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "#21918c"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "#22a884"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "#44bf70"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "#7ad151"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "#bddf26"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "#fde725"
}))), React.createElement("rect", {
  fill: "url(#gradient-viridis)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['inferno'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-inferno"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "#000004"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "#160b39"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "#420a68"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "#6a176e"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "#932667"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "#bc3754"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "#dd513a"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "#f37819"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "#fca50a"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "#f6d746"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "#fcffa4"
}))), React.createElement("rect", {
  fill: "url(#gradient-inferno)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['magma'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-magma"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "#000004"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "#140e36"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "#3b0f70"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "#641a80"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "#8c2981"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "#b73779"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "#de4968"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "#f7705c"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "#fe9f6d"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "#fecf92"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "#fcfdbf"
}))), React.createElement("rect", {
  fill: "url(#gradient-magma)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['plasma'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-plasma"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "#0d0887"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "#41049d"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "#6a00a8"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "#8f0da4"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "#b12a90"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "#cc4778"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "#e16462"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "#f2844b"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "#fca636"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "#fcce25"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "#f0f921"
}))), React.createElement("rect", {
  fill: "url(#gradient-plasma)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['bluegreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-bluegreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 252, 253)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(232, 246, 249)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(213, 239, 237)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(183, 228, 218)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(143, 211, 193)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(104, 194, 163)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(73, 177, 127)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(47, 153, 89)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(21, 127, 60)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(3, 100, 41)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 68, 27)"
}))), React.createElement("rect", {
  fill: "url(#gradient-bluegreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['bluepurple'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-bluepurple"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 252, 253)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(228, 238, 245)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(204, 221, 236)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(178, 202, 225)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(156, 179, 213)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(143, 149, 198)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(140, 116, 181)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(137, 82, 165)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(133, 45, 143)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(115, 15, 113)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(77, 0, 75)"
}))), React.createElement("rect", {
  fill: "url(#gradient-bluepurple)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['greenblue'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-greenblue"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 252, 240)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(229, 245, 223)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(211, 238, 206)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(189, 229, 191)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(158, 217, 187)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(123, 203, 196)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(88, 183, 205)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(57, 156, 198)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(29, 126, 183)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(11, 96, 161)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(8, 64, 129)"
}))), React.createElement("rect", {
  fill: "url(#gradient-greenblue)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['orangered'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-orangered"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 247, 236)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(254, 235, 207)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(253, 220, 175)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(253, 202, 148)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(253, 176, 122)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(250, 142, 93)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(241, 108, 73)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(224, 69, 48)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(200, 29, 19)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(167, 4, 3)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(127, 0, 0)"
}))), React.createElement("rect", {
  fill: "url(#gradient-orangered)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purplebluegreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purplebluegreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 247, 251)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(239, 231, 242)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(219, 216, 234)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(190, 201, 226)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(152, 185, 217)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(105, 168, 207)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(64, 150, 192)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(25, 135, 159)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(3, 120, 119)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(1, 99, 83)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(1, 70, 54)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purplebluegreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purpleblue'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purpleblue"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 247, 251)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(239, 234, 244)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(219, 218, 235)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(191, 201, 226)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(155, 185, 217)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(114, 168, 207)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(67, 148, 195)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(26, 125, 182)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(6, 103, 161)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(4, 82, 129)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(2, 56, 88)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purpleblue)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purplered'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purplered"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 244, 249)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(234, 227, 240)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(220, 201, 226)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(208, 170, 210)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(208, 138, 194)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(221, 99, 174)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(227, 56, 144)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(215, 28, 108)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(183, 11, 79)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(143, 2, 58)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(103, 0, 31)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purplered)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['redpurple'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-redpurple"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 247, 243)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(253, 228, 225)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(252, 207, 204)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(251, 181, 188)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(249, 147, 176)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(243, 105, 163)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(224, 62, 152)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(192, 23, 136)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(153, 3, 124)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(112, 1, 116)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(73, 0, 106)"
}))), React.createElement("rect", {
  fill: "url(#gradient-redpurple)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['yellowgreenblue'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-yellowgreenblue"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 255, 217)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(239, 249, 189)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(213, 238, 179)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(169, 221, 183)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(115, 201, 189)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(69, 180, 194)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(40, 151, 191)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(32, 115, 178)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(35, 78, 160)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(28, 49, 133)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(8, 29, 88)"
}))), React.createElement("rect", {
  fill: "url(#gradient-yellowgreenblue)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['yellowgreen'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-yellowgreen"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 255, 229)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(247, 252, 196)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(228, 244, 172)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(199, 232, 155)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(162, 216, 138)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(120, 197, 120)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(78, 175, 99)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(47, 148, 78)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(21, 121, 63)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(3, 96, 52)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 69, 41)"
}))), React.createElement("rect", {
  fill: "url(#gradient-yellowgreen)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['yelloworangebrown'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-yelloworangebrown"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 255, 229)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(255, 248, 196)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(254, 234, 161)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(254, 214, 118)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(254, 186, 74)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(251, 153, 44)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(238, 121, 24)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(216, 91, 10)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(183, 67, 4)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(143, 50, 4)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(102, 37, 6)"
}))), React.createElement("rect", {
  fill: "url(#gradient-yelloworangebrown)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['yelloworangered'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-yelloworangered"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 255, 204)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(255, 240, 169)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(254, 224, 135)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(254, 201, 101)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(254, 171, 75)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(253, 137, 60)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(250, 92, 46)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(236, 48, 35)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(211, 17, 33)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(175, 2, 37)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(128, 0, 38)"
}))), React.createElement("rect", {
  fill: "url(#gradient-yelloworangered)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));

function sequentialMultiHue(selected) {
  return [(0, _scheme.schemeOption)(selected, 'viridis'), (0, _scheme.schemeOption)(selected, 'inferno'), (0, _scheme.schemeOption)(selected, 'magma'), (0, _scheme.schemeOption)(selected, 'plasma'), (0, _scheme.schemeOption)(selected, 'bluegreen'), (0, _scheme.schemeOption)(selected, 'bluepurple'), (0, _scheme.schemeOption)(selected, 'greenblue'), (0, _scheme.schemeOption)(selected, 'orangered'), (0, _scheme.schemeOption)(selected, 'purplebluegreen'), (0, _scheme.schemeOption)(selected, 'purpleblue'), (0, _scheme.schemeOption)(selected, 'purplered'), (0, _scheme.schemeOption)(selected, 'redpurple'), (0, _scheme.schemeOption)(selected, 'yellowgreenblue'), (0, _scheme.schemeOption)(selected, 'yellowgreen'), (0, _scheme.schemeOption)(selected, 'yelloworangebrown'), (0, _scheme.schemeOption)(selected, 'yelloworangered')];
}
},{"react":"ccIB","./scheme":"BSWy"}],"Prvn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sequentialSingleHue = sequentialSingleHue;

var React = _interopRequireWildcard(require("react"));

var _scheme = require("./scheme");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
_scheme.schemesJSX['blues'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-blues"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 251, 255)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(227, 238, 249)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(207, 225, 242)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(181, 212, 233)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(147, 195, 223)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(109, 174, 213)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(75, 151, 201)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(47, 126, 188)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(24, 100, 170)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(10, 74, 144)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(8, 48, 107)"
}))), React.createElement("rect", {
  fill: "url(#gradient-blues)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['greens'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-greens"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(247, 252, 245)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(232, 246, 227)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(211, 238, 205)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(183, 226, 177)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(151, 212, 148)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(115, 195, 120)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(77, 175, 98)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(47, 152, 79)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(21, 127, 59)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(3, 100, 41)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 68, 27)"
}))), React.createElement("rect", {
  fill: "url(#gradient-greens)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['greys'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-greys"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 255, 255)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(242, 242, 242)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(226, 226, 226)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(206, 206, 206)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(180, 180, 180)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(151, 151, 151)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(122, 122, 122)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(95, 95, 95)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(64, 64, 64)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(30, 30, 30)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(0, 0, 0)"
}))), React.createElement("rect", {
  fill: "url(#gradient-greys)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['purples'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-purples"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(252, 251, 253)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(241, 239, 246)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(226, 225, 239)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(206, 206, 229)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(182, 181, 216)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(158, 155, 201)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(135, 130, 188)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(115, 99, 172)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(97, 64, 155)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(80, 31, 140)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(63, 0, 125)"
}))), React.createElement("rect", {
  fill: "url(#gradient-purples)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['reds'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-reds"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 245, 240)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(254, 227, 214)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(253, 201, 180)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(252, 170, 142)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(252, 138, 107)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(249, 105, 76)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(239, 69, 51)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(217, 39, 35)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(187, 21, 26)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(151, 11, 19)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(103, 0, 13)"
}))), React.createElement("rect", {
  fill: "url(#gradient-reds)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));
_scheme.schemesJSX['oranges'] = React.createElement("svg", {
  viewBox: "0,0,1,1",
  preserveAspectRatio: "none"
}, React.createElement("defs", null, React.createElement("linearGradient", {
  id: "gradient-oranges"
}, React.createElement("stop", {
  offset: "0%",
  stopColor: "rgb(255, 245, 235)"
}), React.createElement("stop", {
  offset: "10%",
  stopColor: "rgb(254, 232, 211)"
}), React.createElement("stop", {
  offset: "20%",
  stopColor: "rgb(253, 216, 179)"
}), React.createElement("stop", {
  offset: "30%",
  stopColor: "rgb(253, 194, 140)"
}), React.createElement("stop", {
  offset: "40%",
  stopColor: "rgb(253, 167, 98)"
}), React.createElement("stop", {
  offset: "50%",
  stopColor: "rgb(251, 141, 61)"
}), React.createElement("stop", {
  offset: "60%",
  stopColor: "rgb(242, 112, 29)"
}), React.createElement("stop", {
  offset: "70%",
  stopColor: "rgb(226, 86, 9)"
}), React.createElement("stop", {
  offset: "80%",
  stopColor: "rgb(196, 65, 3)"
}), React.createElement("stop", {
  offset: "90%",
  stopColor: "rgb(159, 51, 3)"
}), React.createElement("stop", {
  offset: "100%",
  stopColor: "rgb(127, 39, 4)"
}))), React.createElement("rect", {
  fill: "url(#gradient-oranges)",
  x: "0",
  y: "0",
  width: "1",
  height: "1"
}));

function sequentialSingleHue(selected) {
  return [(0, _scheme.schemeOption)(selected, 'blues'), (0, _scheme.schemeOption)(selected, 'greens'), (0, _scheme.schemeOption)(selected, 'greys'), (0, _scheme.schemeOption)(selected, 'purples'), (0, _scheme.schemeOption)(selected, 'reds'), (0, _scheme.schemeOption)(selected, 'oranges')];
}
},{"react":"ccIB","./scheme":"BSWy"}],"otJp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Palette = Palette;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _categorical = require("./categorical");

var _diverging = require("./diverging");

var _dropdown = require("../controls/dropdown");

var _dual = require("./dual");

var _scheme = require("./scheme");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _sequentialMultiHue = require("./sequentialMultiHue");

var _sequentialSingleHue = require("./sequentialSingleHue");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var maxDistinctColors = 20;

function Palette(props) {
  var distinctValueCount = props.colorColumn.stats.distinctValueCount;
  var isDual = distinctValueCount === 2;
  var categoricalNumeric = distinctValueCount > 0 && distinctValueCount < maxDistinctColors;
  var isQualitative = false;
  var isQuantitative = false;

  switch (props.colorColumn.type) {
    case 'boolean':
    case 'string':
      isQualitative = true;
      break;

    case 'number':
      isQuantitative = true;
      break;

    case 'date':
    case 'integer':
      isQuantitative = true;
      isQualitative = categoricalNumeric;
  }

  var selected = props.scheme;
  var options = [];

  function menu(name, opts) {
    options.push({
      key: name,
      text: name,
      itemType: _base.base.fabric.DropdownMenuItemType.Header
    });
    options.push.apply(options, opts);
  }

  isQualitative && menu(_language.strings.schemeCategorical, (0, _categorical.categorical)(selected));
  isQuantitative && menu(_language.strings.schemeSequentialSingleHue, (0, _sequentialSingleHue.sequentialSingleHue)(selected));
  isQuantitative && menu(_language.strings.schemeSequentialMultiHue, (0, _sequentialMultiHue.sequentialMultiHue)(selected));
  isQuantitative && menu(_language.strings.schemeDiverging, (0, _diverging.diverging)(selected));
  isDual && menu(_language.strings.schemeDual, (0, _dual.dual)(selected));
  return React.createElement("div", {
    className: "sanddance-palette"
  }, React.createElement("div", {
    className: "sanddance-explanation",
    dangerouslySetInnerHTML: {
      __html: _language.strings.labelColorFieldInfo(props.colorColumn.name, props.colorColumn.type, categoricalNumeric, distinctValueCount)
    }
  }), React.createElement(_dropdown.Dropdown, {
    collapseLabel: props.collapseLabel,
    disabled: props.disabled,
    dropdownWidth: 400,
    label: _language.strings.labelColorScheme,
    onRenderOption: function onRenderOption(option) {
      if (option.itemType === _base.base.fabric.DropdownMenuItemType.Header) {
        return React.createElement("span", null, option.text);
      } else {
        return React.createElement("div", {
          className: "sanddance-scheme option"
        }, React.createElement("span", {
          className: "name"
        }, option.scheme), option.children);
      }
    },
    options: options,
    onChange: function onChange(e, o) {
      props.changeColorScheme(o.scheme);
    }
  }), React.createElement("div", {
    className: _sanddanceReact.util.classList('sanddance-scheme', props.disabled && 'disabled')
  }, props.scheme && _scheme.schemesJSX[props.scheme]));
}
},{"react":"ccIB","../base":"Vlbn","./categorical":"JrIT","./diverging":"wtjh","../controls/dropdown":"Uyrp","./dual":"uM5k","./scheme":"BSWy","@msrvida/sanddance-react":"MjKu","./sequentialMultiHue":"rVQa","./sequentialSingleHue":"Prvn","../language":"hk5u"}],"N8IJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _columnMap = require("../controls/columnMap");

var _palettes = require("../palettes");

var _signal = require("../controls/signal");

var _language = require("../language");

var _group = require("../controls/group");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Color(props) {
  var colorColumn = props.dataContent.columns.filter(function (c) {
    return c.name === props.colorColumn;
  })[0];
  var disabledColorBin = !colorColumn || !colorColumn.quantitative || props.directColor;
  var colorBin = props.colorBin || 'quantize';
  return React.createElement("div", {
    className: "sanddance-color-dialog"
  }, React.createElement(_group.Group, {
    label: _language.strings.labelColor
  }, React.createElement(_columnMap.ColumnMap, Object.assign({}, props, {
    collapseLabel: props.compactUI,
    selectedColumnName: props.colorColumn,
    specRole: props.specCapabilities && props.specCapabilities.roles.filter(function (r) {
      return r.role === 'color';
    })[0],
    key: 0
  })), colorColumn && colorColumn.isColorData && React.createElement("div", {
    className: "sanddance-explanation",
    dangerouslySetInnerHTML: {
      __html: _language.strings.labelColorFieldIsColorData(colorColumn.name)
    }
  }), colorColumn && !colorColumn.isColorData && React.createElement(_palettes.Palette, {
    collapseLabel: props.compactUI,
    scheme: props.scheme,
    colorColumn: colorColumn,
    changeColorScheme: function changeColorScheme(scheme) {
      props.onColorSchemeChange(scheme);
    },
    disabled: props.disabled || props.directColor || colorColumn && colorColumn.isColorData
  }), colorColumn && !colorColumn.isColorData && React.createElement(_signal.Signal, {
    disabled: props.disabled || !colorColumn || props.directColor || colorColumn && colorColumn.isColorData,
    signal: props.colorReverseSignal,
    explorer: props.explorer,
    onChange: props.onColorReverseChange,
    collapseLabel: props.compactUI
  })), colorColumn && !colorColumn.isColorData && React.createElement(_group.Group, {
    label: _language.strings.labelColorBin
  }, React.createElement("div", {
    className: "sanddance-explanation"
  }, _language.strings.labelColorBinExplanation), React.createElement(_base.base.fabric.ChoiceGroup, {
    options: [{
      key: 'continuous',
      text: _language.strings.labelColorBinNone,
      checked: colorBin === 'continuous',
      disabled: disabledColorBin
    }, {
      key: 'quantize',
      text: _language.strings.labelColorBinQuantize,
      checked: colorBin === 'quantize',
      disabled: disabledColorBin
    }, {
      key: 'quantile',
      text: _language.strings.labelColorBinQuantile,
      checked: colorBin === 'quantile',
      disabled: disabledColorBin
    }],
    onChange: function onChange(e, o) {
      props.onColorBinChange(o.key);
    }
  }), React.createElement(_signal.Signal, {
    disabled: props.disabled || disabledColorBin || props.colorBin === 'continuous',
    signal: props.colorBinSignal,
    explorer: props.explorer,
    onChange: props.onColorBinCountChange,
    collapseLabel: props.compactUI
  })), colorColumn && !colorColumn.isColorData && React.createElement(_group.Group, {
    label: _language.strings.labelColorOptions
  }, React.createElement(_base.base.fabric.Toggle, {
    label: _language.strings.selectDirectColor,
    disabled: !colorColumn.stats.hasColorData,
    checked: !!(colorColumn.stats.hasColorData && props.directColor),
    onChange: function onChange(e, checked) {
      return props.onDirectColorChange(checked);
    }
  }), React.createElement("div", {
    className: "sanddance-explanation",
    dangerouslySetInnerHTML: {
      __html: _language.strings.labelDataColors
    }
  })));
}
},{"react":"ccIB","../base":"Vlbn","../controls/columnMap":"DSho","../palettes":"otJp","../controls/signal":"OWDI","../language":"hk5u","../controls/group":"Q3hf"}],"tb7d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initPrefs = initPrefs;
exports.saveSignalValuePref = saveSignalValuePref;
exports.copyPrefToNewState = copyPrefToNewState;
exports.savePref = savePref;

var _sanddanceReact = require("@msrvida/sanddance-react");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function initPrefs(prefs, partialInsight) {
  if (partialInsight) {
    var specTypePrefs = prefs[partialInsight.chart] || {};
    prefs[partialInsight.chart] = specTypePrefs;

    for (var _role in partialInsight.columns) {
      var role = _role;

      if (role === 'color' || role === 'x') {
        (function () {
          var rolePrefs = specTypePrefs[role] || {};
          specTypePrefs[role] = rolePrefs;
          var column = partialInsight.columns[role];

          var copySignalValue = function copySignalValue(signalName) {
            if (partialInsight.signalValues && partialInsight.signalValues[signalName] && rolePrefs[column]) {
              var signalValues = rolePrefs[column].signalValues || {};
              signalValues[signalName] = partialInsight.signalValues[signalName];
              rolePrefs[column].signalValues = signalValues;
            }
          };

          switch (role) {
            case 'color':
              rolePrefs[column] = {
                scheme: partialInsight.scheme,
                colorBin: partialInsight.colorBin
              };
              copySignalValue(_sanddanceReact.SandDance.constants.SignalNames.ColorBinCount);
              break;

            case 'x':
              copySignalValue(_sanddanceReact.SandDance.constants.SignalNames.XBins);
              break;
          }
        })();
      }
    }
  }
}

function saveSignalValuePref(prefs, chart, role, column, signalName, signalValue) {
  var partialInsight = savePref(prefs, chart, role, column, {
    signalValues: {}
  });
  partialInsight.signalValues[signalName] = signalValue;
}

function copyPrefToNewState(prefs, chart, role, columnName) {
  var specTypePrefs = _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge({}, prefs['*'], prefs[chart]);

  var rolePrefs = _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge({}, specTypePrefs['*'], specTypePrefs[role]);

  var partialInsight = _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge({}, rolePrefs['*'], rolePrefs[columnName]);

  return partialInsight;
}

function savePref(prefs, chart, role, column, partialInsight) {
  var SpecTypePrefs = prefs[chart] || {};
  prefs[chart] = SpecTypePrefs;
  var rolePrefs = SpecTypePrefs[role] || {};
  SpecTypePrefs[role] = rolePrefs;
  rolePrefs[column] = _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge({}, rolePrefs[column], partialInsight);
  return rolePrefs[column];
}
},{"@msrvida/sanddance-react":"MjKu"}],"Gai8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataItem = DataItem;

var React = _interopRequireWildcard(require("react"));

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function isNumber(value) {
  if (typeof value === 'number') return true;
  if (!isNaN(value)) return true;
  return false;
}

function isBoolean(value) {
  if (typeof value === 'boolean') return true;

  if (typeof value === 'string') {
    switch (value.toLowerCase()) {
      case true + '':
      case false + '':
        return true;
    }
  }

  return false;
}

function bingSearchLink(column, value) {
  if (isNumber(value)) return null;
  if (isBoolean(value)) return null;
  if (column && column.stats.distinctValueCount === 2) return null;
  return React.createElement("div", {
    className: 'bing-search'
  }, React.createElement("a", {
    href: "https://www.bing.com/search?q=".concat(encodeURIComponent(value)),
    target: '_blank',
    title: _language.strings.bingsearchDescription(value),
    "aria-label": _language.strings.bingsearchDescription(value)
  }, _language.strings.bingsearch));
}

function displayValue(value) {
  switch (value) {
    case '':
      {
        return {
          special: true,
          display: _language.strings.labelBlank
        };
      }

    case null:
      {
        return {
          special: true,
          display: _language.strings.labelNull
        };
      }

    case true:
      {
        return {
          special: true,
          display: _language.strings.labelTrue
        };
      }

    case false:
      {
        return {
          special: true,
          display: _language.strings.labelFalse
        };
      }

    default:
      {
        if (_typeof(value) === 'object') {
          if (value instanceof Date) {
            var d = value;
            return displayValue(d.input);
          }

          return {
            special: false,
            display: value.toLocaleString()
          };
        }

        return {
          special: false,
          display: value
        };
      }
  }
}

function displayValueElement(nvp) {
  var d = displayValue(nvp.value);

  if (d.special) {
    return React.createElement("i", null, d.display);
  }

  return d.display;
}

var KeyCodes = {
  ENTER: 13
};

function DataItem(props) {
  if (!props.item) {
    return null;
  }

  var nameValuePairs = [];

  var _loop = function _loop(columnName) {
    if (columnName === _sanddanceReact.SandDance.constants.GL_ORDINAL && !props.showSystemFields) {
      return "continue";
    }

    if (_sanddanceReact.SandDance.util.isInternalFieldName(columnName)) {
      return "continue";
    }

    var nameValuePair = {
      columnName: columnName,
      value: props.item[columnName]
    };

    if (!props.bingSearchDisabled) {
      nameValuePair.bingSearch = bingSearchLink(props.columns.filter(function (c) {
        return c.name === columnName;
      })[0], props.item[columnName]);
    }

    nameValuePairs.push(nameValuePair);
  };

  for (var columnName in props.item) {
    var _ret = _loop(columnName);

    if (_ret === "continue") continue;
  }

  return React.createElement("div", {
    className: "sanddance-dataItem"
  }, nameValuePairs.map(function (nameValuePair, i) {
    var ex = {
      key: 0,
      name: nameValuePair.columnName,
      operator: '==',
      value: nameValuePair.value
    };

    if (nameValuePair.value === null || nameValuePair.value === '') {
      ex.operator = 'isnullorEmpty';
      delete ex.value;
    }

    var searchClick = function searchClick(e) {
      var search = {
        key: 0,
        expressions: [ex]
      };
      props.onSearch(e, [search]);
    };

    var title = _language.strings.tooltipSearch(nameValuePair.columnName, displayValue(nameValuePair.value).display);

    return React.createElement("div", {
      key: i,
      onClick: !props.disabled ? searchClick : null,
      title: title,
      onKeyUp: function onKeyUp(e) {
        if (e.keyCode === KeyCodes.ENTER) {
          searchClick(e);
        }
      },
      tabIndex: 0,
      className: "name-value"
    }, React.createElement("div", {
      className: "column-name"
    }, nameValuePair.columnName), React.createElement("div", {
      className: "column-value"
    }, displayValueElement(nameValuePair)), nameValuePair.bingSearch);
  }));
}
},{"react":"ccIB","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"eqtW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = Button;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Button(props) {
  return React.createElement(_base.base.fabric.DefaultButton, Object.assign({}, props, {
    styles: {
      root: {
        backgroundColor: 'transparent',
        height: '30px',
        width: props.width,
        padding: 0
      },
      rootDisabled: {
        backgroundColor: 'transparent'
      },
      icon: {
        color: props.themePalette.themePrimary
      },
      label: {
        fontWeight: '400',
        textAlign: props.textAlign || 'left'
      }
    },
    iconProps: {
      iconName: props.iconName
    }
  }));
}
},{"react":"ccIB","../base":"Vlbn"}],"fiGR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"G46r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"fiGR"}],"CupU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"mUgz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"Nf4q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"sIkL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"WMxc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"fiGR"}],"gMFS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"fiGR"}],"w40g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"WMxc","./formatRounded.js":"gMFS"}],"Ecm4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"Iakc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!

        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.

        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.

        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"G46r","./formatGroup.js":"CupU","./formatNumerals.js":"mUgz","./formatSpecifier.js":"Nf4q","./formatTrim.js":"sIkL","./formatTypes.js":"w40g","./formatPrefixAuto.js":"WMxc","./identity.js":"Ecm4"}],"VIed":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"Iakc"}],"cTEw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"G46r"}],"aFxy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"G46r"}],"we8G":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"G46r"}],"SA6z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"VIed","./locale.js":"Iakc","./formatSpecifier.js":"Nf4q","./precisionFixed.js":"cTEw","./precisionPrefix.js":"aFxy","./precisionRound.js":"we8G"}],"OsNT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataScope = DataScope;
exports.DataScopeId = void 0;

var React = _interopRequireWildcard(require("react"));

var _button = require("./button");

var _d3Format = require("d3-format");

var _language = require("../language");

var _sanddanceReact = require("@msrvida/sanddance-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var DataScopeId;
exports.DataScopeId = DataScopeId;

(function (DataScopeId) {
  DataScopeId[DataScopeId["AllData"] = 0] = "AllData";
  DataScopeId[DataScopeId["SelectedData"] = 1] = "SelectedData";
  DataScopeId[DataScopeId["FilteredData"] = 2] = "FilteredData";
})(DataScopeId || (exports.DataScopeId = DataScopeId = {}));

var shortFormat = (0, _d3Format.format)('.2~s');

function short(n) {
  return n === -1 ? '--' : n ? n < 1000 ? n.toString() : shortFormat(n) : '0';
}

function DataScope(props) {
  var dataCount = Object.assign({
    all: -1,
    filtered: -1,
    selected: -1
  }, props.dataCount);
  return props.compact ? React.createElement("div", {
    className: _sanddanceReact.util.classList('sanddance-datascope', 'compact'),
    onClick: props.onCompactClick
  }, React.createElement(Compact, Object.assign({}, props, {
    dataScopeId: DataScopeId.AllData,
    text: _language.strings.selectDataSpanAll,
    count: dataCount.all
  })), React.createElement(Compact, Object.assign({}, props, {
    dataScopeId: DataScopeId.FilteredData,
    text: _language.strings.selectDataSpanFilter,
    count: dataCount.filtered
  })), React.createElement(Compact, Object.assign({}, props, {
    dataScopeId: DataScopeId.SelectedData,
    text: _language.strings.selectDataSpanSelection,
    count: dataCount.selected
  }))) : React.createElement("div", {
    className: _sanddanceReact.util.classList('sanddance-datascope', 'extended', props.active && 'active')
  }, React.createElement("div", null, React.createElement("div", null, props.dataSet), React.createElement("div", {
    className: "datascope-buttons"
  }, React.createElement(DataScopeButton, Object.assign({}, props, {
    dataScopeId: DataScopeId.AllData,
    text: _language.strings.selectDataSpanAll,
    count: dataCount.all
  })), React.createElement(DataScopeButton, Object.assign({}, props, {
    dataScopeId: DataScopeId.FilteredData,
    text: _language.strings.selectDataSpanFilter,
    count: dataCount.filtered
  })), React.createElement(DataScopeButton, Object.assign({}, props, {
    dataScopeId: DataScopeId.SelectedData,
    text: _language.strings.selectDataSpanSelection,
    count: dataCount.selected
  })))));
}

function Compact(props) {
  return React.createElement("div", {
    title: props.text,
    onClick: function onClick() {
      props.onDataScopeClick(props.dataScopeId);
    }
  }, short(props.count));
}

function DataScopeButton(props) {
  return React.createElement(_button.Button, {
    themePalette: props.themePalette,
    className: _sanddanceReact.util.classList('datascope-button', props.selectedDataScope === props.dataScopeId && 'selected'),
    disabled: props.disabled,
    text: props.text,
    onClick: function onClick() {
      props.onDataScopeClick(props.dataScopeId);
    },
    onRenderText: function onRenderText() {
      return React.createElement("div", {
        title: props.count > 0 ? props.count.toString() : ''
      }, React.createElement("label", null, props.text), React.createElement("div", null, short(props.count)));
    },
    onRenderIcon: function onRenderIcon() {
      return null;
    }
  });
}
},{"react":"ccIB","./button":"eqtW","d3-format":"SA6z","../language":"hk5u","@msrvida/sanddance-react":"MjKu"}],"pJLc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataBrowser = DataBrowser;

var React = _interopRequireWildcard(require("react"));

var _dataExporter = require("../controls/dataExporter");

var _dataItem = require("../controls/dataItem");

var _dataScope = require("../controls/dataScope");

var _dropdown = require("../controls/dropdown");

var _group = require("../controls/group");

var _iconButton = require("../controls/iconButton");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function DataBrowser(props) {
  function activateRecord(newIndex) {
    props.onActivate(props.data[newIndex], newIndex);
  }

  var index = props.index;
  var length = props.data && props.data.length || 0;
  return React.createElement(_group.Group, {
    label: _language.strings.labelDataBrowser,
    className: "sanddance-dataIndex"
  }, React.createElement(_dropdown.Dropdown, {
    label: _language.strings.labelDataScope,
    collapseLabel: true,
    options: [{
      key: _dataScope.DataScopeId.AllData,
      text: _language.strings.selectDataSpanAll,
      isSelected: props.selectedDataScope === _dataScope.DataScopeId.AllData
    }, {
      key: _dataScope.DataScopeId.FilteredData,
      text: _language.strings.selectDataSpanFilter,
      isSelected: props.selectedDataScope === _dataScope.DataScopeId.FilteredData
    }, {
      key: _dataScope.DataScopeId.SelectedData,
      text: _language.strings.selectDataSpanSelection,
      isSelected: props.selectedDataScope === _dataScope.DataScopeId.SelectedData
    }],
    onChange: function onChange(e, o) {
      props.onDataScopeClick(o.key);
    }
  }), !props.data && React.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: props.nullMessage
    }
  }), props.data && !props.data.length && React.createElement("div", null, props.zeroMessage), !!length && React.createElement("div", null, React.createElement("div", {
    className: "index"
  }, React.createElement(_iconButton.IconButton, {
    themePalette: props.themePalette,
    iconName: "ChevronLeftMed",
    onClick: function onClick(e) {
      return activateRecord(index <= 0 ? length - 1 : index - 1);
    },
    disabled: props.disabled || length === 1,
    title: _language.strings.buttonPrevDataItem
  }), React.createElement("span", null, _language.strings.record(index + 1, length)), React.createElement(_iconButton.IconButton, {
    themePalette: props.themePalette,
    iconName: "ChevronRightMed",
    onClick: function onClick(e) {
      return activateRecord(index >= length - 1 ? 0 : index + 1);
    },
    disabled: props.disabled || length === 1,
    title: _language.strings.buttonNextDataItem
  })), !props.itemVisible && React.createElement("div", {
    className: "item-filtered"
  }, _language.strings.labelDataItemIsFiltered), React.createElement(_dataItem.DataItem, {
    columns: props.columns,
    item: props.data[index],
    disabled: props.disabled,
    onSearch: props.onSearch,
    bingSearchDisabled: props.bingSearchDisabled
  })), props.dataExportHandler && props.data && React.createElement(_dataExporter.DataExportPicker, {
    theme: props.theme,
    initializer: {
      fileName: "".concat((0, _dataExporter.removeExtensions)(props.displayName), " (").concat(props.data.length, ")")
    },
    data: props.data,
    dataExportHandler: props.dataExportHandler,
    disabled: props.disabled
  }));
}
},{"react":"ccIB","../controls/dataExporter":"l7po","../controls/dataItem":"Gai8","../controls/dataScope":"OsNT","../controls/dropdown":"Uyrp","../controls/group":"Q3hf","../controls/iconButton":"dQNc","../language":"hk5u"}],"Tl9z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.snapshotThumbWidth = exports.defaultViewerOptions = exports.fontFamily = void 0;

var _themes = require("./themes");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var fontFamily = 'Segoe UI, sans-serif';
exports.fontFamily = fontFamily;
var defaultViewerOptions = {
  colors: (0, _themes.getColorSettingsFromThemePalette)(_themes.themePalettes['']),
  fontFamily: fontFamily
};
exports.defaultViewerOptions = defaultViewerOptions;
var snapshotThumbWidth = 300;
exports.snapshotThumbWidth = snapshotThumbWidth;
},{"./themes":"CgE3"}],"ENdt":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.maxCategoricalColors = 20;
var Recommender = /** @class */ (function () {
    function Recommender(columns, data) {
    }
    return Recommender;
}());
exports.Recommender = Recommender;
function defaultColorScheme(c) {
    if (c.quantitative) {
        return 'redyellowgreen';
    }
    else if (c.stats.distinctValueCount === 2) {
        return 'dual_redgreen';
    }
    else if (c.stats.distinctValueCount <= 10) {
        return 'category10';
    }
    return 'category20';
}
exports.defaultColorScheme = defaultColorScheme;

},{}],"oxgd":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var recommender_1 = require("./recommender");
var maxDistinctVal = 20;
var minDistinctVal = 2;
var BarChartRecommenderSummary = /** @class */ (function () {
    function BarChartRecommenderSummary(columns, data) {
        var score = -1;
        for (var i = 0; i < columns.length; i++) {
            var recommendation = new BarChartRecommender(columns[i], data).recommend();
            if (recommendation.score > score) {
                this.best = recommendation;
                score = recommendation.score;
            }
            if (score === 1)
                break;
        }
        for (var k = 0; k < columns.length; k++) {
            var column = columns[k];
            if (column.name === this.best.columns.x || column.stats.isSequential)
                continue;
            if (column.quantitative || (column.stats.distinctValueCount < recommender_1.maxCategoricalColors && column.stats.distinctValueCount > 1)) {
                this.best.columns.color = this.best.columns.sort = column.name;
                this.best.scheme = recommender_1.defaultColorScheme(column);
                if (column.quantitative) {
                    this.best.colorBin = 'quantile';
                }
                break;
            }
        }
    }
    BarChartRecommenderSummary.prototype.recommend = function () {
        return this.best;
    };
    return BarChartRecommenderSummary;
}());
exports.BarChartRecommenderSummary = BarChartRecommenderSummary;
var BarChartRecommender = /** @class */ (function () {
    function BarChartRecommender(column, data) {
        this.score = 0;
        this.column = column;
        //the total score for bar chart is 1
        this.rules = [
            function (column) {
                if (column.stats.isSequential)
                    return false;
                else if (column.quantitative) {
                    return true;
                }
                else if (!column.quantitative && column.stats.distinctValueCount <= maxDistinctVal && column.stats.distinctValueCount >= minDistinctVal) {
                    return true;
                }
                else {
                    return false;
                }
            }
        ];
        for (var i = 0; i < this.rules.length; i++) {
            if (this.rules[i](column))
                this.score++;
        }
    }
    BarChartRecommender.prototype.recommend = function () {
        var rec = {
            chart: 'barchart',
            columns: {
                x: this.column.name
            },
            score: this.score,
            scheme: undefined,
            view: '2d'
        };
        return rec;
    };
    return BarChartRecommender;
}());
exports.BarChartRecommender = BarChartRecommender;

},{"./recommender":"ENdt"}],"O4ew":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//TODO: languages other than english
var longitudeNames = ['lon', 'long', 'longitude'];
var latitudeNames = ['lat', 'latitude'];
function isSpec(names, limits, column, data) {
    var is = false;
    var cname = column.name.toLowerCase();
    for (var i = 0; i < names.length; i++) {
        if (names[i] === cname) {
            is = true;
            break;
        }
    }
    if (data) {
        //TODO: spin through data to see if it is within limits
    }
    return is;
}
function isLongitude(column, data) {
    return isSpec(longitudeNames, [-180, 180], column, data);
}
exports.isLongitude = isLongitude;
function isLatitude(column, data) {
    return isSpec(latitudeNames, [-90, 90], column, data);
}
exports.isLatitude = isLatitude;
function isGeo(column, data) {
    return isLatitude(column, data) || isLongitude(column, data);
}
exports.isGeo = isGeo;

},{}],"iBe2":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var recommender_1 = require("./recommender");
var geo_1 = require("./geo");
var ScatterPlotRecommenderSummary = /** @class */ (function () {
    function ScatterPlotRecommenderSummary(columns, data) {
        var rec = {
            chart: 'scatterplot',
            score: undefined,
            columns: {},
            scheme: undefined,
            view: '2d'
        };
        columns.forEach(function (column) {
            if (!rec.columns.x) {
                if (column.name.toLowerCase() === 'x') {
                    return rec.columns.x = column.name;
                }
                else if (geo_1.isLongitude(column)) {
                    return rec.columns.x = column.name;
                }
            }
            if (!rec.columns.y) {
                if (column.name.toLowerCase() === 'y') {
                    return rec.columns.y = column.name;
                }
                else if (geo_1.isLatitude(column)) {
                    return rec.columns.y = column.name;
                }
            }
            if (!rec.columns.color && !column.stats.isSequential) {
                if (column.quantitative || column.stats.distinctValueCount < recommender_1.maxCategoricalColors) {
                    rec.columns.color = rec.columns.sort = column.name;
                    rec.scheme = recommender_1.defaultColorScheme(column);
                    if (column.quantitative) {
                        rec.colorBin = 'quantile';
                    }
                    return;
                }
            }
        });
        if (rec.columns.x && rec.columns.y) {
            this.best = rec;
        }
    }
    ScatterPlotRecommenderSummary.prototype.recommend = function () {
        return this.best;
    };
    return ScatterPlotRecommenderSummary;
}());
exports.ScatterPlotRecommenderSummary = ScatterPlotRecommenderSummary;

},{"./recommender":"ENdt","./geo":"O4ew"}],"At4q":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var geo_1 = require("./geo");
function preferredColumnForTreemapSize(columns, strict) {
    for (var i = 0; i < columns.length; i++) {
        var c = columns[i];
        if (c.quantitative) {
            if (strict && c.stats.hasNegative)
                continue;
            if (strict && c.stats.isSequential)
                continue;
            if (strict && geo_1.isGeo(c))
                continue;
            return c.name;
        }
    }
}
exports.preferredColumnForTreemapSize = preferredColumnForTreemapSize;

},{"./geo":"O4ew"}],"fB3P":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var barChart_1 = require("./barChart");
var scatterPlot_1 = require("./scatterPlot");
var RecommenderSummary = /** @class */ (function () {
    function RecommenderSummary(columns, data) {
        var quickRec = new scatterPlot_1.ScatterPlotRecommenderSummary(columns, data).recommend();
        if (quickRec) {
            this.rec = quickRec;
        }
        else {
            var barChartrec = new barChart_1.BarChartRecommenderSummary(columns, data).recommend();
            if (barChartrec && barChartrec.score >= 1) {
                this.rec = barChartrec;
            }
            else {
                this.rec = {
                    chart: 'grid',
                    columns: {},
                    score: 1
                };
            }
        }
    }
    RecommenderSummary.prototype.recommend = function () {
        return this.rec;
    };
    return RecommenderSummary;
}());
exports.RecommenderSummary = RecommenderSummary;

},{"./barChart":"oxgd","./scatterPlot":"iBe2"}],"i6UQ":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
__export(require("./barChart"));
__export(require("./geo"));
__export(require("./scatterPlot"));
__export(require("./treemap"));
__export(require("./recommenderSummary"));

},{"./barChart":"oxgd","./geo":"O4ew","./scatterPlot":"iBe2","./treemap":"At4q","./recommenderSummary":"fB3P"}],"f8v0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureColumnsExist = ensureColumnsExist;
exports.ensureColumnsPopulated = ensureColumnsPopulated;

var _chartRecommender = require("@msrvida/chart-recommender");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("./language");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function ensureColumnsExist(insightColumns, actualColumns, transform) {
  var _loop = function _loop(role) {
    var columnName = insightColumns[role];
    var column = actualColumns.filter(function (c) {
      return c.name === columnName;
    })[0];
    var transformColumn = transform ? transform.filter(function (t) {
      switch (t.type) {
        case 'formula':
          {
            return t.as === columnName;
          }
      }
    })[0] : null;

    if (!(column || transformColumn)) {
      delete insightColumns[role];
    }
  };

  //ensure columns exist
  for (var role in insightColumns) {
    _loop(role);
  }
}

function ensureColumnsPopulated(chart, insightColumns, actualColumns) {
  //ensure columns are populated
  var nonInternal = actualColumns.filter(function (c) {
    return !_sanddanceReact.SandDance.util.isInternalFieldName(c.name);
  });
  var firstColumn = nonInternal[0];
  var firstColumnName = firstColumn && firstColumn.name;
  var firstQuantitative = nonInternal.filter(function (c) {
    return c.quantitative;
  })[0];
  var firstQuantitativeColumnName = firstQuantitative && firstQuantitative.name;

  var ensureColumn = function ensureColumn(role, quantitative) {
    if (!insightColumns[role]) {
      insightColumns[role] = quantitative ? firstQuantitativeColumnName : firstColumnName;
    }
  };

  switch (chart) {
    case 'barchart':
    case 'barchartV':
      ensureColumn('x');
      ensureColumn('size', true);
      break;

    case 'barchartH':
      ensureColumn('y');
      ensureColumn('size', true);
      break;

    case 'density':
    case 'scatterplot':
    case 'stacks':
      ensureColumn('x');
      ensureColumn('y');
      break;

    case 'treemap':
      if (!insightColumns.size) {
        insightColumns.size = (0, _chartRecommender.preferredColumnForTreemapSize)(actualColumns, true);

        if (!insightColumns.size) {
          insightColumns.size = (0, _chartRecommender.preferredColumnForTreemapSize)(actualColumns, false);
        }
      }

      if (!insightColumns.size) {
        //error - no numeric column
        return [_language.strings.errorColumnMustBeNumeric];
      }

      break;
  }
}
},{"@msrvida/chart-recommender":"i6UQ","@msrvida/sanddance-react":"MjKu","./language":"hk5u"}],"yvMl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPosition = getPosition;

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function hasClientXY(e) {
  if (e && e.clientX !== undefined && e.clientX !== undefined) {
    return {
      top: e.clientY,
      left: e.clientX
    };
  }
}

function getPosition(e) {
  var xy = hasClientXY(e);

  if (xy) {
    return xy;
  }

  var te = e;

  if (te) {
    for (var i = 0; i < te.touches.length; i++) {
      var _xy = hasClientXY(te.touches[i]);

      if (_xy) {
        return _xy;
      }
    }
  }
}
},{}],"xBH3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getValidOperators = getValidOperators;
exports.getText = getText;
exports.SearchTerm = SearchTerm;
exports.maxAutocomplete = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _dropdown = require("./dropdown");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var maxAutocomplete = 100;
exports.maxAutocomplete = maxAutocomplete;

function getValidOperators(column) {
  var type = column && column.type;

  switch (type) {
    case 'boolean':
      return [['==', _language.strings.searchEQ], ['!=', _language.strings.searchNEQ], ['isnullorEmpty', _language.strings.searchNULL]];

    case 'date':
    case 'integer':
    case 'number':
      return [['==', _language.strings.searchEQ], ['!=', _language.strings.searchNEQ], ['>', _language.strings.searchGT], ['>=', _language.strings.searchGTE], ['<', _language.strings.searchLT], ['<=', _language.strings.searchLTE], ['isnullorEmpty', _language.strings.searchNULL]];

    case 'string':
    default:
      return [['==', _language.strings.searchEQ], ['!=', _language.strings.searchNEQ], ['>', _language.strings.searchGT], ['>=', _language.strings.searchGTE], ['<', _language.strings.searchLT], ['<=', _language.strings.searchLTE], ['contains', _language.strings.searchIN], ['starts', _language.strings.searchSW], ['isnullorEmpty', _language.strings.searchNULL]];
  }
}

function getExpressionClauses(currClause, disableOR) {
  var keys = [['&&', _language.strings.searchAND]];

  if (!disableOR) {
    keys.push(['||', _language.strings.searchOR]);
  }

  return keys.map(function (key, i) {
    var _key = _slicedToArray(key, 2),
        clause = _key[0],
        text = _key[1];

    var selected = currClause == clause; //deliberate double equal 

    var option = {
      key: i,
      text: text,
      data: clause,
      selected: selected
    };
    return option;
  });
}

function getOperators(ex, column) {
  var anySelected = false;
  var validOperators = getValidOperators(column);
  var options = validOperators.map(function (validoperator) {
    var _validoperator = _slicedToArray(validoperator, 2),
        op = _validoperator[0],
        text = _validoperator[1];

    var selected = ex.operator === op;
    anySelected = anySelected || selected;
    var option = {
      key: op,
      text: text,
      data: op,
      selected: selected
    };
    return option;
  });

  if (!anySelected) {
    options[0].selected = true;
  }

  return options;
}

function getDistinctValues(data, columnName) {
  var distinctMap = {};

  for (var i = 0; i < data.length; i++) {
    var row = data[i];
    var value = row[columnName];
    distinctMap[value] = true;
  }

  return Object.keys(distinctMap).sort();
}

function getValues(ex, column, data, autoCompleteDistinctValues) {
  var stats = column && column.stats;

  if (stats && stats.distinctValueCount < maxAutocomplete) {
    if (!autoCompleteDistinctValues[column.name]) {
      autoCompleteDistinctValues[column.name] = getDistinctValues(data, column.name);
    }

    return autoCompleteDistinctValues[column.name].map(function (v, i) {
      return {
        key: i,
        text: v
      };
    });
  }

  return [];
}

function getText(ex) {
  if (ex.operator === 'isnullorEmpty') return '';
  return typeof ex.value === 'string' ? ex.value : ex.value == null ? '' : ex.value.toString();
}

function SearchTerm(props) {
  var ex = props.searchExpression;
  var possibleValues = getValues(ex, props.column, props.data, props.autoCompleteDistinctValues); //TODO better date handling with calendar picker

  return React.createElement("div", null, props.index > 0 && React.createElement(_dropdown.Dropdown, {
    collapseLabel: props.collapseLabels,
    className: "search-field",
    label: _language.strings.labelSearchClause,
    dropdownWidth: 120,
    disabled: !ex.unlocked || props.disableOR,
    options: getExpressionClauses(ex.clause, props.disableOR),
    onChange: function onChange(e, o) {
      return props.onUpdateExpression({
        clause: o.data
      }, props.index);
    }
  }), React.createElement(_dropdown.Dropdown, {
    collapseLabel: props.collapseLabels,
    className: "search-field",
    label: _language.strings.labelSearchColumn,
    options: [{
      key: '',
      text: _language.strings.selectAny,
      data: null,
      selected: ex.name === null
    }].concat(props.columns.map(function (c, i) {
      return {
        key: c.name,
        text: c.name,
        data: c,
        selected: c.name === ex.name
      };
    })),
    onChange: function onChange(e, o) {
      return props.onUpdateExpression({
        name: o.data && o.data.name || null
      }, props.index);
    }
  }), React.createElement(_dropdown.Dropdown, {
    collapseLabel: props.collapseLabels,
    className: "search-field",
    label: _language.strings.labelSearchOperator,
    dropdownWidth: 120,
    options: getOperators(ex, props.column),
    onChange: function onChange(e, o) {
      return props.onUpdateExpression({
        operator: o.data
      }, props.index);
    }
  }), possibleValues.length > 0 && React.createElement(_base.base.fabric.ComboBox, {
    className: "search-field",
    label: props.collapseLabels ? null : _language.strings.labelSearchValue,
    placeholder: _language.strings.labelSearchValuePlaceholder,
    disabled: ex.operator === 'isnullorEmpty',
    dropdownWidth: _dropdown.dropdownWidth,
    allowFreeform: true,
    autoComplete: "on",
    errorMessage: ex.errorMessage,
    text: getText(ex),
    options: getValues(ex, props.column, props.data, props.autoCompleteDistinctValues),
    onChange: function onChange(e, o, i, value) {
      if (o) {
        value = o.text;
      }

      props.onUpdateExpression({
        value: value
      }, props.index);
    }
  }), possibleValues.length === 0 && React.createElement(_base.base.fabric.TextField, {
    className: "search-field",
    label: props.collapseLabels ? null : _language.strings.labelSearchValue,
    placeholder: _language.strings.labelSearchValuePlaceholder,
    disabled: ex.operator === 'isnullorEmpty',
    errorMessage: ex.errorMessage,
    value: getText(ex),
    onChange: function onChange(e, v) {
      return props.onUpdateExpression({
        value: v
      }, props.index);
    }
  }));
}
},{"react":"ccIB","../base":"Vlbn","./dropdown":"Uyrp","../language":"hk5u"}],"ozxe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Search = void 0;

var React = _interopRequireWildcard(require("react"));

var _searchTerm = require("../controls/searchTerm");

var _base = require("../base");

var _button = require("../controls/button");

var _dropdown = require("../controls/dropdown");

var _group = require("../controls/group");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var maxClauses = 5;

function getColumnWithName(columnName, columns) {
  for (var i = 0; i < columns.length; i++) {
    if (columns[i].name === columnName) return columns[i];
  }
}

function validateExpression(ex) {
  if (ex.operator === 'isnullorEmpty') {
    ex.errorMessage = null;
    return;
  }

  var s = (0, _searchTerm.getText)(ex);

  if (s.length === 0) {
    ex.errorMessage = _language.strings.labelRequired;
  } else {
    ex.errorMessage = null;
  }
}

function clearExpressionValidation(ex) {
  if (ex.operator === 'isnullorEmpty') {
    ex.errorMessage = null;
    return;
  }

  var s = (0, _searchTerm.getText)(ex);

  if (s.length !== 0) {
    ex.errorMessage = null;
  }
}

function getGroupClauses(currClause, index, disableGroupOR) {
  var keys;

  if (index === 0) {
    keys = [[null, _language.strings.searchWHERE]];
  } else {
    keys = [['&&', _language.strings.searchAND]];

    if (!disableGroupOR) {
      keys.push(['||', _language.strings.searchOR]);
    }
  }

  return keys.map(function (key, i) {
    var _key = _slicedToArray(key, 2),
        clause = _key[0],
        text = _key[1];

    var selected = currClause == clause; //deliberate double equal 

    var option = {
      key: i,
      text: text,
      data: clause,
      selected: selected
    };
    return option;
  });
}

var Search =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Search, _React$Component);

  function Search(props) {
    var _this;

    _classCallCheck(this, Search);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));
    _this.state = _this.getInitialState(_this.props);
    return _this;
  }

  _createClass(Search, [{
    key: "getInitialState",
    value: function getInitialState(props) {
      var initialState = {
        groups: props.initializer.search || [this.newGroup(0, null)],
        sortedColumns: _toConsumableArray(props.initializer.columns).sort(function (a, b) {
          return a.name.localeCompare(b.name);
        }),
        initializer: props.initializer
      };
      initialState.groups.forEach(function (group) {
        group.expressions.forEach(function (ex) {
          return ex.unlocked = group.expressions.length <= 2;
        });
      });
      return initialState;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!_sanddanceReact.util.deepCompare(this.props.initializer, this.state.initializer)) {
        this.setState(this.getInitialState(this.props));
      }
    }
  }, {
    key: "validateAndSearch",
    value: function validateAndSearch() {
      var _this2 = this;

      var groups = _toConsumableArray(this.state.groups);

      groups.forEach(function (group) {
        group.expressions.forEach(validateExpression);
        var errors = group.expressions.reduce(function (p, c) {
          return p || c.errorMessage;
        }, '');

        if (errors) {
          _this2.setState({
            groups: groups
          });
        } else {
          _this2.props.onSelect(_this2.state.groups);
        }
      });
    }
  }, {
    key: "newGroup",
    value: function newGroup(key, clause) {
      var group = {
        key: key,
        clause: clause,
        expressions: [this.newExpression(0, null)]
      };
      return group;
    }
  }, {
    key: "updateGroup",
    value: function updateGroup(partialGroup, groupIndex) {
      var groups = _toConsumableArray(this.state.groups);

      var group = Object.assign(Object.assign({}, groups[groupIndex]), partialGroup);
      groups[groupIndex] = group;
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "addGroup",
    value: function addGroup() {
      var groups = _toConsumableArray(this.state.groups);

      var maxKey = groups.reduce(function (max, p) {
        return p.key > max ? p.key : max;
      }, groups[0].key);
      var newGroup = this.newGroup(maxKey + 1, '&&');
      groups.push(newGroup);
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "deleteGroup",
    value: function deleteGroup(groupIndex) {
      var groups = _toConsumableArray(this.state.groups);

      groups.splice(groupIndex, 1);
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "newExpression",
    value: function newExpression(key, clause) {
      var ex = {
        key: key,
        clause: clause,
        name: null,
        operator: 'contains',
        value: ''
      };
      return ex;
    }
  }, {
    key: "addExpression",
    value: function addExpression(groupIndex) {
      var groups = _toConsumableArray(this.state.groups);

      var group = groups[groupIndex];
      var maxKey = group.expressions.reduce(function (max, p) {
        return p.key > max ? p.key : max;
      }, group.expressions[0].key);
      var newEx = this.newExpression(maxKey + 1, '&&');
      group.expressions.push(newEx);

      if (group.expressions.length === 2) {
        newEx.unlocked = true;
      } else {
        group.expressions.forEach(function (ex) {
          return ex.unlocked = false;
        });
        newEx.clause = group.expressions[1].clause;
      }

      this.setState({
        groups: groups
      });
    }
  }, {
    key: "updateExpression",
    value: function updateExpression(partialEx, groupIndex, index) {
      var groups = _toConsumableArray(this.state.groups);

      var group = groups[groupIndex];

      var ex = _sanddanceReact.SandDance.VegaDeckGl.util.clone(group.expressions[index]);

      if (ex.name !== partialEx.name) {
        //choose an appropriate operator when switching data type
        var oldColumn = getColumnWithName(ex.name, this.state.sortedColumns);
        var newColumn = getColumnWithName(partialEx.name, this.state.sortedColumns);
        var oldType = oldColumn && oldColumn.type;
        var newType = newColumn && newColumn.type;

        if (oldType !== newType) {
          var newOperators = (0, _searchTerm.getValidOperators)(newColumn).map(function (validOperator) {
            return validOperator[0];
          }); //see if old operator is compatible

          if (newOperators.indexOf(ex.operator) < 0) {
            //not compatible, so choose "equal"
            partialEx.operator = '==';
          }
        }
      }

      Object.assign(ex, partialEx);
      clearExpressionValidation(ex);
      group.expressions[index] = ex;
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "deleteExpression",
    value: function deleteExpression(groupIndex, index) {
      var groups = _toConsumableArray(this.state.groups);

      var group = groups[groupIndex];

      var expressions = _toConsumableArray(group.expressions);

      expressions.splice(index, 1);

      if (expressions.length === 2) {
        expressions[1].unlocked = true;
      }

      group.expressions = expressions;
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return React.createElement(_group.Group, {
        className: "sanddance-search",
        label: _language.strings.labelSearch
      }, React.createElement("div", null, this.state.groups.map(function (group, groupIndex) {
        return React.createElement("div", {
          className: "sanddance-search-group",
          key: group.key
        }, React.createElement(_dropdown.Dropdown, {
          collapseLabel: _this3.props.collapseLabels,
          className: "search-group-clause",
          label: _language.strings.labelSearchClause,
          disabled: groupIndex === 0 || _this3.props.disableGroupOR,
          dropdownWidth: 120,
          options: getGroupClauses(group.clause, groupIndex, _this3.props.disableGroupOR),
          onChange: function onChange(e, o) {
            return _this3.updateGroup({
              clause: o.data
            }, groupIndex);
          }
        }), React.createElement("div", null, group.expressions.map(function (ex, i) {
          return React.createElement("div", {
            className: "sanddance-search-expression",
            key: ex.key
          }, React.createElement(_searchTerm.SearchTerm, {
            collapseLabels: _this3.props.collapseLabels,
            onUpdateExpression: function onUpdateExpression(ex, i) {
              return _this3.updateExpression(ex, groupIndex, i);
            },
            autoCompleteDistinctValues: _this3.props.autoCompleteDistinctValues,
            index: i,
            columns: _this3.state.sortedColumns,
            data: _this3.props.data,
            searchExpression: ex,
            disableOR: _this3.props.disableExpressionOR,
            column: getColumnWithName(ex.name, _this3.state.sortedColumns)
          }), group.expressions.length > 1 && React.createElement(_button.Button, {
            themePalette: _this3.props.themePalette,
            className: "search-action",
            iconName: "Cancel",
            onClick: function onClick() {
              return _this3.deleteExpression(groupIndex, i);
            },
            text: _language.strings.buttonDeleteExpression
          }));
        })), group.expressions.length < maxClauses && React.createElement("div", null, React.createElement(_button.Button, {
          themePalette: _this3.props.themePalette,
          className: "search-action",
          iconName: "Add",
          onClick: function onClick() {
            return _this3.addExpression(groupIndex);
          },
          text: _language.strings.buttonAddExpression
        })), _this3.state.groups.length > 1 && React.createElement(_button.Button, {
          themePalette: _this3.props.themePalette,
          className: "search-action",
          iconName: "Cancel",
          onClick: function onClick() {
            return _this3.deleteGroup(groupIndex);
          },
          text: _language.strings.buttonDeleteExpressionGroup
        }));
      }), this.state.groups.length < maxClauses && React.createElement("div", null, React.createElement(_button.Button, {
        themePalette: this.props.themePalette,
        className: "search-action search-bottom-action",
        iconName: "Add",
        onClick: function onClick() {
          return _this3.addGroup();
        },
        text: _language.strings.buttonAddExpressionGroup
      }))), React.createElement(_base.base.fabric.PrimaryButton, {
        className: "search-action search-bottom-action",
        text: _language.strings.buttonSelect,
        onClick: function onClick() {
          return _this3.validateAndSearch();
        }
      }));
    }
  }]);

  return Search;
}(React.Component);

exports.Search = Search;
},{"react":"ccIB","../controls/searchTerm":"xBH3","../base":"Vlbn","../controls/button":"eqtW","../controls/dropdown":"Uyrp","../controls/group":"Q3hf","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"f19h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadDataArray = exports.loadDataFile = void 0;

var _sanddanceReact = require("@msrvida/sanddance-react");

var loadDataFile = function loadDataFile(dataFile) {
  return new Promise(function (resolve, reject) {
    var vega = _sanddanceReact.SandDance.VegaDeckGl.base.vega;
    var loader = vega.loader();

    function handleRawText(text) {
      var data;

      try {
        data = vega.read(text, {
          type: dataFile.type,
          parse: {}
        });
      } catch (e) {
        reject(e);
      }

      if (data) {
        loadDataArray(data, dataFile.type).then(function (dc) {
          if (dataFile.snapshotsUrl) {
            fetch(dataFile.snapshotsUrl).then(function (response) {
              return response.json();
            }).then(function (snapshots) {
              dc.snapshots = snapshots;
              resolve(dc);
            }).catch(reject);
          } else if (dataFile.snapshots) {
            dc.snapshots = dataFile.snapshots;
            resolve(dc);
          } else {
            resolve(dc);
          }
        }).catch(reject);
      }
    }

    if (dataFile.dataUrl) {
      loader.load(dataFile.dataUrl).then(handleRawText).catch(reject);
    } else if (dataFile.rawText) {
      handleRawText(dataFile.rawText);
    } else {
      reject('dataFile object must have either dataUrl or rawText property set.');
    }
  });
};

exports.loadDataFile = loadDataFile;

var loadDataArray = function loadDataArray(data, type) {
  return new Promise(function (resolve, reject) {
    var parse = type === 'csv' || type === 'tsv';

    if (parse) {
      //convert empty strings to null so that vega.inferType will get dates
      data.forEach(function (row) {
        for (var column in row) {
          if (row[column] === '') {
            row[column] = null;
          }
        }
      });
    }

    var columns = _sanddanceReact.SandDance.util.getColumnsFromData(_sanddanceReact.SandDance.VegaDeckGl.base.vega.inferTypes, data).sort(function (a, b) {
      return a.name.localeCompare(b.name);
    });

    if (parse) {
      var booleanColumns = columns.filter(function (c) {
        return c.type === 'boolean';
      });
      var dateColumns = columns.filter(function (c) {
        return c.type === 'date';
      });
      var numericColumns = columns.filter(function (c) {
        return c.type === 'integer' || c.type === 'number';
      });
      data.forEach(function (obj) {
        booleanColumns.forEach(function (c) {
          obj[c.name] = ('' + obj[c.name]).toLowerCase() === 'true';
        });
        dateColumns.forEach(function (c) {
          var input = obj[c.name];

          if (input !== null) {
            var d = new Date(input);
            d.input = input;
            obj[c.name] = d;
          }
        });
        numericColumns.forEach(function (c) {
          var n = parseFloat(obj[c.name]);
          obj[c.name] = isNaN(n) ? null : n;
        });
      });
    }

    resolve({
      data: data,
      columns: columns
    });
  });
};

exports.loadDataArray = loadDataArray;
},{"@msrvida/sanddance-react":"MjKu"}],"UUG7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onBeforeCreateLayers = onBeforeCreateLayers;
exports.PositionedColumnMap = void 0;

var React = _interopRequireWildcard(require("react"));

var _columnMap = require("./controls/columnMap");

var _sanddanceReact = require("@msrvida/sanddance-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function onBeforeCreateLayers(stage, specCapabilities) {
  var _loop = function _loop(axisName) {
    specCapabilities.roles.forEach(function (specRole) {
      if (specRole.role === axisName) {
        var axes = stage.axes[axisName];
        axes.forEach(function (axis) {
          if (axis.title) {
            var textItem = axis.title;
            textItem.specRole = specRole;
          }
        });
      }
    });
  };

  for (var axisName in stage.axes) {
    _loop(axisName);
  }
}

function px(n) {
  return n + 'px';
}

var PositionedColumnMap =
/*#__PURE__*/
function (_React$Component) {
  _inherits(PositionedColumnMap, _React$Component);

  function PositionedColumnMap(props) {
    var _this;

    _classCallCheck(this, PositionedColumnMap);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PositionedColumnMap).call(this, props));
    var left = props.left,
        top = props.top;
    _this.state = {
      left: left,
      top: top
    };
    _this.dropdownRef = React.createRef();
    return _this;
  }

  _createClass(PositionedColumnMap, [{
    key: "focus",
    value: function focus() {
      if (!this.focused) {
        this.focused = true;
        this.dropdownRef.current.focus(true);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var size = _sanddanceReact.SandDance.VegaDeckGl.util.outerSize(this.div);

      var over = {
        left: Math.max(0, this.state.left + size.width - this.props.container.offsetWidth),
        top: Math.max(0, this.state.top + size.height - this.props.container.offsetHeight)
      };

      if (over.left || over.top) {
        var _this$state = this.state,
            left = _this$state.left,
            top = _this$state.top;
        left -= over.left;
        top -= over.top;
        this.setState({
          left: left,
          top: top
        });
      } else {
        this.focus();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.focus();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return React.createElement("div", {
        ref: function ref(div) {
          if (div) _this2.div = div;
        },
        className: "sanddance-columnMap-absolute",
        style: {
          position: 'absolute',
          left: px(this.state.left),
          top: px(this.state.top)
        }
      }, React.createElement(_columnMap.ColumnMap, Object.assign({}, this.props, {
        componentRef: this.dropdownRef,
        hideSignals: true
      })));
    }
  }]);

  return PositionedColumnMap;
}(React.Component);

exports.PositionedColumnMap = PositionedColumnMap;
},{"react":"ccIB","./controls/columnMap":"DSho","@msrvida/sanddance-react":"MjKu"}],"RvaL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.version = void 0;
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var version = '3.0.0-alpha.2';
exports.version = version;
},{}],"zKGJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Settings = void 0;

var React = _interopRequireWildcard(require("react"));

var SandDanceReact = _interopRequireWildcard(require("@msrvida/sanddance-react"));

var _base = require("../base");

var _canvas = require("../canvas");

var _dialog = require("../controls/dialog");

var _dropdown = require("../controls/dropdown");

var _group = require("../controls/group");

var _signal = require("../controls/signal");

var _language = require("../language");

var _version = require("../version");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SandDance = SandDanceReact.SandDance;
var DataRefType;

(function (DataRefType) {
  DataRefType[DataRefType["none"] = 0] = "none";
  DataRefType[DataRefType["inline"] = 1] = "inline";
  DataRefType[DataRefType["url"] = 2] = "url";
})(DataRefType || (DataRefType = {}));

function filterSignals(signal) {
  switch (signal.name) {
    case SandDance.constants.SignalNames.XBins:
    case SandDance.constants.SignalNames.YBins:
    case SandDance.constants.SignalNames.FacetBins:
    case SandDance.constants.SignalNames.FacetVBins:
    case SandDance.constants.SignalNames.ColorBinCount:
    case SandDance.constants.SignalNames.ColorReverse:
    case SandDance.constants.SignalNames.PointSize:
    case SandDance.constants.SignalNames.TreeMapMethod:
      return false;

    default:
      return !!signal.bind;
  }
}

function cloneData(vegaSpec) {
  var data0 = vegaSpec.data[0];
  var valuesData = data0;
  var values = valuesData.values;
  delete valuesData.values;
  var data = SandDance.VegaDeckGl.util.clone(vegaSpec.data);
  valuesData.values = values;
  return {
    data: data,
    values: values
  };
}

function cloneScales(vegaSpec) {
  return SandDance.VegaDeckGl.util.clone(vegaSpec.scales);
}

function serializeSpec(vegaSpec, datafile, dataRefType, transform, scheme) {
  var scales = cloneScales(vegaSpec);
  var colorScale = scales.filter(function (scale) {
    return scale.name === SandDance.constants.ScaleNames.Color;
  })[0];

  if (scheme.indexOf('dual_') >= 0) {
    colorScale.range = SandDance.colorSchemes.filter(function (cs) {
      return cs.scheme === scheme;
    })[0].colors;
  }

  var clone = cloneData(vegaSpec);
  var data0 = clone.data[0];

  if (dataRefType === DataRefType.inline) {
    var valuesData = data0;
    valuesData.format = {
      parse: 'auto',
      type: 'json'
    };
    valuesData.values = clone.values;
  } else if (dataRefType === DataRefType.none) {
    var _valuesData = data0;
    _valuesData.values = [];

    if (transform) {
      if (_valuesData.transform) {
        _valuesData.transform.push.apply(_valuesData.transform, transform);
      } else {
        _valuesData.transform = transform;
      }
    }
  } else if (dataRefType === DataRefType.url) {
    var urlData = data0;
    urlData.url = datafile.dataUrl;
    urlData.format = {
      parse: 'auto',
      type: datafile.type
    };

    if (transform) {
      if (urlData.transform) {
        urlData.transform.push.apply(urlData.transform, transform);
      } else {
        urlData.transform = transform;
      }
    }
  }

  return Object.assign(Object.assign({}, vegaSpec), {
    data: clone.data,
    scales: scales
  });
}

function defaultDataRefType(datafile) {
  if (datafile.dataUrl) {
    return DataRefType.url;
  }

  return DataRefType.none;
}

function initState(props) {
  return {
    showSystemDialog: false,
    showVegaDialog: false,
    dataRefType: defaultDataRefType(props.dataFile),
    spec: null
  };
}

function signalGroupKey(key) {
  for (var i = 0; i < _language.strings.signalGroups.length; i++) {
    if (_language.strings.signalGroups[i].prefix === key) {
      return key;
    }
  }

  return '*';
}

function vegaSignalGroups(vegaSignals) {
  var signalGroupMap = {};
  vegaSignals.forEach(function (vs) {
    var split = vs.name.split('_');
    var key = signalGroupKey(split[0]);
    signalGroupMap[key] = signalGroupMap[key] || [];
    signalGroupMap[key].push(vs);
  });
  return signalGroupMap;
}

var Settings =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Settings, _React$Component);

  function Settings(props) {
    var _this;

    _classCallCheck(this, Settings);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));
    _this.state = initState(props);
    return _this;
  }

  _createClass(Settings, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var props = this.props,
          state = this.state;
      if (!props.explorer.viewer || !props.explorer.viewer.vegaSpec) return null;
      var options = [{
        key: DataRefType.none,
        text: _language.strings.selectVegaSpecDataNone,
        selected: this.state.dataRefType === DataRefType.none,
        data: DataRefType.none
      }, !props.dataFile.rawText && {
        key: DataRefType.url,
        text: _language.strings.selectVegaSpecDataUrl,
        selected: this.state.dataRefType === DataRefType.url,
        data: DataRefType.url
      }, {
        key: DataRefType.inline,
        text: _language.strings.selectVegaSpecDataInline,
        selected: this.state.dataRefType === DataRefType.inline,
        data: DataRefType.inline
      }].filter(Boolean);
      var signalGroupMap = vegaSignalGroups(props.explorer.viewer.vegaSpec.signals);
      return React.createElement("div", null, _language.strings.signalGroups.map(function (sg) {
        var vegaSignals = signalGroupMap[sg.prefix];

        if (vegaSignals) {
          var filteredVegaSignals = vegaSignals.filter(filterSignals);

          if (filteredVegaSignals.length > 0) {
            return React.createElement(_group.Group, {
              key: sg.prefix,
              label: sg.label
            }, filteredVegaSignals.map(function (signal, i) {
              return React.createElement(_signal.Signal, {
                key: i,
                signal: signal,
                explorer: props.explorer,
                newViewStateTarget: false
              });
            }));
          }
        }
      }), React.createElement(_group.Group, {
        label: _language.strings.labelChartCanvas
      }, React.createElement(_base.base.fabric.Toggle, {
        label: _language.strings.labelShowAxes,
        defaultChecked: !props.hideAxes,
        onChange: function onChange(e, checked) {
          return props.onToggleAxes(!checked);
        }
      }), React.createElement(_base.base.fabric.Toggle, {
        label: _language.strings.labelShowLegend,
        defaultChecked: !props.hideLegend,
        onChange: function onChange(e, checked) {
          return props.onToggleLegend(!checked);
        }
      })), React.createElement(_group.Group, {
        label: _language.strings.labelTools
      }, React.createElement(_base.base.fabric.DefaultButton, {
        text: _language.strings.buttonShowVegaSpec,
        onClick: function onClick() {
          return _this2.setState({
            showVegaDialog: true,
            spec: serializeSpec(props.explorer.viewer.vegaSpec, props.dataFile, _this2.state.dataRefType, props.explorer.viewer.getInsight().transform, _this2.props.scheme)
          });
        }
      })), React.createElement(_group.Group, {
        label: _language.strings.labelSnapshots
      }, React.createElement(_base.base.fabric.Slider, {
        label: _language.strings.labelSnapshotSettingThumbnailWidth,
        onChange: function onChange(value) {
          _this2.props.explorer.snapshotThumbWidth = value;
        },
        min: 100,
        max: 800,
        defaultValue: this.props.explorer.snapshotThumbWidth
      })), React.createElement(_group.Group, {
        label: _language.strings.labelTransitionDurations
      }, React.createElement(_base.base.fabric.Slider, {
        label: _language.strings.labelTransitionColor,
        onChange: function onChange(value) {
          _this2.props.explorer.viewerOptions.transitionDurations.color = value;
        },
        min: 0,
        max: 10000,
        defaultValue: this.props.explorer.viewerOptions.transitionDurations.color
      }), React.createElement(_base.base.fabric.Slider, {
        label: _language.strings.labelTransitionPosition,
        onChange: function onChange(value) {
          _this2.props.explorer.viewerOptions.transitionDurations.position = value;
        },
        min: 0,
        max: 10000,
        defaultValue: this.props.explorer.viewerOptions.transitionDurations.position
      }), React.createElement(_base.base.fabric.Slider, {
        label: _language.strings.labelTransitionSize,
        onChange: function onChange(value) {
          _this2.props.explorer.viewerOptions.transitionDurations.size = value;
        },
        min: 0,
        max: 10000,
        defaultValue: this.props.explorer.viewerOptions.transitionDurations.size
      }), React.createElement(_base.base.fabric.Slider, {
        label: _language.strings.labelTransitionCamera,
        onChange: function onChange(value) {
          _this2.props.explorer.viewerOptions.transitionDurations.view = value;
        },
        min: 0,
        max: 10000,
        defaultValue: this.props.explorer.viewerOptions.transitionDurations.view
      })), props.additionalSettings && props.additionalSettings.map(function (g, i) {
        return React.createElement(_group.Group, {
          key: i,
          label: g.groupLabel
        }, g.children);
      }), React.createElement(_group.Group, {
        label: _language.strings.labelSystem
      }, React.createElement(_base.base.fabric.DefaultButton, {
        text: _language.strings.labelSystemInfo,
        onClick: function onClick() {
          return _this2.setState({
            showSystemDialog: true
          });
        }
      })), React.createElement(_dialog.Dialog, {
        hidden: !state.showVegaDialog,
        onDismiss: function onDismiss() {
          return _this2.setState(initState(_this2.props));
        },
        minWidth: "80%",
        title: _language.strings.labelVegaSpec,
        buttons: [React.createElement(_base.base.fabric.PrimaryButton, {
          key: "copy",
          iconProps: {
            iconName: 'Copy'
          },
          text: _language.strings.buttonCopyToClipboard,
          onClick: function onClick() {
            var pre = document.getElementById('sanddance-vega-spec');
            var range = document.createRange();
            range.selectNode(pre);
            var selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
            document.execCommand('copy');
          }
        }), React.createElement(_base.base.fabric.DefaultButton, {
          key: "edit",
          iconProps: {
            iconName: 'OpenInNewWindow'
          },
          text: _language.strings.buttonLaunchVegaEditor,
          onClick: function onClick() {
            window.open('https://vega.github.io/editor/', '_blank');
          }
        })]
      }, React.createElement(_dropdown.Dropdown, {
        label: _language.strings.labelVegaSpecData,
        options: options,
        onChange: function onChange(e, o) {
          return _this2.setState({
            dataRefType: o.data,
            spec: serializeSpec(props.explorer.viewer.vegaSpec, props.dataFile, o.data, props.explorer.viewer.getInsight().transform, _this2.props.scheme)
          });
        }
      }), React.createElement("pre", {
        id: "sanddance-vega-spec"
      }, JSON.stringify(this.state.spec, null, 2)), React.createElement("div", null, _language.strings.labelVegaSpecNotes)), React.createElement(_dialog.Dialog, {
        hidden: !state.showSystemDialog,
        onDismiss: function onDismiss() {
          return _this2.setState(initState(_this2.props));
        },
        title: _language.strings.labelSystemInfo
      }, React.createElement("ul", null, this.props.children, React.createElement("li", null, "SandDanceExplorer version: ", _version.version), React.createElement("li", null, "SandDanceReact version: ", SandDanceReact.version), React.createElement("li", null, "SandDance version: ", SandDance.version), React.createElement("li", null, "WebGL enabled: ", _canvas.capabilities.webgl ? _language.strings.labelYes : _language.strings.labelNo), React.createElement("li", null, "WebGL2 enabled: ", _canvas.capabilities.webgl2 ? _language.strings.labelYes : _language.strings.labelNo))));
    }
  }]);

  return Settings;
}(React.Component);

exports.Settings = Settings;
},{"react":"ccIB","@msrvida/sanddance-react":"MjKu","../base":"Vlbn","../canvas":"Dryx","../controls/dialog":"cFWm","../controls/dropdown":"Uyrp","../controls/group":"Q3hf","../controls/signal":"OWDI","../language":"hk5u","../version":"RvaL"}],"GuKX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scrollable = Scrollable;

var React = _interopRequireWildcard(require("react"));

var _sanddanceReact = require("@msrvida/sanddance-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Scrollable(props) {
  return React.createElement("div", {
    className: _sanddanceReact.util.classList('scrollable-container', props.className),
    role: props.role
  }, React.createElement("div", {
    className: "scrollable"
  }, props.children));
}
},{"react":"ccIB","@msrvida/sanddance-react":"MjKu"}],"f8Jx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sidebar = Sidebar;
exports.Sidebutton = Sidebutton;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _dataScope = require("./dataScope");

var _iconButton = require("./iconButton");

var _scrollable = require("./scrollable");

var _interfaces = require("../interfaces");

var _language = require("../language");

var _sanddanceReact = require("@msrvida/sanddance-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Sidebar(props) {
  var sidebuttons = [{
    sideTabId: _interfaces.SideTabId.ChartType,
    iconName: 'BIDashboard',
    title: _language.strings.labelChart
  }, {
    sideTabId: _interfaces.SideTabId.Color,
    iconName: 'Color',
    title: _language.strings.labelColor
  }, {
    sideTabId: _interfaces.SideTabId.Data,
    iconName: 'Table',
    title: _language.strings.labelDataBrowser
  }, {
    sideTabId: _interfaces.SideTabId.Search,
    iconName: 'Search',
    title: _language.strings.labelSearch
  }, {
    sideTabId: _interfaces.SideTabId.Snapshots,
    iconName: 'Camera',
    title: _language.strings.labelSnapshots
  }, {
    sideTabId: _interfaces.SideTabId.Settings,
    iconName: 'Settings',
    title: _language.strings.labelChartSettings
  }];
  return React.createElement("div", {
    className: _sanddanceReact.util.classList('sanddance-sidebar', 'calculator', props.pinned && 'pinned', props.closed && 'closed')
  }, React.createElement("div", {
    className: "sidebar-content"
  }, React.createElement(_dataScope.DataScope, Object.assign({}, props.dataScopeProps)), React.createElement("div", {
    className: "vbuttons",
    role: 'tablist'
  }, React.createElement("div", {
    className: "sidebar-dialogs"
  }, sidebuttons.map(function (sidebutton, i) {
    return React.createElement(Sidebutton, Object.assign({
      key: i
    }, props, sidebutton, {
      themePalette: props.themePalette
    }));
  })), !props.hideSidebarControls && React.createElement("div", {
    className: "sidebar-controls"
  }, React.createElement(Sidebutton, Object.assign({}, props, {
    sideTabId: _interfaces.SideTabId.Pin,
    iconName: props.pinned ? 'Pinned' : 'Pin',
    title: props.pinned ? _language.strings.buttonToolbarFloat : _language.strings.buttonToolbarDock
  })), React.createElement(Sidebutton, Object.assign({}, props, {
    sideTabId: _interfaces.SideTabId.Collapse,
    iconName: props.closed ? 'DoubleChevronRight12' : 'DoubleChevronLeft12',
    title: props.closed ? _language.strings.buttonToolbarShow : _language.strings.buttonToolbarHide
  })))), React.createElement(_scrollable.Scrollable, {
    role: 'tabpanel'
  }, React.createElement("div", {
    className: "sidetab"
  }, props.children)), props.calculating && React.createElement("div", {
    className: "calculating"
  }, React.createElement(_base.base.fabric.Spinner, {
    size: _base.base.fabric.SpinnerSize.large
  }))));
}

function Sidebutton(props) {
  var selected = !props.closed && props.selectedSideTab === props.sideTabId;
  return React.createElement("div", {
    className: _sanddanceReact.util.classList('vbutton', selected && 'selected'),
    role: 'tab',
    "aria-selected": selected
  }, props.badgeText && React.createElement("div", {
    className: "count"
  }, props.badgeText), React.createElement(_iconButton.IconButton, {
    themePalette: props.themePalette,
    className: "vbutton",
    iconName: props.iconName,
    title: props.title,
    onClick: function onClick() {
      props.onSideTabClick(props.sideTabId);
    }
  }));
}
},{"react":"ccIB","../base":"Vlbn","./dataScope":"OsNT","./iconButton":"dQNc","./scrollable":"GuKX","../interfaces":"h2T5","../language":"hk5u","@msrvida/sanddance-react":"MjKu"}],"dSzJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SnapshotEditor = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _dialog = require("../controls/dialog");

var _canvas = require("../canvas");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SnapshotEditor =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SnapshotEditor, _React$Component);

  function SnapshotEditor(props) {
    var _this;

    _classCallCheck(this, SnapshotEditor);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SnapshotEditor).call(this, props));
    _this.state = {
      showEditFormDialog: false,
      title: '',
      description: '',
      image: null,
      bgColor: null,
      insight: null,
      editIndex: -1
    };
    return _this;
  }

  _createClass(SnapshotEditor, [{
    key: "resize",
    value: function resize(src, thumbWidth) {
      var _this2 = this;

      if (!src) return;
      var img = new Image();

      img.onload = function () {
        var canvas = document.createElement('canvas'),
            ctx = canvas.getContext('2d');
        var ratio = img.width / thumbWidth;
        canvas.height = img.height / ratio;
        canvas.width = thumbWidth;
        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
        var image = canvas.toDataURL();

        _this2.setState({
          image: image
        });
      };

      img.src = src;
    }
  }, {
    key: "editSnapshot",
    value: function editSnapshot(snapshot) {
      var _this3 = this;

      var editIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;

      if (snapshot) {
        this.setState(Object.assign(Object.assign({
          showEditFormDialog: true
        }, snapshot), {
          editIndex: editIndex
        }));
      } else {
        this.props.explorer.viewer.deselect().then(function () {
          var canvas = (0, _canvas.getCanvas)(_this3.props.explorer.viewer);
          var bgColor = canvas && window.getComputedStyle(canvas).backgroundColor;

          var insight = _sanddanceReact.SandDance.VegaDeckGl.util.clone(_this3.props.explorer.viewer.getInsight());

          delete insight.size;
          var title = _this3.props.getTitle && _this3.props.getTitle(insight) || '';
          var description = _this3.props.getDescription && _this3.props.getDescription(insight) || '';

          _this3.setState({
            showEditFormDialog: true,
            bgColor: bgColor,
            title: title,
            description: description,
            insight: insight,
            image: null,
            editIndex: editIndex
          }); //allow deselection to render


          setTimeout(function () {
            _this3.resize(canvas && canvas.toDataURL('image/png'), _this3.props.explorer.snapshotThumbWidth);
          }, 500);
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      return React.createElement(_dialog.Dialog, {
        modalProps: {
          className: _sanddanceReact.util.classList('sanddance-snapshot-dialog', this.props.explorer.props.theme)
        },
        minWidth: "".concat(this.props.explorer.snapshotThumbWidth + 64, "px"),
        hidden: !this.state.showEditFormDialog,
        onDismiss: function onDismiss() {
          return _this4.setState({
            showEditFormDialog: false
          });
        },
        title: this.state.editIndex >= 0 ? _language.strings.buttonEditSnapshot : _language.strings.buttonCreateSnapshot,
        buttons: React.createElement(_base.base.fabric.PrimaryButton, {
          disabled: !this.state.image || !this.state.title,
          key: 0,
          onClick: function onClick(e) {
            var snapshot = {
              title: _this4.state.title,
              description: _this4.state.description,
              insight: _this4.state.insight,
              image: _this4.state.image,
              bgColor: _this4.state.bgColor
            };
            _this4.props.modifySnapShot && _this4.props.modifySnapShot(snapshot);

            _this4.props.onWriteSnapshot(snapshot, _this4.state.editIndex);

            _this4.setState({
              showEditFormDialog: false,
              title: '',
              description: '',
              image: null
            });
          },
          text: this.state.editIndex >= 0 ? _language.strings.buttonUpdateSnapshot : _language.strings.buttonCreateSnapshot
        })
      }, React.createElement(_base.base.fabric.TextField, {
        label: _language.strings.labelSnapshotTitle,
        onChange: function onChange(e, title) {
          return _this4.setState({
            title: title
          });
        },
        value: this.state.title
      }), React.createElement(_base.base.fabric.TextField, {
        label: _language.strings.labelSnapshotDescription,
        onChange: function onChange(e, description) {
          return _this4.setState({
            description: description
          });
        },
        value: this.state.description,
        multiline: true
      }), React.createElement("div", {
        className: 'thumbnail'
      }, !this.state.image && React.createElement(_base.base.fabric.Spinner, null), this.state.image && React.createElement("img", {
        src: this.state.image,
        style: {
          backgroundColor: this.state.bgColor
        }
      })), this.props.explorer.viewer && this.props.explorer.viewer.colorContexts && this.props.explorer.viewer.colorContexts.length > 1 && React.createElement("div", null, _language.strings.labelColorFilter));
    }
  }]);

  return SnapshotEditor;
}(React.Component);

exports.SnapshotEditor = SnapshotEditor;
},{"react":"ccIB","../base":"Vlbn","../controls/dialog":"cFWm","../canvas":"Dryx","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"oc9r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Snapshots = void 0;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _dialog = require("../controls/dialog");

var _group = require("../controls/group");

var _iconButton = require("../controls/iconButton");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Snapshots =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Snapshots, _React$Component);

  function Snapshots(props) {
    var _this;

    _classCallCheck(this, Snapshots);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Snapshots).call(this, props));
    _this.state = {
      confirmation: null,
      title: '',
      description: '',
      image: null,
      bgColor: null,
      insight: null
    };
    return _this;
  }

  _createClass(Snapshots, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var items = [{
        key: 'clear',
        text: _language.strings.buttonClearSnapshots,
        onClick: function onClick() {
          return _this2.setState({
            confirmation: {
              buttonText: _language.strings.buttonClearSnapshots,
              handler: function handler() {
                return _this2.props.onClearSnapshots();
              }
            }
          });
        },
        disabled: this.props.snapshots.length === 0
      }];

      if (this.props.getTopActions) {
        items.push.apply(items, this.props.getTopActions(this.props.snapshots));
      }

      return React.createElement(_group.Group, {
        className: "sanddance-snapshots",
        label: _language.strings.labelSnapshots
      }, React.createElement("div", null, React.createElement(_base.base.fabric.PrimaryButton, {
        text: _language.strings.buttonCreateSnapshot,
        onClick: function onClick(e) {
          return _this2.props.editor.editSnapshot();
        },
        split: true,
        menuProps: {
          items: items
        }
      }), this.props.getChildren && this.props.getChildren(this.props.snapshots), this.state.confirmation && React.createElement(_dialog.Dialog, {
        hidden: false,
        buttons: React.createElement(_base.base.fabric.PrimaryButton, {
          key: 0,
          onClick: function onClick(e) {
            _this2.setState({
              confirmation: null
            });

            _this2.state.confirmation.handler();
          },
          text: this.state.confirmation.buttonText
        }),
        onDismiss: function onDismiss() {
          return _this2.setState({
            confirmation: null
          });
        }
      }, _language.strings.labelConfirmation), React.createElement("div", null, this.props.snapshots.map(function (snapshot, i) {
        var actions = _this2.props.getActions && _this2.props.getActions(snapshot, i) || [];
        actions.push({
          iconButtonProps: {
            themePalette: _this2.props.themePalette,
            title: _language.strings.buttonEditSnapshot,
            onClick: function onClick(e) {
              return _this2.props.editor.editSnapshot(snapshot, i);
            },
            iconName: 'Edit'
          }
        });

        if (_this2.props.snapshots.length > 1) {
          actions.push({
            iconButtonProps: {
              disabled: i === 0,
              themePalette: _this2.props.themePalette,
              title: _language.strings.buttonMoveUp,
              onClick: function onClick(e) {
                return _this2.props.onMoveUp(i);
              },
              iconName: 'SortUp'
            }
          }, {
            iconButtonProps: {
              disabled: i > _this2.props.snapshots.length - 2,
              themePalette: _this2.props.themePalette,
              title: _language.strings.buttonMoveDown,
              onClick: function onClick(e) {
                return _this2.props.onMoveDown(i);
              },
              iconName: 'SortDown'
            }
          });
        }

        actions.push({
          iconButtonProps: {
            themePalette: _this2.props.themePalette,
            title: _language.strings.buttonDeleteSnapshot,
            onClick: function onClick() {
              return _this2.setState({
                confirmation: {
                  buttonText: _language.strings.buttonDeleteSnapshot,
                  handler: function handler() {
                    return _this2.props.onRemoveSnapshot(i);
                  }
                }
              });
            },
            iconName: 'Delete'
          }
        });
        return React.createElement("div", {
          key: i,
          className: _sanddanceReact.util.classList('snapshot', i === _this2.props.selectedSnapshotIndex && 'selected')
        }, React.createElement("div", {
          onClick: function onClick(e) {
            return _this2.props.onSnapshotClick(snapshot, i);
          }
        }, React.createElement("div", {
          className: 'title'
        }, snapshot.title), React.createElement("div", {
          className: 'thumbnail'
        }, React.createElement("img", {
          title: snapshot.description,
          src: snapshot.image,
          style: {
            backgroundColor: snapshot.bgColor
          }
        }))), React.createElement(Actions, {
          actions: actions,
          snapshot: snapshot
        }));
      }))));
    }
  }]);

  return Snapshots;
}(React.Component);

exports.Snapshots = Snapshots;

function Actions(props) {
  return React.createElement("div", {
    className: "actions"
  }, props.actions.map(function (action, i) {
    if (action.iconButtonProps) {
      return React.createElement(_iconButton.IconButton, Object.assign({
        key: i
      }, action.iconButtonProps));
    }

    if (action.element) {
      return action.element;
    }
  }));
}
},{"react":"ccIB","../base":"Vlbn","../controls/dialog":"cFWm","../controls/group":"Q3hf","../controls/iconButton":"dQNc","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"yzxM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggleSearch = toggleSearch;

var _sanddanceReact = require("@msrvida/sanddance-react");

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function comparableGroup(group) {
  return Object.assign(Object.assign({}, group), {
    clause: null
  });
}

function compareGroup(a, b) {
  return _sanddanceReact.SandDance.searchExpression.compareGroup(comparableGroup(a), comparableGroup(b));
}

function toggleSearch(haystack, needle) {
  var groups = [];
  var found = false; //look for item in all

  haystack.forEach(function (group) {
    if (compareGroup(group, needle)) {
      //if it exists, don't add it
      found = true;
    } else {
      groups.push(group);
    }
  });
  return {
    groups: groups,
    found: found
  };
}
},{"@msrvida/sanddance-react":"MjKu"}],"hH4t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommandBarButtonStyles = void 0;

var _base = require("../base");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CommandBarButtonStyles = function CommandBarButtonStyles(props) {
  var theme = props.theme;

  if (!theme) {
    throw new Error('Theme is undefined or null.');
  }

  var palette = theme.palette,
      semanticColors = theme.semanticColors;
  var BUTTON_ICON_CLASSNAME = '.ms-Button-icon';
  return {
    root: [Object.assign({}, _base.base.fabric.getFocusStyle(theme, {
      inset: 2
    })), {
      backgroundColor: palette.white
    }],
    rootHovered: {
      backgroundColor: palette.neutralLighter,
      selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
        color: palette.themeDarkAlt
      })
    },
    rootPressed: {
      backgroundColor: palette.neutralLight,
      color: palette.neutralDark,
      selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
        color: palette.themeDark
      })
    },
    rootChecked: {
      backgroundColor: palette.neutralLight,
      color: palette.neutralDark,
      selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
        color: palette.themeDark
      })
    },
    rootCheckedHovered: {
      backgroundColor: palette.neutralQuaternaryAlt,
      color: palette.neutralDark
    },
    rootExpanded: {
      color: palette.neutralDark,
      backgroundColor: palette.neutralLight,
      selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
        color: palette.themeDark
      })
    },
    rootExpandedHovered: {
      background: palette.neutralQuaternaryAlt
    },
    rootDisabled: {
      backgroundColor: palette.white,
      selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
        color: semanticColors.disabledBodySubtext
      })
    },
    splitButtonMenuButton: {
      backgroundColor: palette.white,
      color: palette.neutralSecondary,
      selectors: {
        ':hover': {
          backgroundColor: palette.neutralLighter,
          selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
            color: palette.neutralPrimary
          })
        },
        ':active': {
          backgroundColor: palette.neutralLight,
          selectors: _defineProperty({}, BUTTON_ICON_CLASSNAME, {
            color: palette.neutralPrimary
          })
        }
      }
    },
    splitButtonMenuButtonDisabled: {
      backgroundColor: palette.white
    },
    icon: {
      color: palette.themePrimary
    }
  };
};

exports.CommandBarButtonStyles = CommandBarButtonStyles;
},{"../base":"Vlbn"}],"GBuN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Logo = Logo;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var s = "\n ......\n.......\n...\n......\n ......\n    ...\n.......\n......\n";
var d = s.split('\n').map(function (row, irow) {
  return row.length ? row.split('').map(function (char, icol) {
    return char.trim() ? "M".concat(2 * icol + 1, " ").concat(2 * (irow - 1) + 1, " v1 h1 v-1 Z") : '';
  }).join(' ') : '';
}).join('\n');

function Logo() {
  return React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16"
  }, React.createElement("path", {
    d: d
  }));
}
},{"react":"ccIB"}],"Afi9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Topbar = Topbar;

var React = _interopRequireWildcard(require("react"));

var _base = require("../base");

var _CommandBarButton = require("./CommandBarButton.styles");

var _logo = require("./logo");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _language = require("../language");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
function Topbar(props) {
  var zeroResults = props.selectionState.selectedData && props.selectionState.selectedData.length === 0;
  var disabled = !props.loaded;
  var items = [{
    key: 'deselect',
    name: _language.strings.buttonDeselect,
    iconProps: {
      iconName: 'Cancel'
    },
    disabled: disabled || !props.selectionSearch,
    onClick: props.doDeselect
  }, {
    key: 'isolate',
    name: _language.strings.buttonIsolate,
    iconProps: {
      iconName: 'Filter'
    },
    disabled: disabled || !props.selectionSearch || zeroResults,
    onClick: function onClick() {
      return props.doFilter(props.selectionSearch);
    }
  }, {
    key: 'exclude',
    name: _language.strings.buttonExclude,
    iconProps: {
      iconName: 'ClearFilter'
    },
    disabled: disabled || !props.selectionSearch || zeroResults,
    onClick: function onClick() {
      return props.doFilter(_sanddanceReact.SandDance.searchExpression.invert(props.selectionSearch));
    }
  }, {
    key: 'reset',
    name: _language.strings.buttonReset,
    iconProps: {
      iconName: 'RemoveFilter'
    },
    disabled: disabled || !props.filter,
    onClick: props.doUnfilter
  }];

  if (props.buttons) {
    items.push.apply(items, props.buttons);
  }

  var farItems = [{
    key: 'previous-snapshot',
    iconProps: {
      iconName: 'Previous'
    },
    title: _language.strings.buttonPrevSnapshot,
    onClick: props.onSnapshotPreviousClick,
    disabled: props.snapshots.length < 2
  }, {
    key: 'snapshot',
    iconProps: {
      iconName: 'Camera'
    },
    title: _language.strings.buttonCreateSnapshot,
    onClick: props.onSnapshotClick,
    disabled: !props.loaded
  }, {
    key: 'next-snapshot',
    iconProps: {
      iconName: 'Next'
    },
    title: _language.strings.buttonNextSnapshot,
    onClick: props.onSnapshotNextClick,
    disabled: props.snapshots.length < 2
  }, {
    key: 'view',
    iconProps: {
      iconName: props.view === '2d' ? 'Product' : 'Page'
    },
    title: props.view === '2d' ? _language.strings.labelViewType3d : _language.strings.lavelViewType2d,
    onClick: props.onViewClick,
    disabled: !props.loaded
  }, {
    key: 'home',
    iconProps: {
      iconName: 'PicturePosition'
    },
    title: _language.strings.buttonCameraHome,
    onClick: props.onHomeClick,
    disabled: !props.loaded
  }];
  return React.createElement("div", {
    className: "sanddance-explorer-topbar"
  }, React.createElement("div", {
    className: "logo"
  }, React.createElement(_logo.Logo, null), React.createElement("a", {
    href: props.logoClickUrl || '/',
    target: props.logoClickTarget || '_blank'
  }, _language.strings.appName)), React.createElement("div", {
    className: "sanddance-explorer-commandbar"
  }, React.createElement(_base.base.fabric.Customizer, {
    scopedSettings: {
      CommandBarButton: {
        styles: function styles(buttonProps) {
          buttonProps.theme.palette = props.themePalette;
          return (0, _CommandBarButton.CommandBarButtonStyles)(buttonProps);
        }
      }
    }
  }, React.createElement(_base.base.fabric.CommandBar, {
    items: items,
    farItems: farItems,
    styles: {
      root: {
        backgroundColor: 'transparent',
        height: 'unset',
        paddingLeft: 0,
        paddingRight: 0
      }
    }
  }))));
}
},{"react":"ccIB","../base":"Vlbn","./CommandBarButton.styles":"hH4t","./logo":"GBuN","@msrvida/sanddance-react":"MjKu","../language":"hk5u"}],"KeW6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Explorer = void 0;

var React = _interopRequireWildcard(require("react"));

var _colorMap = require("./colorMap");

var _base = require("./base");

var _colorScheme = require("./colorScheme");

var _interfaces = require("./interfaces");

var _chart = require("./dialogs/chart");

var _color = require("./dialogs/color");

var _partialInsight4 = require("./partialInsight");

var _dataBrowser = require("./dialogs/dataBrowser");

var _dataScope = require("./controls/dataScope");

var _defaults = require("./defaults");

var _dialog = require("./controls/dialog");

var _columns = require("./columns");

var _mouseEvent = require("./mouseEvent");

var _iconButton = require("./controls/iconButton");

var _search = require("./dialogs/search");

var _dataLoader = require("./dataLoader");

var _clickableTextLayer = require("./clickableTextLayer");

var _chartRecommender = require("@msrvida/chart-recommender");

var _canvas = require("./canvas");

var _sanddanceReact = require("@msrvida/sanddance-react");

var _settings = require("./dialogs/settings");

var _sidebar = require("./controls/sidebar");

var _snapshotEditor = require("./dialogs/snapshotEditor");

var _snapshots = require("./dialogs/snapshots");

var _language = require("./language");

var _themes = require("./themes");

var _toggleSearch = require("./toggleSearch");

var _topbar = require("./controls/topbar");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var dataBrowserTitles = {};
dataBrowserTitles[_dataScope.DataScopeId.AllData] = _language.strings.selectDataSpanAll;
dataBrowserTitles[_dataScope.DataScopeId.FilteredData] = _language.strings.selectDataSpanFilter;
dataBrowserTitles[_dataScope.DataScopeId.SelectedData] = _language.strings.selectDataSpanSelection;
var dataBrowserZeroMessages = {};
dataBrowserZeroMessages[_dataScope.DataScopeId.AllData] = _language.strings.labelZeroAll;
dataBrowserZeroMessages[_dataScope.DataScopeId.FilteredData] = null; //empty array is not used

dataBrowserZeroMessages[_dataScope.DataScopeId.SelectedData] = _language.strings.labelZeroSearchResults;
var dataBrowserNullMessages = {};
dataBrowserNullMessages[_dataScope.DataScopeId.AllData] = _language.strings.labelDataNullAll;
dataBrowserNullMessages[_dataScope.DataScopeId.FilteredData] = _language.strings.labelDataNullFiltered;
dataBrowserNullMessages[_dataScope.DataScopeId.SelectedData] = _language.strings.labelDataNullSelection;

function createInputSearch(search) {
  var groups = _sanddanceReact.SandDance.searchExpression.ensureSearchExpressionGroupArray(search);

  var dialogSearch = groups.map(function (group, groupIndex) {
    return Object.assign(Object.assign({
      key: groupIndex
    }, group), {
      expressions: group.expressions.map(function (ex, i) {
        var ex2 = Object.assign({
          key: i
        }, ex);
        return ex2;
      })
    });
  });
  return dialogSearch;
}

var Explorer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Explorer, _React$Component);

  function Explorer(props) {
    var _this;

    _classCallCheck(this, Explorer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Explorer).call(this, props));
    _this.state = {
      calculating: null,
      errors: null,
      autoCompleteDistinctValues: {},
      colorBin: null,
      dataContent: null,
      dataFile: null,
      search: null,
      totalStyle: null,
      facetStyle: 'wrap',
      filter: null,
      filteredData: null,
      specCapabilities: null,
      size: {
        height: null,
        width: null
      },
      scheme: null,
      transform: null,
      columns: null,
      chart: 'grid',
      signalValues: null,
      hideAxes: false,
      hideLegend: false,
      sideTabId: _interfaces.SideTabId.ChartType,
      dataScopeId: _dataScope.DataScopeId.AllData,
      selectedItemIndex: {},
      sidebarClosed: false,
      sidebarPinned: true,
      view: props.initialView || '2d',
      snapshots: [],
      selectedSnapshotIndex: -1,
      tooltipExclusions: [],
      positionedColumnMapProps: null,
      note: null
    };
    _this.state.selectedItemIndex[_dataScope.DataScopeId.AllData] = 0;
    _this.state.selectedItemIndex[_dataScope.DataScopeId.FilteredData] = 0;
    _this.state.selectedItemIndex[_dataScope.DataScopeId.SelectedData] = 0;
    _this.snapshotThumbWidth = _defaults.snapshotThumbWidth;
    _this.discardColorContextUpdates = true;

    _this.updateViewerOptions(Object.assign(Object.assign({}, _sanddanceReact.SandDance.VegaDeckGl.util.clone(_sanddanceReact.SandDance.Viewer.defaultViewerOptions)), props.viewerOptions));

    return _this;
  }

  _createClass(Explorer, [{
    key: "finalize",
    value: function finalize() {
      if (this.viewer) this.viewer.finalize();
    }
  }, {
    key: "updateViewerOptions",
    value: function updateViewerOptions(viewerOptions) {
      var _this2 = this;

      this.viewerOptions = Object.assign(Object.assign({}, _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge(_defaults.defaultViewerOptions, this.viewerOptions, viewerOptions)), {
        tooltipOptions: {
          exclude: function exclude(columnName) {
            return _this2.state.tooltipExclusions.indexOf(columnName) >= 0;
          }
        },
        onColorContextChange: function onColorContextChange() {
          return _this2.manageColorToolbar();
        },
        onDataFilter: function onDataFilter(dataFilter, filteredData) {
          var selectedItemIndex = Object.assign({}, _this2.state.selectedItemIndex);
          selectedItemIndex[_dataScope.DataScopeId.FilteredData] = 0;

          _this2.changeInsight({
            filter: dataFilter,
            filteredData: filteredData,
            selectedItemIndex: selectedItemIndex
          });

          if (_this2.state.sideTabId === _interfaces.SideTabId.Data && _this2.state.dataScopeId === _dataScope.DataScopeId.FilteredData) {
            //make sure item is active
            requestAnimationFrame(function () {
              return filteredData && _this2.silentActivation(filteredData[0]);
            });
          }

          viewerOptions && viewerOptions.onDataFilter && viewerOptions.onDataFilter(dataFilter, filteredData);
        },
        onSelectionChanged: function onSelectionChanged(newSearch, index, selectedData) {
          if (_this2.ignoreSelectionChange) return;
          var selectedItemIndex = Object.assign({}, _this2.state.selectedItemIndex);
          selectedItemIndex[_dataScope.DataScopeId.SelectedData] = index || 0;
          var _this2$state = _this2.state,
              search = _this2$state.search,
              sideTabId = _this2$state.sideTabId;

          if (newSearch) {
            search = createInputSearch(newSearch); //} else {
            //sideTabId = SideTabId.ChartType;
          }

          _this2.setState({
            search: search,
            selectedItemIndex: selectedItemIndex,
            sideTabId: sideTabId
          });

          viewerOptions && viewerOptions.onSelectionChanged && viewerOptions.onSelectionChanged(newSearch, index, selectedData);
        },
        onAxisClick: function onAxisClick(e, search) {
          _this2.toggleableSearch(e, search);

          viewerOptions && viewerOptions.onAxisClick && viewerOptions.onAxisClick(e, search);
        },
        onLegendHeaderClick: function onLegendHeaderClick(e) {
          var pos = (0, _mouseEvent.getPosition)(e);

          var specRole = _this2.state.specCapabilities && _this2.state.specCapabilities.roles.filter(function (r) {
            return r.role === 'color';
          })[0];

          var positionedColumnMapProps = Object.assign(Object.assign({}, _this2.getColumnMapBaseProps()), {
            collapseLabel: true,
            container: _this2.div,
            selectedColumnName: _this2.state.columns['color'],
            onDismiss: function onDismiss() {
              _this2.setState({
                positionedColumnMapProps: null
              });
            },
            specRole: specRole,
            left: pos.left - _this2.div.clientLeft,
            top: pos.top - _this2.div.clientTop
          });

          _this2.setState({
            positionedColumnMapProps: positionedColumnMapProps
          });
        },
        onLegendRowClick: function onLegendRowClick(e, legendRow) {
          _this2.toggleableSearch(e, legendRow.search);

          viewerOptions && viewerOptions.onLegendRowClick && viewerOptions.onLegendRowClick(e, legendRow);
        },
        onError: function onError(errors) {
          _this2.setState({
            errors: errors
          });

          viewerOptions && viewerOptions.onError && viewerOptions.onError(errors);
        },
        onBeforeCreateLayers: _clickableTextLayer.onBeforeCreateLayers,
        getTextColor: function getTextColor(o) {
          if (o.specRole) {
            return _sanddanceReact.SandDance.VegaDeckGl.util.colorFromString(_this2.viewerOptions.colors.clickableText);
          } else if (o.metaData && o.metaData.search) {
            return _sanddanceReact.SandDance.VegaDeckGl.util.colorFromString(_this2.viewerOptions.colors.searchText);
          } else {
            return o.color;
          }
        },
        getTextHighlightColor: function getTextHighlightColor(o) {
          if (o.specRole) {
            return _sanddanceReact.SandDance.VegaDeckGl.util.colorFromString(_this2.viewerOptions.colors.clickableTextHighlight);
          } else if (o.metaData && o.metaData.search) {
            return _sanddanceReact.SandDance.VegaDeckGl.util.colorFromString(_this2.viewerOptions.colors.searchTextHighlight);
          } else {
            return o.color;
          }
        },
        onTextClick: function onTextClick(e, text) {
          if (e && text) {
            var pos = (0, _mouseEvent.getPosition)(e);
            var specRole = text.specRole;

            if (pos && specRole) {
              var positionedColumnMapProps = Object.assign(Object.assign({}, _this2.getColumnMapBaseProps()), {
                collapseLabel: true,
                container: _this2.div,
                selectedColumnName: _this2.state.columns[specRole.role],
                onDismiss: function onDismiss() {
                  _this2.setState({
                    positionedColumnMapProps: null
                  });
                },
                specRole: specRole,
                left: pos.left - _this2.div.clientLeft,
                top: pos.top - _this2.div.clientTop
              });

              _this2.setState({
                positionedColumnMapProps: positionedColumnMapProps
              });
            } else {
              _this2.setState({
                positionedColumnMapProps: null
              });
            }
          }
        },
        onNewViewStateTarget: function onNewViewStateTarget() {
          return _this2.newViewStateTarget;
        }
      });

      if (this.viewer && this.viewer.presenter) {
        var newPresenterStyle = _sanddanceReact.SandDance.util.getPresenterStyle(this.viewerOptions);

        var mergePrenterStyle = Object.assign(Object.assign({}, this.viewer.presenter.style), newPresenterStyle);
        this.viewer.presenter.style = mergePrenterStyle;
        this.viewer.options = _sanddanceReact.SandDance.VegaDeckGl.util.deepMerge(this.viewer.options, this.props.viewerOptions, this.viewerOptions);
      }
    }
  }, {
    key: "signal",
    value: function signal(signalName, signalValue, newViewStateTarget) {
      var _this3 = this;

      switch (signalName) {
        case _sanddanceReact.SandDance.constants.SignalNames.ColorBinCount:
        case _sanddanceReact.SandDance.constants.SignalNames.ColorReverse:
        case _sanddanceReact.SandDance.constants.SignalNames.MarkOpacity:
          this.discardColorContextUpdates = false;
          break;
      }

      this.newViewStateTarget = newViewStateTarget;
      this.viewer.vegaViewGl.signal(signalName, signalValue);
      this.viewer.vegaViewGl.runAsync().then(function () {
        _this3.discardColorContextUpdates = true;
        _this3.newViewStateTarget = undefined;
        _this3.props.onSignalChanged && _this3.props.onSignalChanged();
      });
    }
  }, {
    key: "manageColorToolbar",
    value: function manageColorToolbar() {
      var _this4 = this;

      var canRemap = this.viewer.colorContexts && this.viewer.colorContexts.length > 1;
      (0, _colorMap.applyColorButtons)(this.viewer.presenter, !!this.state.columns.color, {
        themePalette: _themes.themePalettes[this.props.theme || ''],
        canRemap: canRemap,
        isRemap: canRemap && this.viewer.currentColorContext > 0,
        colorMapHandler: function colorMapHandler(remap) {
          _this4.viewer.currentColorContext = ~~remap;

          _this4.viewer.renderSameLayout();

          _this4.manageColorToolbar();
        }
      });
    }
  }, {
    key: "getInsight",
    value: function getInsight() {
      return this.viewer.getInsight();
    }
  }, {
    key: "setInsight",
    value: function setInsight() {
      var _this5 = this;

      var partialInsight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.viewer.getInsight();
      var rebaseFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var selectedItemIndex = Object.assign({}, this.state.selectedItemIndex);
      selectedItemIndex[_dataScope.DataScopeId.AllData] = 0;
      selectedItemIndex[_dataScope.DataScopeId.FilteredData] = 0;
      selectedItemIndex[_dataScope.DataScopeId.SelectedData] = 0;
      var newState = Object.assign({
        chart: null,
        scheme: null,
        columns: null,
        filter: null,
        filteredData: null,
        selectedItemIndex: selectedItemIndex
      }, partialInsight);
      newState.search = createInputSearch(newState.filter);

      var changeInsight = function changeInsight() {
        _this5.getColorContext = null;

        _this5.changeInsight(newState);
      };

      var currentFilter = this.viewer.getInsight().filter;

      if (rebaseFilter && currentFilter && newState.filter) {
        if (_sanddanceReact.SandDance.searchExpression.startsWith(newState.filter, currentFilter)) {
          changeInsight();
        } else {
          this.viewer.reset().then(function () {
            return new Promise(function (resolve, reject) {
              setTimeout(resolve, _this5.viewer.options.transitionDurations.scope);
            });
          }).then(changeInsight);
        }
      } else {
        changeInsight();
      }
    }
  }, {
    key: "handleReviveSnapshot",
    value: function handleReviveSnapshot(snapshot, selectedSnapshotIndex) {
      var handled = false;

      if (this.props.onSnapshotClick) {
        this.setState({
          selectedSnapshotIndex: selectedSnapshotIndex
        });
        handled = this.props.onSnapshotClick(snapshot, selectedSnapshotIndex);
      }

      if (!handled) {
        this.reviveSnapshot(selectedSnapshotIndex);
      }
    }
  }, {
    key: "reviveSnapshot",
    value: function reviveSnapshot(snapshotOrIndex) {
      if (typeof snapshotOrIndex === 'number') {
        var selectedSnapshotIndex = snapshotOrIndex;
        var snapshot = this.state.snapshots[selectedSnapshotIndex];
        var newState = Object.assign(Object.assign({}, snapshot.insight), {
          note: snapshot.description,
          selectedSnapshotIndex: selectedSnapshotIndex
        });

        if (!this.state.sidebarClosed) {
          newState.sideTabId = _interfaces.SideTabId.Snapshots;
          this.scrollSnapshotIntoView(selectedSnapshotIndex);
        }

        this.setInsight(newState, true);
      } else {
        var _snapshot = snapshotOrIndex;

        if (_snapshot.insight) {
          this.setInsight(Object.assign(Object.assign({}, _snapshot.insight), {
            note: _snapshot.description,
            selectedSnapshotIndex: -1
          }), true); //don't navigate to sideTab
        } else {
          this.setState({
            note: _snapshot.description,
            selectedSnapshotIndex: -1
          });
        }
      }
    }
  }, {
    key: "load",
    value: function load(data, getPartialInsight, optionsOrPrefs) {
      var _this6 = this;

      this.changeInsight({
        columns: null,
        note: null
      });
      return new Promise(function (resolve, reject) {
        var loadFinal = function loadFinal(dataContent) {
          var partialInsight;
          _this6.prefs = optionsOrPrefs && optionsOrPrefs.chartPrefs || optionsOrPrefs || {};

          if (getPartialInsight) {
            partialInsight = getPartialInsight(dataContent.columns);
            (0, _partialInsight4.initPrefs)(_this6.prefs, partialInsight);
          }

          if (!partialInsight) {
            //load recommendation
            var r = new _chartRecommender.RecommenderSummary(dataContent.columns, dataContent.data);
            partialInsight = r.recommend();
          }

          var selectedItemIndex = Object.assign({}, _this6.state.selectedItemIndex);
          var sideTabId = _interfaces.SideTabId.ChartType;
          selectedItemIndex[_dataScope.DataScopeId.AllData] = 0;
          selectedItemIndex[_dataScope.DataScopeId.FilteredData] = 0;
          selectedItemIndex[_dataScope.DataScopeId.SelectedData] = 0;
          var newState = Object.assign({
            dataFile: dataFile,
            dataContent: dataContent,
            snapshots: dataContent.snapshots || _this6.state.snapshots,
            autoCompleteDistinctValues: {},
            totalStyle: null,
            facetStyle: 'wrap',
            filter: null,
            filteredData: null,
            transform: null,
            tooltipExclusions: optionsOrPrefs && optionsOrPrefs.tooltipExclusions || [],
            selectedItemIndex: selectedItemIndex,
            sideTabId: sideTabId
          }, partialInsight);
          _this6.getColorContext = null;
          (0, _columns.ensureColumnsExist)(newState.columns, dataContent.columns, newState.transform);
          var errors = (0, _columns.ensureColumnsPopulated)(partialInsight ? partialInsight.chart : null, newState.columns, dataContent.columns);
          newState.errors = errors; //change insight

          _this6.changeInsight(newState); //make sure item is active


          _this6.activateDataBrowserItem(sideTabId, _this6.state.dataScopeId);

          resolve();
        };

        var dataFile;

        if (Array.isArray(data)) {
          return (0, _dataLoader.loadDataArray)(data, 'json').then(function (result) {
            dataFile = {
              type: 'json'
            };
            loadFinal(result);
          }).catch(reject);
        } else {
          dataFile = data;
          return (0, _dataLoader.loadDataFile)(dataFile).then(loadFinal).catch(reject);
        }
      });
    }
  }, {
    key: "changeChartType",
    value: function changeChartType(chart) {
      var _this7 = this;

      var partialInsight = (0, _partialInsight4.copyPrefToNewState)(this.prefs, chart, '*', '*');
      var newState = Object.assign({
        chart: chart
      }, partialInsight);
      var columns = this.state.columns || {};
      newState.columns = Object.assign({}, columns); //special case mappings when switching chart type

      if (this.state.chart === 'scatterplot' && (chart === 'barchart' || chart === 'barchartV')) {
        newState.columns = Object.assign(Object.assign({}, columns), {
          sort: columns.y
        });
      } else if (this.state.chart === 'scatterplot' && chart === 'barchartH') {
        newState.columns = Object.assign(Object.assign({}, columns), {
          sort: columns.x
        });
      } else if (chart === 'treemap') {
        newState.view = '2d';

        if (!columns.size) {
          //make sure size exists and is numeric
          var sizeColumnName = (0, _chartRecommender.preferredColumnForTreemapSize)(this.state.dataContent.columns, true);

          if (!sizeColumnName) {
            sizeColumnName = (0, _chartRecommender.preferredColumnForTreemapSize)(this.state.dataContent.columns, false);
          }

          if (!sizeColumnName) {//TODO error - no numeric columns
          } else {
            newState.columns = Object.assign(Object.assign({}, columns), {
              size: sizeColumnName
            });
          }
        }
      } else if (chart === 'stacks') {
        newState.view = '3d';
      }

      (0, _columns.ensureColumnsExist)(newState.columns, this.state.dataContent.columns, this.state.transform);
      var errors = (0, _columns.ensureColumnsPopulated)(chart, newState.columns, this.state.dataContent.columns);

      if (errors) {
        newState.errors = errors;
      }

      this.calculate(function () {
        return _this7.changeInsight(newState);
      });
    }
  }, {
    key: "calculate",
    value: function calculate(calculating) {
      this.setState({
        calculating: calculating
      });
    }
  }, {
    key: "changeView",
    value: function changeView(view) {
      this.changeInsight({
        view: view
      });
    } //state members which change the insight

  }, {
    key: "changeInsight",
    value: function changeInsight(newState) {
      if (!newState.signalValues) {
        if (this.viewer) {
          var _this$viewer$getInsig = this.viewer.getInsight(),
              signalValues = _this$viewer$getInsig.signalValues;

          newState.signalValues = signalValues;
        } else {
          newState.signalValues = null;
        }
      }

      if (newState.chart === 'barchart') {
        newState.chart = 'barchartV';
      }

      this.setState(newState);
    }
  }, {
    key: "changespecCapabilities",
    value: function changespecCapabilities(specCapabilities) {
      this.setState({
        specCapabilities: specCapabilities
      });
    }
  }, {
    key: "changeColumnMapping",
    value: function changeColumnMapping(role, column, options) {
      var _this8 = this;

      var columns = Object.assign({}, this.state.columns);

      var final = function final() {
        columns[role] = column && column.name;

        _this8.changeInsight({
          columns: columns
        });
      };

      if (column) {
        switch (role) {
          case 'facet':
            {
              var partialInsight = (0, _partialInsight4.copyPrefToNewState)(this.prefs, this.state.chart, 'facet', column.name);
              var newState = Object.assign(Object.assign({
                columns: columns
              }, partialInsight), {
                facetStyle: options ? options.facetStyle : this.state.facetStyle
              });
              columns['facet'] = column.name;
              this.changeInsight(newState);
              break;
            }

          case 'color':
            {
              var _newState = {
                scheme: options && options.scheme,
                columns: columns,
                colorBin: this.state.colorBin
              };

              if (!_newState.scheme) {
                var _partialInsight = (0, _partialInsight4.copyPrefToNewState)(this.prefs, this.state.chart, 'color', column.name);

                _newState = Object.assign(Object.assign({}, _newState), _partialInsight);
              }

              if (!_newState.scheme) {
                _newState.scheme = (0, _colorScheme.bestColorScheme)(column, null, this.state.scheme);
              }

              if (!column.stats.hasColorData) {
                _newState.directColor = false;

                if (this.state.directColor !== _newState.directColor) {
                  _newState.calculating = function () {
                    return _this8._resize();
                  };
                }
              }

              if (this.state.columns && this.state.columns.color && this.state.columns.color !== column.name) {
                var currColorColumn = this.state.dataContent.columns.filter(function (c) {
                  return c.name === _this8.state.columns.color;
                })[0];

                if (column.isColorData != currColorColumn.isColorData) {
                  _newState.calculating = function () {
                    return _this8._resize();
                  };
                }
              }

              this.ignoreSelectionChange = true;
              this.viewer.deselect().then(function () {
                _this8.ignoreSelectionChange = false; //allow deselection to render

                requestAnimationFrame(function () {
                  columns['color'] = column.name;
                  _this8.getColorContext = null;

                  _this8.changeInsight(_newState);
                });
              });
              break;
            }

          case 'x':
            {
              var _partialInsight2 = (0, _partialInsight4.copyPrefToNewState)(this.prefs, this.state.chart, 'x', column.name);

              var _newState2 = Object.assign({
                columns: columns
              }, _partialInsight2);

              columns['x'] = column.name;
              this.changeInsight(_newState2);
              break;
            }

          case 'size':
            {
              var _partialInsight3 = (0, _partialInsight4.copyPrefToNewState)(this.prefs, this.state.chart, 'size', column.name);

              var _newState3 = Object.assign(Object.assign({
                columns: columns
              }, _partialInsight3), {
                totalStyle: options ? options.totalStyle : this.state.totalStyle
              });

              columns['size'] = column.name;
              this.changeInsight(_newState3);
              break;
            }

          default:
            {
              final();
              break;
            }
        }
      } else {
        switch (role) {
          case 'facet':
            {
              columns.facet = null;
              columns.facetV = null;
              this.changeInsight({
                columns: columns,
                facetStyle: 'wrap'
              });
              break;
            }

          default:
            {
              final();
              break;
            }
        }
      }
    }
  }, {
    key: "setSideTabId",
    value: function setSideTabId(sideTabId, dataScopeId) {
      if (sideTabId === _interfaces.SideTabId.Data && dataScopeId == null) {
        //choose most relevant DataScopeId
        dataScopeId = this.getBestDataScopeId();
      }

      if (dataScopeId == null) {
        dataScopeId = this.state.dataScopeId;
      }

      this.setState({
        sideTabId: sideTabId,
        dataScopeId: dataScopeId,
        sidebarClosed: false
      });
      this.activateDataBrowserItem(sideTabId, dataScopeId);
    }
  }, {
    key: "getBestDataScopeId",
    value: function getBestDataScopeId() {
      var dataScopeId;
      var selectionState = this.viewer && this.viewer.getSelection();

      if (selectionState && selectionState.selectedData && selectionState.selectedData.length) {
        dataScopeId = _dataScope.DataScopeId.SelectedData;
      } else if (this.state.filteredData) {
        dataScopeId = _dataScope.DataScopeId.FilteredData;
      } else {
        dataScopeId = _dataScope.DataScopeId.AllData;
      }

      return dataScopeId;
    }
  }, {
    key: "activateDataBrowserItem",
    value: function activateDataBrowserItem(sideTabId, dataScopeId) {
      if (!this.viewer) return;
      var itemToActivate;

      if (sideTabId === _interfaces.SideTabId.Data) {
        switch (dataScopeId) {
          case _dataScope.DataScopeId.AllData:
            {
              itemToActivate = this.state.dataContent && this.state.dataContent.data[this.state.selectedItemIndex[_dataScope.DataScopeId.AllData]];
              break;
            }

          case _dataScope.DataScopeId.FilteredData:
            {
              itemToActivate = this.state.filteredData && this.state.filteredData[this.state.selectedItemIndex[_dataScope.DataScopeId.FilteredData]];
              break;
            }

          case _dataScope.DataScopeId.SelectedData:
            {
              var selection = this.viewer.getSelection() || {};
              itemToActivate = selection.selectedData && selection.selectedData[this.state.selectedItemIndex[_dataScope.DataScopeId.SelectedData]];
              break;
            }
        }
      }

      this.silentActivation(itemToActivate);
    }
  }, {
    key: "silentActivation",
    value: function silentActivation(itemToActivate) {
      var _this9 = this;

      this.ignoreSelectionChange = true;

      var done = function done() {
        _this9.ignoreSelectionChange = false;
      };

      if (itemToActivate) {
        return this.viewer.activate(itemToActivate).then(done);
      } else {
        return this.viewer.deActivate().then(done);
      }
    }
  }, {
    key: "sidebar",
    value: function sidebar(sidebarClosed, sidebarPinned) {
      this.setState({
        sidebarClosed: sidebarClosed,
        sidebarPinned: sidebarPinned
      });
    }
  }, {
    key: "resize",
    value: function resize() {
      var _this10 = this;

      this.setState({
        calculating: function calculating() {
          return _this10._resize();
        }
      });
    }
  }, {
    key: "_resize",
    value: function _resize() {
      this.changeInsight({
        size: this.getLayoutDivSize(this.state.sidebarPinned, this.state.sidebarClosed)
      });
    }
  }, {
    key: "viewerMounted",
    value: function viewerMounted(glDiv) {
      this.setState({
        size: this.getLayoutDivSize(this.state.sidebarPinned, this.state.sidebarClosed),
        signalValues: this.state.signalValues //keep initialized signalValues

      });
    }
  }, {
    key: "getLayoutDivSize",
    value: function getLayoutDivSize(pinned, closed) {
      var div = pinned && !closed ? this.layoutDivPinned : this.layoutDivUnpinned;
      return {
        height: div.offsetHeight,
        width: div.offsetWidth
      };
    }
  }, {
    key: "toggleableSearch",
    value: function toggleableSearch(e, search) {
      if (e.ctrlKey) {
        this.setState({
          search: createInputSearch(search)
        });
        this.setSideTabId(_interfaces.SideTabId.Search);
      } else {
        var oldSelection = this.viewer.getSelection();

        if (oldSelection.search) {
          //look for matching groups and toggle them
          var result = (0, _toggleSearch.toggleSearch)(_sanddanceReact.SandDance.searchExpression.ensureSearchExpressionGroupArray(oldSelection.search), search);

          if (result.found) {
            //removing a group
            if (result.groups.length === 0) {
              this.doDeselect();
            } else {
              //select with new search removed
              this.doSelect(result.groups);
            }
          } else {
            //adding a new group
            if (e.altKey || e.shiftKey) {
              var group = true;

              if (e.altKey) {
                search.clause = '&&';
              } else if (e.shiftKey) {
                if (this.props.searchORDisabled) {
                  group = false;
                } else {
                  search.clause = '||';
                }
              }

              if (group) {
                result.groups.push(search);
                this.doSelect(result.groups);
              } else {
                this.doSelect(search);
              }
            } else {
              //replace
              this.doSelect(search);
            }
          }
        } else {
          this.doSelect(search);
        }
      }
    }
  }, {
    key: "doFilter",
    value: function doFilter(search) {
      this.viewer.filter(search);
    }
  }, {
    key: "doUnfilter",
    value: function doUnfilter() {
      this.viewer.reset();
    }
  }, {
    key: "doSelect",
    value: function doSelect(search) {
      this.viewer.select(search);
    }
  }, {
    key: "doDeselect",
    value: function doDeselect() {
      return this.viewer.deselect();
    }
  }, {
    key: "writeSnapshot",
    value: function writeSnapshot(snapshot, editIndex) {
      var selectedSnapshotIndex = this.state.selectedSnapshotIndex;
      var snapshots;

      if (editIndex >= 0) {
        snapshots = _toConsumableArray(this.state.snapshots);
        snapshots[editIndex] = snapshot;
        this.setState({
          snapshots: snapshots,
          selectedSnapshotIndex: selectedSnapshotIndex
        });
      } else {
        var note = snapshot.description;
        snapshots = this.state.snapshots.concat(snapshot);
        selectedSnapshotIndex = snapshots.length - 1;

        if (!this.state.sidebarClosed) {
          this.scrollSnapshotIntoView(selectedSnapshotIndex);
        }

        this.setState({
          sideTabId: _interfaces.SideTabId.Snapshots,
          snapshots: snapshots,
          selectedSnapshotIndex: selectedSnapshotIndex,
          note: note
        });
      }
    }
  }, {
    key: "scrollSnapshotIntoView",
    value: function scrollSnapshotIntoView(selectedSnapshotIndex) {
      var _this11 = this;

      clearTimeout(this.scrollSnapshotTimer);
      this.scrollSnapshotTimer = setTimeout(function () {
        var selectedSnapshotElement = _this11.div.querySelector(".snapshot:nth-child(".concat(selectedSnapshotIndex + 1, ")"));

        if (selectedSnapshotElement) {
          selectedSnapshotElement.scrollIntoView({
            behavior: 'smooth',
            block: 'nearest'
          });
        }
      }, 500);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.mounted) {
        this.props.mounted(this);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this12 = this;

      var _this$state = this.state,
          colorBin = _this$state.colorBin,
          columns = _this$state.columns,
          directColor = _this$state.directColor,
          facetStyle = _this$state.facetStyle,
          filter = _this$state.filter,
          hideAxes = _this$state.hideAxes,
          hideLegend = _this$state.hideLegend,
          scheme = _this$state.scheme,
          size = _this$state.size,
          totalStyle = _this$state.totalStyle,
          transform = _this$state.transform,
          chart = _this$state.chart,
          view = _this$state.view;
      var signalValues = this.state.signalValues;

      if (this.viewer) {
        signalValues = Object.assign(Object.assign({}, signalValues), this.viewer.getInsight().signalValues);
      }

      var insight = {
        colorBin: colorBin,
        columns: columns,
        directColor: directColor,
        facetStyle: facetStyle,
        filter: filter,
        hideAxes: hideAxes,
        hideLegend: hideLegend,
        scheme: scheme,
        signalValues: signalValues,
        size: size,
        totalStyle: totalStyle,
        transform: transform,
        chart: chart,
        view: view
      };
      var loaded = !!(this.state.columns && this.state.dataContent);
      var selectionState = this.viewer && this.viewer.getSelection() || {};
      var selectionSearch = selectionState && selectionState.search;
      var columnMapProps = this.getColumnMapBaseProps();
      var datas = {};
      datas[_dataScope.DataScopeId.AllData] = this.state.dataContent && this.state.dataContent.data;
      datas[_dataScope.DataScopeId.FilteredData] = this.state.filteredData;
      datas[_dataScope.DataScopeId.SelectedData] = selectionState && selectionState.selectedData;

      if (this.state.calculating) {
        requestAnimationFrame(function () {
          //allow render to complete
          if (_this12.state.calculating) {
            _this12.state.calculating();

            _this12.setState({
              calculating: null
            });
          }
        });
      }

      var theme = this.props.theme || '';
      var themePalette = _themes.themePalettes[theme];
      return React.createElement("div", {
        ref: function ref(div) {
          if (div) _this12.div = div;
        },
        className: _sanddanceReact.util.classList('sanddance-explorer', this.props.theme)
      }, React.createElement(_topbar.Topbar, {
        logoClickUrl: this.props.logoClickUrl,
        logoClickTarget: this.props.logoClickTarget,
        themePalette: themePalette,
        loaded: loaded,
        doDeselect: this.doDeselect.bind(this),
        doFilter: this.doFilter.bind(this),
        doUnfilter: this.doUnfilter.bind(this),
        filter: this.state.filter,
        selectionSearch: selectionSearch,
        selectionState: selectionState,
        buttons: this.props.topBarButtonProps,
        view: this.state.view,
        snapshots: this.state.snapshots,
        onSnapshotPreviousClick: function onSnapshotPreviousClick() {
          var selectedSnapshotIndex;

          if (_this12.state.selectedSnapshotIndex === -1) {
            selectedSnapshotIndex = _this12.state.snapshots.length - 1;
          } else {
            selectedSnapshotIndex = _this12.state.selectedSnapshotIndex;
            selectedSnapshotIndex--;

            if (selectedSnapshotIndex < 0) {
              selectedSnapshotIndex = _this12.state.snapshots.length - 1;
            }
          }

          _this12.handleReviveSnapshot(_this12.state.snapshots[selectedSnapshotIndex], selectedSnapshotIndex);
        },
        onSnapshotClick: function onSnapshotClick() {
          return _this12.snapshotEditor.editSnapshot();
        },
        onSnapshotNextClick: function onSnapshotNextClick() {
          var selectedSnapshotIndex;

          if (_this12.state.selectedSnapshotIndex === -1) {
            selectedSnapshotIndex = 0;
          } else {
            selectedSnapshotIndex = _this12.state.selectedSnapshotIndex;
            selectedSnapshotIndex++;

            if (selectedSnapshotIndex > _this12.state.snapshots.length - 1) {
              selectedSnapshotIndex = 0;
            }
          }

          _this12.handleReviveSnapshot(_this12.state.snapshots[selectedSnapshotIndex], selectedSnapshotIndex);
        },
        onViewClick: function onViewClick() {
          var view = _this12.state.view === '2d' ? '3d' : '2d';

          _this12.changeInsight({
            view: view
          });
        },
        onHomeClick: function onHomeClick() {
          return _this12.viewer.presenter.homeCamera();
        }
      }), React.createElement("div", {
        className: _sanddanceReact.util.classList('sanddance-main', this.state.sidebarPinned && 'pinned', this.state.sidebarClosed && 'closed', (insight.hideLegend || insight.directColor || !colorMapping(insight, this.state.dataContent && this.state.dataContent.columns)) && 'hide-legend')
      }, React.createElement("div", {
        ref: function ref(div) {
          if (div && !_this12.layoutDivUnpinned) _this12.layoutDivUnpinned = div;
        },
        className: "sanddance-layout-unpinned"
      }), React.createElement("div", {
        ref: function ref(div) {
          if (div && !_this12.layoutDivPinned) _this12.layoutDivPinned = div;
        },
        className: "sanddance-layout-pinned"
      }), !loaded && React.createElement("div", {
        className: "loading"
      }, React.createElement(_base.base.fabric.Spinner, {
        size: _base.base.fabric.SpinnerSize.large,
        label: _language.strings.loading
      })), React.createElement(_sidebar.Sidebar, {
        themePalette: themePalette,
        calculating: !!this.state.calculating,
        closed: this.state.sidebarClosed,
        hideSidebarControls: this.props.hideSidebarControls,
        pinned: this.state.sidebarPinned,
        disabled: !loaded,
        dataScopeProps: {
          themePalette: themePalette,
          compact: this.state.sidebarClosed,
          onCompactClick: function onCompactClick() {
            _this12.changeInsight({
              sidebarClosed: false,
              size: _this12.getLayoutDivSize(_this12.state.sidebarPinned, false)
            });
          },
          dataSet: this.props.datasetElement,
          dataCount: loaded && {
            all: this.state.dataContent && this.state.dataContent.data.length,
            filtered: this.state.filteredData && this.state.filteredData.length,
            selected: selectionState && selectionState.selectedData && selectionState.selectedData.length
          },
          active: this.state.sideTabId === _interfaces.SideTabId.Data,
          onDataScopeClick: function onDataScopeClick(dataScopeId) {
            return _this12.setSideTabId(_interfaces.SideTabId.Data, dataScopeId);
          },
          selectedDataScope: this.state.dataScopeId,
          disabled: !loaded
        },
        onSideTabClick: function onSideTabClick(sideTabId) {
          //collapse or toggle
          if (sideTabId === _interfaces.SideTabId.Collapse || _this12.state.sideTabId === sideTabId) {
            var _this12$state = _this12.state,
                dataScopeId = _this12$state.dataScopeId,
                sidebarClosed = _this12$state.sidebarClosed;

            if (sidebarClosed && sideTabId === _interfaces.SideTabId.Data) {
              dataScopeId = _this12.getBestDataScopeId();
            }

            sidebarClosed = !_this12.state.sidebarClosed;

            _this12.changeInsight({
              dataScopeId: dataScopeId,
              sidebarClosed: sidebarClosed,
              size: _this12.getLayoutDivSize(_this12.state.sidebarPinned, sidebarClosed)
            });
          } else if (sideTabId === _interfaces.SideTabId.Pin) {
            _this12.changeInsight({
              sidebarPinned: !_this12.state.sidebarPinned,
              size: _this12.getLayoutDivSize(!_this12.state.sidebarPinned, _this12.state.sidebarClosed)
            });
          } else {
            _this12.setSideTabId(sideTabId);
          }
        },
        selectedSideTab: this.state.sideTabId
      }, loaded && function () {
        switch (_this12.state.sideTabId) {
          case _interfaces.SideTabId.ChartType:
            {
              return React.createElement(_chart.Chart, Object.assign({
                collapseLabels: _this12.props.compactUI,
                tooltipExclusions: _this12.state.tooltipExclusions,
                toggleTooltipExclusion: function toggleTooltipExclusion(columnName) {
                  var tooltipExclusions = _toConsumableArray(_this12.state.tooltipExclusions);

                  var i = tooltipExclusions.indexOf(columnName);

                  if (i < 0) {
                    tooltipExclusions.push(columnName);
                  } else {
                    tooltipExclusions.splice(i, 1);
                  }

                  _this12.setState({
                    tooltipExclusions: tooltipExclusions
                  });

                  _this12.props.onTooltipExclusionsChanged && _this12.props.onTooltipExclusionsChanged(tooltipExclusions);
                },
                disabled: !loaded || _this12.state.sidebarClosed
              }, columnMapProps, {
                chart: _this12.state.chart,
                view: _this12.state.view,
                onChangeChartType: function onChangeChartType(chart) {
                  return _this12.changeChartType(chart);
                },
                insightColumns: _this12.state.columns,
                onChangeSignal: function onChangeSignal(role, column, name, value) {
                  return (0, _partialInsight4.saveSignalValuePref)(_this12.prefs, _this12.state.chart, role, column, name, value);
                }
              }));
            }

          case _interfaces.SideTabId.Color:
            {
              return React.createElement(_color.Color, Object.assign({
                compactUI: _this12.props.compactUI,
                specCapabilities: _this12.state.specCapabilities,
                disabled: !loaded || _this12.state.sidebarClosed
              }, columnMapProps, {
                dataContent: _this12.state.dataContent,
                scheme: _this12.state.scheme,
                colorBin: _this12.state.colorBin,
                colorBinSignal: _this12.viewer && _this12.viewer.vegaSpec && _this12.viewer.vegaSpec.signals.filter(function (s) {
                  return s.name === _sanddanceReact.SandDance.constants.SignalNames.ColorBinCount;
                })[0],
                colorReverseSignal: _this12.viewer && _this12.viewer.vegaSpec && _this12.viewer.vegaSpec.signals.filter(function (s) {
                  return s.name === _sanddanceReact.SandDance.constants.SignalNames.ColorReverse;
                })[0],
                colorColumn: _this12.state.columns.color,
                onColorBinChange: function onColorBinChange(colorBin) {
                  _this12.ignoreSelectionChange = true;

                  _this12.viewer.deselect().then(function () {
                    _this12.ignoreSelectionChange = false; //allow deselection to render

                    requestAnimationFrame(function () {
                      _this12.getColorContext = null;

                      _this12.changeInsight({
                        colorBin: colorBin
                      });

                      (0, _partialInsight4.savePref)(_this12.prefs, _this12.state.chart, 'color', _this12.state.columns.color, {
                        colorBin: colorBin
                      });
                    });
                  });
                },
                onColorSchemeChange: function onColorSchemeChange(scheme) {
                  _this12.changeColumnMapping('color', _this12.state.dataContent.columns.filter(function (c) {
                    return c.name === _this12.state.columns.color;
                  })[0], {
                    scheme: scheme
                  });

                  (0, _partialInsight4.savePref)(_this12.prefs, _this12.state.chart, 'color', _this12.state.columns.color, {
                    scheme: scheme
                  });
                },
                onColorBinCountChange: function onColorBinCountChange(value) {
                  var signalValues = {};
                  signalValues[_sanddanceReact.SandDance.constants.SignalNames.ColorBinCount] = value;
                  (0, _partialInsight4.savePref)(_this12.prefs, _this12.state.chart, 'color', _this12.state.columns.color, {
                    signalValues: signalValues
                  });
                },
                onColorReverseChange: function onColorReverseChange(value) {
                  _this12.getColorContext = null;
                  var signalValues = {};
                  signalValues[_sanddanceReact.SandDance.constants.SignalNames.ColorReverse] = value;
                },
                directColor: _this12.state.directColor,
                onDirectColorChange: function onDirectColorChange(directColor) {
                  _this12.changeInsight({
                    directColor: directColor,
                    calculating: function calculating() {
                      return _this12._resize();
                    }
                  });
                }
              }));
            }

          case _interfaces.SideTabId.Data:
            {
              var data = datas[_this12.state.dataScopeId];
              var itemVisible = true;

              switch (_this12.state.dataScopeId) {
                case _dataScope.DataScopeId.AllData:
                  {
                    var item = _this12.state.selectedItemIndex[_this12.state.dataScopeId];
                    itemVisible = _this12.state.dataContent && !_this12.state.filteredData || _this12.state.filteredData.indexOf(data[item]) >= 0;
                  }
              }

              return React.createElement(_dataBrowser.DataBrowser, {
                theme: _this12.props.theme,
                themePalette: themePalette,
                disabled: !loaded || _this12.state.sidebarClosed,
                columns: _this12.state.dataContent && _this12.state.dataContent.columns,
                data: data,
                displayName: _this12.state.dataFile && _this12.state.dataFile.displayName || _language.strings.defaultFileName,
                title: dataBrowserTitles[_this12.state.dataScopeId],
                nullMessage: dataBrowserNullMessages[_this12.state.dataScopeId],
                zeroMessage: dataBrowserZeroMessages[_this12.state.dataScopeId],
                index: _this12.state.selectedItemIndex[_this12.state.dataScopeId],
                itemVisible: itemVisible,
                dataExportHandler: _this12.props.dataExportHandler,
                selectedDataScope: _this12.state.dataScopeId,
                onDataScopeClick: function onDataScopeClick(dataScopeId) {
                  return _this12.setSideTabId(_interfaces.SideTabId.Data, dataScopeId);
                },
                onActivate: function onActivate(row, index) {
                  var selectedItemIndex = Object.assign({}, _this12.state.selectedItemIndex);
                  selectedItemIndex[_this12.state.dataScopeId] = index;

                  _this12.setState({
                    selectedItemIndex: selectedItemIndex
                  });

                  _this12.silentActivation(row);
                },
                onSearch: function onSearch(e, search) {
                  if (e.ctrlKey) {
                    _this12.setState({
                      sideTabId: _interfaces.SideTabId.Search,
                      search: search
                    });
                  } else {
                    _this12.doSelect(search);
                  }
                },
                bingSearchDisabled: _this12.props.bingSearchDisabled
              });
            }

          case _interfaces.SideTabId.Search:
            {
              return React.createElement(_search.Search, {
                collapseLabels: _this12.props.compactUI,
                themePalette: themePalette,
                disabled: !loaded || _this12.state.sidebarClosed,
                disableGroupOR: _this12.props.searchORDisabled,
                disableExpressionOR: _this12.props.searchORDisabled,
                initializer: {
                  columns: columnMapProps.allColumns,
                  search: _this12.state.search
                },
                autoCompleteDistinctValues: _this12.state.autoCompleteDistinctValues,
                onSelect: function onSelect(expr) {
                  return _this12.doSelect(expr);
                },
                data: _this12.state.dataContent.data
              });
            }

          case _interfaces.SideTabId.Snapshots:
            {
              return React.createElement(_snapshots.Snapshots, Object.assign({}, _this12.props.snapshotProps, {
                editor: _this12.snapshotEditor,
                themePalette: themePalette,
                explorer: _this12,
                snapshots: _this12.state.snapshots,
                selectedSnapshotIndex: _this12.state.selectedSnapshotIndex,
                onClearSnapshots: function onClearSnapshots() {
                  return _this12.setState({
                    snapshots: [],
                    selectedSnapshotIndex: -1
                  });
                },
                onWriteSnapshot: function onWriteSnapshot(s, i) {
                  return _this12.writeSnapshot(s, i);
                },
                onRemoveSnapshot: function onRemoveSnapshot(i) {
                  var snapshots = _toConsumableArray(_this12.state.snapshots);

                  snapshots.splice(i, 1);
                  var selectedSnapshotIndex = _this12.state.selectedSnapshotIndex;

                  if (i === selectedSnapshotIndex) {
                    selectedSnapshotIndex = -1;
                  } else if (selectedSnapshotIndex > i) {
                    selectedSnapshotIndex--;
                  }

                  _this12.setState({
                    snapshots: snapshots,
                    selectedSnapshotIndex: selectedSnapshotIndex
                  });
                },
                onSnapshotClick: function onSnapshotClick(snapshot, selectedSnapshotIndex) {
                  _this12.setState({
                    selectedSnapshotIndex: selectedSnapshotIndex
                  });

                  _this12.calculate(function () {
                    _this12.handleReviveSnapshot(snapshot, selectedSnapshotIndex);
                  });
                },
                onMoveUp: function onMoveUp(i) {
                  if (i > 0) {
                    var snapshots = _toConsumableArray(_this12.state.snapshots);

                    var temp = snapshots[i - 1];
                    snapshots[i - 1] = snapshots[i];
                    snapshots[i] = temp;
                    var selectedSnapshotIndex = _this12.state.selectedSnapshotIndex;

                    if (i === selectedSnapshotIndex) {
                      selectedSnapshotIndex = i - 1;
                    } else if (i - 1 === selectedSnapshotIndex) {
                      selectedSnapshotIndex = i;
                    }

                    _this12.setState({
                      snapshots: snapshots,
                      selectedSnapshotIndex: selectedSnapshotIndex
                    });
                  }
                },
                onMoveDown: function onMoveDown(i) {
                  if (i < _this12.state.snapshots.length - 1) {
                    var snapshots = _toConsumableArray(_this12.state.snapshots);

                    var temp = snapshots[i + 1];
                    snapshots[i + 1] = snapshots[i];
                    snapshots[i] = temp;
                    var selectedSnapshotIndex = _this12.state.selectedSnapshotIndex;

                    if (i === selectedSnapshotIndex) {
                      selectedSnapshotIndex = i + 1;
                    } else if (i + 1 === selectedSnapshotIndex) {
                      selectedSnapshotIndex = i;
                    }

                    _this12.setState({
                      snapshots: snapshots,
                      selectedSnapshotIndex: selectedSnapshotIndex
                    });
                  }
                }
              }));
            }

          case _interfaces.SideTabId.Settings:
            {
              return React.createElement(_settings.Settings, {
                explorer: _this12,
                dataFile: _this12.state.dataFile,
                scheme: _this12.state.scheme,
                hideLegend: _this12.state.hideLegend,
                onToggleLegend: function onToggleLegend(hideLegend) {
                  return _this12.setState({
                    hideLegend: hideLegend,
                    calculating: function calculating() {
                      return _this12._resize();
                    }
                  });
                },
                hideAxes: _this12.state.hideAxes,
                onToggleAxes: function onToggleAxes(hideAxes) {
                  return _this12.setState({
                    calculating: function calculating() {
                      return _this12.setState({
                        hideAxes: hideAxes
                      });
                    }
                  });
                },
                additionalSettings: _this12.props.additionalSettings
              }, _this12.props.systemInfoChildren);
            }
        }
      }()), loaded && React.createElement("div", {
        className: "sanddance-view"
      }, React.createElement(_sanddanceReact.SandDanceReact, {
        renderOptions: {
          initialColorContext: this.getColorContext && this.getColorContext(this.viewer.insight, insight),
          discardColorContextUpdates: function discardColorContextUpdates() {
            return _this12.discardColorContextUpdates;
          }
        },
        viewerOptions: this.viewerOptions,
        ref: function ref(reactViewer) {
          if (reactViewer) {
            _this12.viewer = reactViewer.viewer;
          }
        },
        onView: function onView(renderResult) {
          _this12.changespecCapabilities(renderResult.specResult.errors ? renderResult.specResult.specCapabilities : _this12.viewer.specCapabilities);

          _this12.getColorContext = function (oldInsight, newInsight) {
            if (!oldInsight && !newInsight) {
              return null;
            }

            if (!oldInsight || !newInsight) {
              return null;
            }

            if (oldInsight.scheme !== newInsight.scheme) {
              return null;
            }

            if (oldInsight.columns.color !== newInsight.columns.color) {
              return null;
            }

            if (oldInsight.directColor != newInsight.directColor) {
              return null;
            }

            return _this12.viewer.colorContexts && _this12.viewer.colorContexts[_this12.viewer.currentColorContext];
          }; //don't allow tabbing to the canvas


          (0, _canvas.removeTabIndex)(_this12.viewer);
          _this12.props.onView && _this12.props.onView();
        },
        onError: function onError(e) {
          _this12.props.onError && _this12.props.onError(e);
        },
        data: this.state.dataContent.data,
        insight: insight,
        onMount: function onMount(el) {
          return _this12.viewerMounted(el);
        }
      }), this.state.note && React.createElement("div", {
        className: 'sanddance-note'
      }, React.createElement(_iconButton.IconButton, {
        className: 'cancel',
        themePalette: themePalette,
        title: _language.strings.buttonClose,
        iconName: 'Cancel',
        onClick: function onClick() {
          return _this12.setState({
            note: null
          });
        }
      }), this.state.note)), React.createElement(_dialog.Dialog, {
        title: _language.strings.labelError,
        hidden: !this.state.errors,
        onDismiss: function onDismiss() {
          _this12.setState({
            errors: null
          });
        }
      }, this.state.errors && this.state.errors.map(function (error, i) {
        return React.createElement("div", {
          key: i
        }, error);
      })), React.createElement(_snapshotEditor.SnapshotEditor, Object.assign({
        ref: function ref(se) {
          return _this12.snapshotEditor = se;
        }
      }, this.props.snapshotProps, {
        explorer: this,
        onWriteSnapshot: function onWriteSnapshot(s, i) {
          return _this12.writeSnapshot(s, i);
        },
        themePalette: themePalette
      }))), this.state.positionedColumnMapProps && React.createElement(_clickableTextLayer.PositionedColumnMap, Object.assign({}, this.state.positionedColumnMapProps)));
    }
  }, {
    key: "getColumnMapBaseProps",
    value: function getColumnMapBaseProps() {
      var _this13 = this;

      var allColumns = this.state.dataContent && this.state.dataContent.columns.filter(function (c) {
        return !_sanddanceReact.SandDance.util.isInternalFieldName(c.name, true);
      });
      var quantitativeColumns = allColumns && allColumns.filter(function (c) {
        return c.quantitative;
      });
      var categoricalColumns = allColumns && allColumns.filter(function (c) {
        return !c.quantitative;
      });
      var props = {
        changeColumnMapping: function changeColumnMapping(role, columnOrRole, options) {
          var column;

          if (typeof columnOrRole === 'string') {
            //look up current insight
            var columnName = _this13.state.columns[columnOrRole];
            column = allColumns.filter(function (c) {
              return c.name === columnName;
            })[0];
          } else {
            column = columnOrRole;
          }

          _this13.changeColumnMapping(role, column, options);
        },
        facetStyle: this.state.facetStyle,
        totalStyle: this.state.totalStyle,
        allColumns: allColumns,
        quantitativeColumns: quantitativeColumns,
        categoricalColumns: categoricalColumns,
        specCapabilities: this.state.specCapabilities,
        explorer: this
      };
      return props;
    }
  }]);

  return Explorer;
}(React.Component);

exports.Explorer = Explorer;

function colorMapping(insight, columns) {
  if (columns && insight.columns && insight.columns.color) {
    return columns.filter(function (c) {
      return c.name === insight.columns.color;
    })[0];
  }
}
},{"react":"ccIB","./colorMap":"E67y","./base":"Vlbn","./colorScheme":"L8O2","./interfaces":"h2T5","./dialogs/chart":"NGSt","./dialogs/color":"N8IJ","./partialInsight":"tb7d","./dialogs/dataBrowser":"pJLc","./controls/dataScope":"OsNT","./defaults":"Tl9z","./controls/dialog":"cFWm","./columns":"f8v0","./mouseEvent":"yvMl","./controls/iconButton":"dQNc","./dialogs/search":"ozxe","./dataLoader":"f19h","./clickableTextLayer":"UUG7","@msrvida/chart-recommender":"i6UQ","./canvas":"Dryx","@msrvida/sanddance-react":"MjKu","./dialogs/settings":"zKGJ","./controls/sidebar":"f8Jx","./dialogs/snapshotEditor":"dSzJ","./dialogs/snapshots":"oc9r","./language":"hk5u","./themes":"CgE3","./toggleSearch":"yzxM","./controls/topbar":"Afi9"}],"Focm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  getEmbedHTML: true,
  SideTabId: true,
  use: true,
  capabilities: true,
  getColorSettingsFromThemePalette: true,
  themePalettes: true,
  SandDance: true,
  util: true,
  version: true
};
Object.defineProperty(exports, "getEmbedHTML", {
  enumerable: true,
  get: function () {
    return _dataExporter.getEmbedHTML;
  }
});
Object.defineProperty(exports, "SideTabId", {
  enumerable: true,
  get: function () {
    return _interfaces.SideTabId;
  }
});
Object.defineProperty(exports, "use", {
  enumerable: true,
  get: function () {
    return _base.use;
  }
});
Object.defineProperty(exports, "capabilities", {
  enumerable: true,
  get: function () {
    return _canvas.capabilities;
  }
});
Object.defineProperty(exports, "getColorSettingsFromThemePalette", {
  enumerable: true,
  get: function () {
    return _themes.getColorSettingsFromThemePalette;
  }
});
Object.defineProperty(exports, "themePalettes", {
  enumerable: true,
  get: function () {
    return _themes.themePalettes;
  }
});
Object.defineProperty(exports, "SandDance", {
  enumerable: true,
  get: function () {
    return _sanddanceReact.SandDance;
  }
});
Object.defineProperty(exports, "util", {
  enumerable: true,
  get: function () {
    return _sanddanceReact.util;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _version.version;
  }
});

var _dataExporter = require("./controls/dataExporter");

var _interfaces = require("./interfaces");

var _base = require("./base");

var _canvas = require("./canvas");

var _themes = require("./themes");

var _explorer = require("./explorer");

Object.keys(_explorer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _explorer[key];
    }
  });
});

var _sanddanceReact = require("@msrvida/sanddance-react");

var _version = require("./version");
},{"./controls/dataExporter":"l7po","./interfaces":"h2T5","./base":"Vlbn","./canvas":"Dryx","./themes":"CgE3","./explorer":"KeW6","@msrvida/sanddance-react":"MjKu","./version":"RvaL"}]},{},["Focm"], "SandDanceExplorer")